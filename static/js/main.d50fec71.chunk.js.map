{"version":3,"sources":["pages/Configuracoes/DisponibilidadeMedica.module.css","themes.js","services/api.js","context/AuthContext.jsx","pages/Cadastro/UnstyledTabsCustomized.js","img/logoAzulHoriz.png","img/photo-register.jpg","styles/Cadastro/index.js","pages/Cadastro/index.js","styles/Cadastro/Cadastro.js","pages/Cadastro/Cadastro2.js","components/FormDadosPessoais/CreateUserForm.js","components/FormEndereco/CreateAddressForm.js","components/FormPaciente/CreatePatientForm.js","components/FormMedico/index.js","pages/Cadastro/Cadastro3.js","img/photo-login.jpg","styles/Login/index.js","pages/Login/index.js","pages/RecoverAccount/index.js","styles/Login/Login.js","pages/Login/Login.js","components/NavBar/ListItemLink/ListItemLink.jsx","img/logoAzul.png","context/DrawerContext.jsx","components/NavBar/index.jsx","layouts/BaseLayout.jsx","pages/Dashboard/index.js","components/FormDadosPessoais/UpdateUserForm.js","components/FormEndereco/UpdateAddressForm.js","components/FormPaciente/UpdatePatientForm.js","pages/Perfil/index.js","styles/Configuracoes/index.js","components/Configuracoes/FormPaciente.js","pages/Configuracoes/index.js","pages/Configuracoes/DisponibilidadeMedica.jsx","styles/UsuariosListagem/index.js","pages/UsuariosListagem/index.js","pages/CheckNewDoctors/index.js","pages/UsuariosListagem/UsuariosEditar.js","pages/ResetPassword/index.js","components/Prontuario/Registro.js","components/Prontuario/index.js","components/Prontuario/FormProntuario.js","components/CardConsulta/index.js","pages/Consultas/AgendarConsulta/index.js","pages/Consultas/MinhasConsultas/index.js","pages/UsuariosListagem/ConsultasListagem/index.js","pages/UsuariosListagem/ConsultasListagem/AdicionarConsulta2.js","img/notFound.png","pages/NotFoundPage/index.js","components/ReactBigCalendar/index.js","pages/Agenda/index.js","components/PatientsAppointmentHistory/index.js","components/DoctorsAppointmentHistory/index.js","pages/HistoricoConsultas/index.js","routes.js","App.js","index.js"],"names":["module","exports","theme","createTheme","palette","primary","light","blue","main","dark","contrastText","secondary","cyan","background","default","paper","typography","fontFamily","join","overrides","MuiCssBaseline","margin","padding","api","axios","create","baseURL","createSession","email","senha","a","post","AuthContext","createContext","useAuthContext","useContext","AuthProvider","children","navigate","useNavigate","useState","usuario","setUsuario","loading","setLoading","res","usuarioLogado","data","accessToken","localStorage","setItem","JSON","stringify","defaults","headers","Authorization","get","aguardando_validacao","alert","logout","console","error","removeItem","useEffect","recoveredUsuario","getItem","token","parse","Provider","value","authenticated","login","styled","TabUnstyled","tabUnstyledClasses","selected","buttonUnstyledClasses","disabled","TabPanelUnstyled","TabsListUnstyled","ButtonRegister","Button","Container","display","flexDirection","DoubleItem","justifyContent","InputItem","TextField","color","marginBottom","width","Logo","LogoContainer","alignItems","PaperStyled","Paper","height","Principal","Grid","backgroundImage","PhotoCadastro","backgroundRepeat","backgroundSize","RegisterContainer","Text","Title","alignText","Cadastro","nome","setNome","dt_nascimento","setDt_nascimento","genero","setGenero","tipo","setTipo","setEmail","telefone","setTelefone","setSenha","confirmasenha","setConfirmaSenha","cep","setCep","numero","setNumero","complemento","setComplemento","cidade","setCidade","estado","setEstado","peso","setPeso","altura","setAltura","alergia","setAlergia","doenca","setDoenca","vicio","setVicio","medicamento","setMedicamento","crm","setCrm","open","setOpen","open1","setOpen1","open2","setOpen2","e","preventDefault","handleClick","handleClick1","response","log","handleClick2","setTimeout","passoUm","document","getElementById","hidden","passoDois","handleClose","event","reason","handleClose1","handleClose2","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","style","Alert","variant","severity","sx","src","logo","alt","id","Box","label","onChange","target","InputProps","startAdornment","InputAdornment","position","AccountBox","FormControl","InputLabel","Select","MenuItem","type","InputLabelProps","shrink","LocalPhone","Email","Lock","KeyboardArrowLeft","onClick","ChevronRight","onBlur","cepLimpo","replace","fetch","then","json","localidade","uf","LocationOn","LooksOne","Add","LocationCity","MonitorWeight","Height","PestControl","Coronavirus","SmokingRooms","Medication","handleCadastro","alignSelf","maxWidth","Left","flex","photoRegister","backgroundPosition","breakpoints","down","Right","Form","flexWrap","BirthDate","border","borderRadius","paddingLeft","paddingRight","backgroundColor","fontSize","Div","up","ItemLeft","marginRight","ItemRight","marginLeft","Cadastro2","step1","formik","useFormik","initialValues","name","gender","userType","birthDate","telephone","password","confirmPassword","address","complement","city","number","state","weight","medicine","disease","allergies","addiction","validationSchema","yup","required","onSubmit","values","register","step2","fullWidth","size","ChevronLeft","handleSubmit","touched","errors","handleChange","handleBlur","labelId","borderColor","logradouro","CreateUserForm","handleOnChange","handleOnSetUserId","xs","minWidth","FormEndereco","userId","id_usuario","length","checkCep","CreatePatientForm","doenca_cronica","FormMedico","specialties","setSpecialties","selectedSpecialties","setSelectedSpecialties","result","verifyCrmInput","querySelector","verifySpecialtiesInput","map","specialty","id_medico","id_especialidade","getAllSpecialties","marginTop","Autocomplete","multiple","object","item","push","options","getOptionLabel","option","filterSelectedOptions","renderInput","params","placeholder","Cadastro3","setUserType","setUserId","step","setStep","n","RadioGroup","row","FormControlLabel","control","Radio","labelPlacement","CreateAddressForm","ButtonLogin","LoginContainer","PhotoLogin","Login","isShowing","setIsShowing","columns","elevation","Https","endAdornment","Visibility","VisibilityOff","textDecoration","to","RecoverAccount","handleClose3","sm","md","lg","tpye","esqueceuASenha","photoLogin","Img","LinkStyled","Link","cursor","DivCadastreSe","DivEsqueceuASenha","showPassword","setShowPassword","Modal","top","left","transform","boxShadow","p","fontWeight","underline","ListItemLink","props","ListItemButton","ListItemIcon","Icon","icon","ListItemText","DrawerContext","useDrawerContext","DrawerProvider","isDrawerOpen","setIsDrawerOpen","toggleDrawerOpen","useCallback","oldDrawerOpen","NavBar","exit","useTheme","smDown","useMediaQuery","getType","Drawer","spacing","Divider","List","Dashboard","Group","MedicalServices","InsertInvitation","DateRange","EventNote","Person","ExitToApp","BaseLayout","title","toolbar","AppBar","IconButton","Menu","Typography","gap","UpdateUserForm","toggleModal","update","put","align","UpdatePatientForm","bgcolor","Perfil","user","setUser","setAddress","patient","setPatient","openModalUser","setOpenModalUser","openModalAddress","setOpenModalAddress","openModalPatient","setOpenModalPatient","handleOpenModalUser","handleOpenModalAddress","handleOpenModalPatient","getPatient","window","confirm","getUser","getUserType","getAddress","dayjs","format","completo","UpdateAddressForm","FormPaciente","DisponibilidadeMedica","diasSelecionados","setDiasSelecionados","setDiasDaSemana","inicioExpediente","setInicioExpediente","terminoExpediente","setTerminoExpediente","inicioAlmoco","setInicioAlmoco","terminoAlmoco","setTerminoAlmoco","disponibilidade","setDisponibilidade","horas","aux","forEach","includes","dia","sort","querySelectorAll","checked","parseInt","auxAlmoco","i","hrMenosUm","String","hrAnterior","enviar","delete","checkBoxes","selecionados","el","toString","termino","inicioAlmo","selecionado","inicio","intervalo","dia_selecionado","getDisponibilidadeMedica","getDiasDaSemana","className","styles","htmlFor","hr","hora","ButtonTool","ButtonBox","UsuariosListagem","users","setUsers","loadUsers","location","reload","setInterval","disableElevation","startIcon","TableContainer","component","Table","TableHead","TableRow","TableCell","TableBody","u","scope","Date","toLocaleDateString","criado_em","toLocaleString","atualizado_em","Event","BorderColor","remove","Delete","CheckNewDoctors","newDoctors","setNewDoctors","getNewDoctors","getAllSpecialities","doctor","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","deleteMedicoEspecialidade","aprovarCadastro","reprovarCadastro","useStyles","makeStyles","buttonBack","borderStyle","container","containerItem","UsuariosEditar","classes","setDt_Nascimento","useParams","getUsuario","ArrowBack","formControl","NativeSelect","atualizar","ResetPassword","getEmail","url","pathname","substring","lastIndexOf","status","href","marginY","Registro","id_paciente","dt_hr_consulta","motivo_consulta","tempo_doente","sintoma","resumo","Prontuario","idPaciente","prontuarios","setProntuarios","registro","setRegistro","getProntuarioById","getProntuario","paciente","medico","Pagination","count","textContent","FormProntuario","motivoConsulta","setMotivoConsulta","tempoDoente","setTempoDoente","setSintoma","setResumo","showForm","setShowForm","showMessage","setShowMessage","rows","maxlength","CardConsulta","id_consulta","url_consulta","setPaciente","setMedico","especialidade","setEspecialidade","typeUser","setTypeUser","limitTime","setLimitTime","agora","setAgora","formattedDate","setFormattedDate","openConsulta","setOpenConsulta","openProntuario","setOpenProntuario","handleOpenConsulta","handleCloseConsulta","handleCloseProntuario","getDoctor","getSpecialtie","getPaciente","limitTimeForChange","subtract","done","Card","frameborder","allow","alignContent","gutterBottom","CardContent","CardActions","add","AgendarConsulta","MinhasConsultas","appointments","setAppointments","filterActived","setFilterActived","getAppointments","ButtonGroup","actived","appointment","ConsultasListagem","consultas","setConsultas","results","others","loadConsultas","consulta","AdicionarConsulta2","especialidades","setEspecialidades","medicos","setMedicos","idEspecialidade","setIdEspecialidade","idMedico","setIdMedico","setData","setDiaDaSemana","setHoras","setHora","getDoctorsBySpecialty","getSpecialtieByDoctor","getSpecialties","getDoctors","horasDisponiveisMedico","day","min","criarConsulta","NotFoundPage","NotFound","full","moment","locale","localizer","momentLocalizer","ReactBigCalendar","eventsData","setEventsData","items","start","_d","end","useMemo","defaultDate","formats","weekdayFormat","date","culture","views","selectable","defaultView","events","onSelectEvent","ReactDOM","render","StrictMode","Agenda","PatientsAppointmentHistory","React","page","setPage","rowsPerPage","setRowsPerPage","setRows","overflow","maxHeight","stickyHeader","column","slice","hover","role","tabIndex","code","TablePagination","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","DoctorsAppointmentHistory","HistoricoConsultas","AppRoutes","Private","Logged","path","exact","element","App","ThemeProvider","CssBaseline"],"mappings":"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","file":"static/js/main.d50fec71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DisponibilidadeMedica_container__RLmc9\",\"filtrosDias\":\"DisponibilidadeMedica_filtrosDias__1eY1d\",\"expediente\":\"DisponibilidadeMedica_expediente__22SyB\",\"almoco\":\"DisponibilidadeMedica_almoco__1Agqp\",\"dia\":\"DisponibilidadeMedica_dia__264IN\",\"leftSide\":\"DisponibilidadeMedica_leftSide__3M1j0\",\"rightSide\":\"DisponibilidadeMedica_rightSide__1Nc0D\",\"submit\":\"DisponibilidadeMedica_submit__2_bih\"};","import { blue, cyan } from '@mui/material/colors'\r\nimport { createTheme } from '@mui/material'\r\n\r\nimport '@fontsource/roboto'\r\nimport '@fontsource/ubuntu'\r\n\r\n\r\nexport const theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      light: blue[300],\r\n      main: blue[600],\r\n      dark: blue[900],\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: cyan[300],\r\n      main: cyan[600],\r\n      dark: cyan[900],\r\n      contrastText: '#000',\r\n    },\r\n    background: {\r\n      default: '#f7f6f3',\r\n      paper: '#fff',\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: [\r\n      'Roboto',\r\n      'Ubuntu',\r\n      'Roboto Slab',\r\n      'sans-serif'\r\n    ].join(','),\r\n  },\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      \"@global\": {\r\n        \"*, *::before, *::after\": {\r\n          margin: 0,\r\n          padding: 0\r\n        },\r\n      },\r\n    },\r\n  },\r\n})\r\n","import axios from 'axios'\r\n\r\nexport const api = axios.create({\r\n  baseURL: \"http://localhost:3333\"\r\n})\r\n\r\nexport const createSession = async (email, senha) => {\r\n  return await api.post('/login', { email: email, senha: senha })\r\n}\r\n\r\n/*api.interceptors.request.use(async config => {\r\n  const token = localStorage.getItem(\"token\")\r\n\r\n  if (token) {\r\n    config.headers.authorization = `Bearer ${token}`\r\n  }\r\n\r\n  return config\r\n})*/\r\n\r\n\r\nexport default api","import { createContext, useEffect, useContext, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { api, createSession } from '../services/api'\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport const useAuthContext = () => {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport default function AuthProvider({ children }) {\r\n    const navigate = useNavigate()\r\n    const [usuario, setUsuario] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const recoveredUsuario = localStorage.getItem('usuario')\r\n        const token = localStorage.getItem('token')\r\n\r\n        if (recoveredUsuario && token) {\r\n            setUsuario(JSON.parse(recoveredUsuario))\r\n            api.defaults.headers.Authorization = `Bearer ${token}`\r\n        }\r\n\r\n        setLoading(false)\r\n    }, [])\r\n\r\n    async function login(email, senha) {\r\n        try {\r\n            const res = await createSession(email, senha)\r\n\r\n            const usuarioLogado = res.data\r\n            const accessToken = res.data.accessToken\r\n\r\n            localStorage.setItem('usuario', JSON.stringify(usuarioLogado))\r\n            localStorage.setItem('token', accessToken)\r\n\r\n            api.defaults.headers.Authorization = `Bearer ${accessToken}`\r\n            \r\n            setUsuario(usuarioLogado)\r\n\r\n            const result = await api.get(`/medico/verifyapproval/${email}`)\r\n            if(result.data.aguardando_validacao != null){\r\n                alert('Usuário Aguardando Aprovação, Você será notificado quando seu acesso for liberado!')\r\n                logout()\r\n            }\r\n\r\n            navigate('/inicio')\r\n        } catch (err) {\r\n            console.error(\"ops! ocorreu um erro\" + err)\r\n            alert('Usuário e/ou Senha Incorreto(s)!')\r\n        }\r\n    }\r\n\r\n    function logout(){\r\n        localStorage.removeItem('token')\r\n        api.defaults.headers.Authorization = null\r\n        setUsuario(null)\r\n        navigate('/')\r\n    }  \r\n\r\n    return (\r\n        <AuthContext.Provider value={{ authenticated: !!usuario, usuario, loading, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}","import * as React from 'react';\r\nimport { styled } from '@mui/system';\r\nimport TabsUnstyled from '@mui/base/TabsUnstyled';\r\nimport TabsListUnstyled from '@mui/base/TabsListUnstyled';\r\nimport TabPanelUnstyled from '@mui/base/TabPanelUnstyled';\r\nimport { buttonUnstyledClasses } from '@mui/base/ButtonUnstyled';\r\nimport TabUnstyled, { tabUnstyledClasses } from '@mui/base/TabUnstyled';\r\n\r\n\r\nconst blue = {\r\n  50: '#F0F7FF',\r\n  100: '#C2E0FF',\r\n  200: '#80BFFF',\r\n  300: '#66B2FF',\r\n  400: '#3399FF',\r\n  500: '#007FFF',\r\n  600: '#0072E5',\r\n  700: '#0059B2',\r\n  800: '#004C99',\r\n  900: '#003A75',\r\n};\r\n\r\nconst Tab = styled(TabUnstyled)`\r\n  font-family: IBM Plex Sans, sans-serif;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 0.875rem;\r\n  font-weight: bold;\r\n  background-color: transparent;\r\n  width: 100%;\r\n  padding: 12px 16px;\r\n  margin: 6px 6px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  &:hover {\r\n    background-color: ${blue[400]};\r\n  }\r\n\r\n  &:focus {\r\n    color: #fff;\r\n    border-radius: 3px;\r\n    outline: 2px solid ${blue[200]};\r\n    outline-offset: 2px;\r\n  }\r\n\r\n  &.${tabUnstyledClasses.selected} {\r\n    background-color: ${blue[50]};\r\n    color: ${blue[600]};\r\n  }\r\n\r\n  &.${buttonUnstyledClasses.disabled} {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst TabPanel = styled(TabPanelUnstyled)`\r\n  width: 100%;\r\n  font-family: IBM Plex Sans, sans-serif;\r\n  font-size: 0.875rem;\r\n`;\r\n\r\nconst TabsList = styled(TabsListUnstyled)`\r\n  min-width: 320px;\r\n  background-color: ${blue[500]};\r\n  border-radius: 8px;\r\n  margin-bottom: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  align-content: space-between;\r\n`;\r\n\r\nexport default function UnstyledTabsCustomized() {\r\n  return (\r\n    <TabsUnstyled defaultValue={0}>\r\n      <TabsList>\r\n        <Tab>1º Passo</Tab>\r\n        <Tab>2º Passo</Tab>\r\n        <Tab>3º Passo Paciente</Tab>\r\n        <Tab>3º Passo Médico</Tab>\r\n      </TabsList>\r\n      <TabPanel value={0}>BLA</TabPanel>\r\n      <TabPanel value={1}>BLA2</TabPanel>\r\n      <TabPanel value={2}>BLA3</TabPanel>\r\n      <TabPanel value={3}>BLA4</TabPanel>\r\n    </TabsUnstyled>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/logoAzulHoriz.8d3bb988.png\";","export default __webpack_public_path__ + \"static/media/photo-register.94dd238f.jpg\";","import { styled } from '@mui/system'\r\nimport { Button, Grid, Paper, TextField } from '@mui/material'\r\nimport PhotoCadastro from '../../img/photo-register.jpg'\r\n\r\nexport const ButtonRegister = styled(Button)({\r\n    margin: '0px 8px 8px 8px'\r\n})\r\n\r\nexport const Container = styled('div')({\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n})\r\n\r\nexport const DoubleItem = styled('div')({\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n})\r\n\r\nexport const InputBox = styled(TextField)({\r\n    color: 'black'\r\n})\r\n\r\nexport const InputItem = styled(TextField)({\r\n    display: 'flex',\r\n    marginBottom: 16,\r\n    width: '100%'\r\n})\r\n\r\nexport const Logo = styled('img')({\r\n    width: 400,\r\n    margin: '32px 8px 16px 8px'\r\n})\r\n\r\nexport const LogoContainer = styled(Container)({\r\n    alignItems: 'center'\r\n})\r\n\r\nexport const PaperStyled = styled(Paper)({\r\n    padding: 24,\r\n    height: '90vh',\r\n    width: 640,\r\n    margin: '20px auto'\r\n\r\n})\r\n\r\nexport const Principal = styled(Grid)({\r\n    backgroundImage: `url(${PhotoCadastro})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    display: 'flex',\r\n    height: '100vh'\r\n\r\n})\r\n\r\nexport const RegisterContainer  = styled(Container)({\r\n    justifyContent: 'center'\r\n})\r\n\r\nexport const Text = styled('div')({\r\n    margin: '8px 0px 16px 0px'\r\n})\r\n\r\nexport const Title = styled('h1')({\r\n    alignText: 'center',\r\n    margin: 8\r\n})","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { \r\n    AccountBox, Email, Lock, LocalPhone, LocationOn, LooksOne, Add, LocationCity, MonitorWeight, \r\n    Height,  PestControl, Coronavirus, SmokingRooms, Medication, ChevronRight, KeyboardArrowLeft\r\n} from '@mui/icons-material'\r\nimport api from '../../services/api'\r\nimport { Box, FormControl, InputAdornment, InputLabel, MenuItem, Select, Snackbar, IconButton, Alert } from '@mui/material'\r\nimport UnstyledTabsCustomized from './UnstyledTabsCustomized'\r\nimport logo from '../../img/logoAzulHoriz.png'\r\nimport {\r\n    ButtonRegister,\r\n    Container,\r\n    DoubleItem,\r\n    InputItem,\r\n    Logo,\r\n    LogoContainer,\r\n    PaperStyled,\r\n    Principal,\r\n    RegisterContainer,\r\n    Text,\r\n    Title\r\n } from '../../styles/Cadastro'\r\n\r\nfunction Cadastro() {\r\n    const navigate = useNavigate()\r\n    const [nome, setNome] = useState(\"\")\r\n    const [dt_nascimento, setDt_nascimento] = useState(\"\")\r\n    const [genero, setGenero] = useState(\"\")\r\n    const [tipo, setTipo] = useState(\"Paciente\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [telefone, setTelefone] = useState(\"\")\r\n    const [senha, setSenha] = useState(\"\")\r\n    const [confirmasenha, setConfirmaSenha] = useState(\"\")\r\n    const [cep, setCep] = useState(\"\")\r\n    const [numero, setNumero] = useState(\"\")\r\n    const [complemento, setComplemento] = useState(\"\")\r\n    const [cidade, setCidade] = useState(\"\")\r\n    const [estado, setEstado] = useState(\"\")\r\n    const [peso, setPeso] = useState(\"\")\r\n    const [altura, setAltura] = useState(\"\")\r\n    const [alergia, setAlergia] = useState(\"\")\r\n    const [doenca, setDoenca] = useState(\"\")\r\n    const [vicio, setVicio] = useState(\"\")\r\n    const [medicamento, setMedicamento] = useState(\"\")\r\n    const [crm, setCrm] = useState(\"\")\r\n    const [open, setOpen] = useState(false);\r\n    const [open1, setOpen1] = useState(false);\r\n    const [open2, setOpen2] = useState(false);\r\n\r\n    async function handleCadastro(e) {\r\n        e.preventDefault()\r\n        const data = {nome, dt_nascimento, genero, telefone, email, senha, tipo}\r\n\r\n        if(!nome || !dt_nascimento || !genero || !telefone || !email || !senha || !tipo || !cep || !numero || !cidade || !estado || (tipo == 'Paciente' ? (!peso || !altura) : (!crm))) {\r\n            if(senha != confirmasenha){\r\n                handleClick()\r\n            }\r\n\r\n            handleClick1()\r\n        }else {\r\n            try {\r\n                const response = await api.post(\"/cadastrar\", {nome, dt_nascimento, genero, telefone, email, senha, tipo, cep, numero, complemento, cidade, estado, peso, altura, alergia, doenca, vicio, medicamento, crm});\r\n\r\n                console.log(response.data)\r\n                handleClick2()\r\n                setTimeout(() => {\r\n                    navigate('/');\r\n                }, 3000)\r\n            } catch (err) {\r\n                console.error(\"ops! ocorreu um erro: \" + err);\r\n            }\r\n        }\r\n    }\r\n\r\n    function checkCep(e){\r\n        const cepLimpo = cep.replace(/\\D/g, '')\r\n        fetch(`https://viacep.com.br/ws/${cepLimpo}/json/`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setCidade(data.localidade)\r\n                setEstado(data.uf)\r\n        })\r\n    }\r\n\r\n    function passoUm(){\r\n        document.getElementById(\"passoUm\").hidden = false;\r\n\r\n        document.getElementById(\"passoDois\").hidden = true;\r\n        document.getElementById(\"passoTres\").hidden = true;\r\n    }\r\n\r\n    function passoDois(){\r\n        document.getElementById(\"passoDois\").hidden = false;\r\n\r\n        document.getElementById(\"passoUm\").hidden = true;\r\n        document.getElementById(\"passoTres\").hidden = true;\r\n    }\r\n\r\n    function passoTres(){\r\n        document.getElementById(\"passoTres\").hidden = false;\r\n\r\n        document.getElementById(\"passoUm\").hidden = true;\r\n        document.getElementById(\"passoDois\").hidden = true;\r\n\r\n        if(tipo == 'Paciente'){\r\n            document.getElementById(\"medico\").hidden = true;\r\n            document.getElementById(\"paciente\").hidden = false;\r\n        }else{\r\n            document.getElementById(\"paciente\").hidden = true;\r\n            document.getElementById(\"medico\").hidden = false;\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\t\r\n    \r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    \r\n    const handleClick1 = () => {\r\n        setOpen1(true);\r\n    };\t\r\n    \r\n    const handleClose1 = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen1(false);\r\n    };\r\n\r\n    const handleClick2 = () => {\r\n        setOpen2(true);\r\n    };\t\r\n    \r\n    const handleClose2 = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen2(false);\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        passoUm();\r\n    },[])\r\n\r\n    return (\r\n        <Principal>\r\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                style={{width: '40%'}}\r\n            >\r\n                <Alert variant=\"filled\" severity=\"warning\" onClose={handleClose} sx={{ width: '100%' }}>Senhas não correspondem.</Alert>\r\n            </Snackbar>\r\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={open1}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose1}\r\n                style={{width: '40%'}}\r\n            >\r\n                <Alert variant=\"filled\" severity=\"warning\" onClose={handleClose1} sx={{ width: '100%' }}>Preencha todos os campos.</Alert>\r\n            </Snackbar>\r\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={open2}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose2}\r\n                style={{width: '40%'}}\r\n            >\r\n                <Alert variant=\"filled\" severity=\"success\" onClose={handleClose2} sx={{ width: '100%' }}>Cadastro foi realizado.</Alert>\r\n            </Snackbar>\r\n            <PaperStyled>\r\n                <RegisterContainer>\r\n                    <LogoContainer>\r\n                        <Logo src={logo} alt=\"Telemedicina\" />\r\n                        <Title>Cadastre-se</Title>\r\n                    </LogoContainer>\r\n                    <div id=\"passoUm\">\r\n                        {/* <UnstyledTabsCustomized/> */}\r\n                        <DoubleItem>\r\n                            <Box>\r\n                                <InputItem\r\n                                    style={{ width: 416 }}\r\n                                    variant=\"filled\"\r\n                                    label=\"Informe seu nome\"\r\n                                    value={nome}\r\n                                    onChange={e => setNome(e.target.value)}\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <AccountBox />\r\n                                        </InputAdornment> ),}}\r\n                                />\r\n                            </Box>\r\n                            <FormControl variant=\"filled\">\r\n                                <InputLabel>Gênero</InputLabel>\r\n                                <Select\r\n                                    style={{ width: 208 }}                        \r\n                                    value={genero}\r\n                                    onChange={e => setGenero(e.target.value)}\r\n                                >\r\n                                    <MenuItem value=\"H\">Homem</MenuItem>\r\n                                    <MenuItem value=\"M\">Mulher</MenuItem>\r\n                                    <MenuItem value=\"O\">Outro</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </DoubleItem>\r\n                        <DoubleItem>\r\n                            <InputItem\r\n                                style={{ width: 208 }}\r\n                                variant=\"filled\"\r\n                                type=\"date\"\r\n                                label=\"Informe sua data de nascimento\"\r\n                                value={dt_nascimento}\r\n                                onChange={e => setDt_nascimento(e.target.value)}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                            <Box>\r\n                                <FormControl variant=\"filled\">\r\n                                    <InputLabel>Tipo de Usuário</InputLabel>\r\n                                    <Select\r\n                                        style={{ width: 192 }} \r\n                                        value={tipo}\r\n                                        onChange={e => setTipo(e.target.value)}\r\n                                    >\r\n                                        <MenuItem value=\"Medico\">Médico</MenuItem>\r\n                                        <MenuItem value=\"Paciente\">Paciente</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            <Box>\r\n                                <InputItem\r\n                                    style={{ width: 208 }} \r\n                                    type=\"tel\"\r\n                                    variant=\"filled\"\r\n                                    label=\"Informe seu telefone\"\r\n                                    value={telefone}\r\n                                    onChange={e => setTelefone(e.target.value)}\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <LocalPhone />\r\n                                        </InputAdornment> ),}}\r\n                                />\r\n                            </Box>\r\n                        </DoubleItem>\r\n                        <Box>\r\n                            <InputItem\r\n                                type=\"email\"\r\n                                variant=\"filled\"\r\n                                label=\"Informe seu email\"\r\n                                value={email}\r\n                                onChange={e => setEmail(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <Email />\r\n                                    </InputAdornment> ),}}\r\n                            />\r\n                        </Box>\r\n                        <DoubleItem>\r\n                            <Box>\r\n                                <InputItem\r\n                                    type=\"password\"\r\n                                    variant=\"filled\"\r\n                                    label=\"Informe sua senha\"\r\n                                    value={senha}\r\n                                    onChange={e => setSenha(e.target.value)}\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Lock/>\r\n                                        </InputAdornment> ),}}\r\n                                />\r\n                            </Box>\r\n                            <Box>\r\n                                <InputItem\r\n                                    type=\"password\"\r\n                                    variant=\"filled\"\r\n                                    label=\"Digite a senha novamente\"\r\n                                    value={confirmasenha}\r\n                                    onChange={e => setConfirmaSenha(e.target.value)}\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Lock/>\r\n                                        </InputAdornment> ),}}\r\n                                />\r\n                            </Box>\r\n                        </DoubleItem>\r\n                        \r\n                        <Container sx={{display: 'flex', justifyContent: 'space-between'}}>\r\n                            <DoubleItem>\r\n                            <ButtonRegister variant='contained' color=\"primary\" id=\"setaEsquerda\" disabled={true}><KeyboardArrowLeft/></ButtonRegister>\r\n                                <ButtonRegister variant='contained' color=\"primary\" id=\"setaDireita\" onClick={passoDois}><ChevronRight/></ButtonRegister>\r\n                            </DoubleItem>\r\n                        </Container>\r\n                        \r\n                    </div>\r\n                    <div id=\"passoDois\">\r\n                        <DoubleItem>\r\n                                <Box>\r\n                                    <InputItem\r\n                                        style={{ width: 300 }}\r\n                                        variant=\"filled\"\r\n                                        label=\"Informe seu cep\"\r\n                                        value={cep}\r\n                                        onBlur={checkCep}\r\n                                        onChange={e => setCep(e.target.value)}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <LocationOn />\r\n                                            </InputAdornment> ),}}\r\n                                    />\r\n                                </Box>\r\n                                <Box>\r\n                                    <InputItem\r\n                                        style={{ width: 300 }}\r\n                                        variant=\"filled\"\r\n                                        label=\"Número\"\r\n                                        value={numero}\r\n                                        onChange={e => setNumero(e.target.value)}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <LooksOne />\r\n                                            </InputAdornment> ),}}\r\n                                    />\r\n                                </Box>\r\n                        </DoubleItem>\r\n\r\n                        <Box>\r\n                            <InputItem\r\n                                style={{ width: '100%' }}\r\n                                variant=\"filled\"\r\n                                label=\"Complemento\"\r\n                                value={complemento}\r\n                                onChange={e => setComplemento(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <Add />\r\n                                    </InputAdornment> ),}}\r\n                            />\r\n                        </Box>\r\n                        <DoubleItem>\r\n                            <Box>\r\n                                <InputItem\r\n                                    style={{ width: 300 }}\r\n                                    variant=\"filled\"\r\n                                    label=\"Cidade\"\r\n                                    value={cidade}\r\n                                    onChange={e => setCidade(e.target.value)}\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <LocationCity />\r\n                                        </InputAdornment> ),}}\r\n                                />\r\n                            </Box>\r\n                            <Box>\r\n                                <InputItem\r\n                                    style={{ width: 300 }}\r\n                                    variant=\"filled\"\r\n                                    label=\"Estado\"\r\n                                    value={estado}\r\n                                    onChange={e => setEstado(e.target.value)}\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <LocationCity />\r\n                                        </InputAdornment> ),}}\r\n                                />\r\n                            </Box>\r\n                        </DoubleItem>\r\n\r\n                        <Container sx={{display: 'flex', justifyContent: 'space-between'}}>\r\n                            <DoubleItem>\r\n                            <ButtonRegister variant='contained' color=\"primary\" id=\"setaEsquerda\" onClick={passoUm}><KeyboardArrowLeft/></ButtonRegister>\r\n                                <ButtonRegister variant='contained' color=\"primary\" id=\"setaDireita\" onClick={passoTres}><ChevronRight/></ButtonRegister>\r\n                            </DoubleItem>\r\n                        </Container>\r\n                    </div>\r\n                    <div id=\"passoTres\">\r\n                        <div id=\"paciente\">\r\n                            <DoubleItem>\r\n                                <Box>\r\n                                    <InputItem\r\n                                        style={{ width: 300 }}\r\n                                        variant=\"filled\"\r\n                                        label=\"Peso\"\r\n                                        value={peso}\r\n                                        onChange={e => setPeso(e.target.value)}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <MonitorWeight />\r\n                                            </InputAdornment> ),}}\r\n                                    />\r\n                                </Box>\r\n                                <Box>\r\n                                    <InputItem\r\n                                        style={{ width: 300 }}\r\n                                        variant=\"filled\"\r\n                                        label=\"Altura\"\r\n                                        value={altura}\r\n                                        onChange={e => setAltura(e.target.value)}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <Height />\r\n                                            </InputAdornment> ),}}\r\n                                    />\r\n                                </Box>\r\n                            </DoubleItem>\r\n                            <DoubleItem>\r\n                                <Box>\r\n                                    <InputItem\r\n                                        style={{ width: 300 }}\r\n                                        variant=\"filled\"\r\n                                        label=\"Alergia(s)\"\r\n                                        value={alergia}\r\n                                        onChange={e => setAlergia(e.target.value)}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                < PestControl />\r\n                                            </InputAdornment> ),}}\r\n                                    />\r\n                                </Box>\r\n                                <Box>\r\n                                    <InputItem\r\n                                        style={{ width: 300 }}\r\n                                        variant=\"filled\"\r\n                                        label=\"Doença(s) cronica\"\r\n                                        value={doenca}\r\n                                        onChange={e => setDoenca(e.target.value)}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <Coronavirus />\r\n                                            </InputAdornment> ),}}\r\n                                    />\r\n                                </Box>                            \r\n                            </DoubleItem>\r\n                            <DoubleItem>\r\n                                <Box>\r\n                                    <InputItem\r\n                                        style={{ width: 300 }}\r\n                                        variant=\"filled\"\r\n                                        label=\"Vicio(s)\"\r\n                                        value={vicio}\r\n                                        onChange={e => setVicio(e.target.value)}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <SmokingRooms />\r\n                                            </InputAdornment> ),}}\r\n                                    />\r\n                                </Box>\r\n                                <Box>\r\n                                    <InputItem\r\n                                        style={{ width: 300 }}\r\n                                        variant=\"filled\"\r\n                                        label=\"Medicamento(s)\"\r\n                                        value={medicamento}\r\n                                        onChange={e => setMedicamento(e.target.value)}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <Medication />\r\n                                            </InputAdornment> ),}}\r\n                                    />\r\n                                </Box>\r\n                            </DoubleItem>\r\n                        </div>\r\n                        <div id=\"medico\">\r\n                            <Box>\r\n                                <InputItem\r\n                                    style={{ width: 300 }}\r\n                                    variant=\"filled\"\r\n                                    label=\"CRM\"\r\n                                    value={crm}\r\n                                    onChange={e => setCrm(e.target.value)}\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <LooksOne />\r\n                                        </InputAdornment> ),}}\r\n                                />\r\n                            </Box>\r\n                                    \r\n                        </div>\r\n                        <Container sx={{display: 'flex', justifyContent: 'space-between'}}>\r\n                            <DoubleItem>\r\n                            <ButtonRegister variant='contained' color=\"primary\" id=\"setaEsquerda\" onClick={passoDois}><KeyboardArrowLeft/></ButtonRegister>\r\n                                <ButtonRegister variant='contained' color=\"primary\" id=\"setaDireita\" disabled={true}><ChevronRight/></ButtonRegister>\r\n                            </DoubleItem>\r\n                        </Container>\r\n                        <Container sx={{display: 'flex'}}>\r\n                            <ButtonRegister variant=\"contained\" color=\"primary\" type=\"submit\" onClick={e => handleCadastro(e)}>\r\n                                Confirmar Cadastro\r\n                            </ButtonRegister>\r\n                        </Container>\r\n                    </div>\r\n                    \r\n                    <Container>\r\n                        <Text style={{alignSelf: 'center'}}>Você já possui uma conta?</Text>\r\n                        <ButtonRegister variant='outlined' color=\"primary\" onClick={() => navigate('/')}>\r\n                            Fazer Login\r\n                        </ButtonRegister>\r\n                    </Container>\r\n                </RegisterContainer>\r\n            </PaperStyled>\r\n        </Principal>\r\n    )\r\n}\r\n\r\nexport default Cadastro\r\n","import {styled} from '@mui/system'\r\nimport photoRegister from '../../img/photo-register.jpg'\r\n\r\nexport const Container = styled('div')({\r\n    display: 'flex', \r\n    height: '100vh',\r\n    width: '100vw', \r\n    maxWidth: '1440px',\r\n})\r\n\r\nexport const Left = styled('div')(({theme}) => ({\r\n    flex: 1, \r\n    backgroundImage: `url(${photoRegister})`, \r\n    backgroundPosition: 'center', \r\n    backgroundSize: 'cover',\r\n    [theme.breakpoints.down('md')]: {\r\n        display: 'none',\r\n    },\r\n}))\r\n\r\nexport const Right = styled('div')({\r\n    flex: 1, \r\n    display: 'flex', \r\n    flexDirection: 'column', \r\n    alignItems: 'center', \r\n    justifyContent: 'center'\r\n})\r\n\r\nexport const Form = styled('form')({\r\n    width: '90%', \r\n    display: 'flex', \r\n    flexDirection: 'column',\r\n    flexWrap: 'wrap',\r\n})\r\n\r\nexport const BirthDate = styled('input')(({theme}) => ({\r\n    width: '100%',\r\n    height: '40px', \r\n    color: 'rgba(0, 0, 0, 0.6)',\r\n    border: '1px solid #C2C1BF',\r\n    borderRadius: '4px',\r\n    paddingLeft: '14px',\r\n    paddingRight: '10px',\r\n    backgroundColor: '#F7F6F3',\r\n    fontSize: '16px',  \r\n}))\r\n\r\nexport const Div = styled('div')(({theme}) => ({\r\n    display: 'flex',\r\n    [theme.breakpoints.up('xs')]: {\r\n        // > 600px\r\n        marginBottom: '1rem',\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n        // < 600px\r\n        flexDirection: 'column',        \r\n    },\r\n}))\r\n\r\nexport const ItemLeft = styled('div')(({theme}) => ({\r\n    flex: 1,\r\n    \r\n    [theme.breakpoints.up('sm')]: {\r\n        marginRight: '5px',   \r\n    },\r\n\r\n    [theme.breakpoints.down('sm')]: {\r\n        marginBottom: '1rem',        \r\n    },\r\n}))\r\n\r\nexport const ItemRight = styled('div')(({theme}) => ({\r\n    flex: 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n        marginLeft: '5px',   \r\n    },\r\n}))\r\n\r\n","import {useEffect, useState} from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport {TextField, Button, Select, MenuItem, InputLabel, FormControl, Snackbar, IconButton, Alert } from '@mui/material';\r\nimport {ChevronLeft, ChevronRight} from '@mui/icons-material'\r\n\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from 'yup';\r\n\r\nimport api from '../../services/api'\r\nimport logo from '../../img/logoAzulHoriz.png'\r\n\r\nimport {\r\n    Container,\r\n    Left,\r\n    Right,\r\n    Form,\r\n    BirthDate,\r\n    Div,\r\n    ItemLeft,\r\n    ItemRight,\r\n} from '../../styles/Cadastro/Cadastro'\r\n\r\nlet Cadastro2 = () => {\r\n    const navigate = useNavigate()\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        step1();\r\n    },[])\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          name: \"\",\r\n          gender: \"\",\r\n          userType: \"\",\r\n          birthDate: \"\",\r\n          telephone: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n          cep: \"\",\r\n          address: \"\",\r\n          complement: \"\",\r\n          city: \"\",\r\n          number: \"\",\r\n          state: \"\",\r\n          height: \"\",\r\n          weight: \"\",\r\n          medicine: \"\",\r\n          disease: \"\",\r\n          allergies: \"\",\r\n          addiction: \"\",\r\n          crm: \"\"\r\n        },\r\n        validationSchema: yup.object({\r\n          name: yup\r\n            .string()\r\n            .required(\"O campo é obrigatório.\"),\r\n          gender: yup\r\n            .string()\r\n            .required(\"O campo é obrigatório.\"),\r\n          userType: yup\r\n            .string() \r\n            .required(\"O campo é obrigatório.\"),\r\n          birthDate: yup\r\n            .string()\r\n            .required(\"O campo é obrigatório.\"),\r\n          telephone: yup\r\n            .string()\r\n            .required(\"O campo é obrigatório.\"),\r\n          email: yup\r\n            .string()\r\n            .email(\"E-mail inválido.\")\r\n            .required(\"O campo é obrigatório.\"),\r\n          password: yup\r\n            .string()\r\n            .required(\"O campo é obrigatório.\"),\r\n          confirmPassword: yup\r\n            .string()\r\n            .required(\"O campo é obrigatório.\"),\r\n          cep: yup\r\n            .string()\r\n            .required(\"O campo é obrigatório.\"),\r\n          address: yup\r\n            .string()\r\n            .required(\"O campo é obrigatório.\"),\r\n          complement: yup\r\n            .string(),\r\n          city: yup\r\n            .string()\r\n            .required(\"O campo é obrigatório.\"),\r\n          number: yup\r\n            .string()\r\n            .required(\"Obrigatório.\"),\r\n          state: yup\r\n            .string()\r\n            .required(\"O campo é obrigatório.\"),\r\n          height: yup\r\n            .string(),\r\n          weight: yup\r\n            .string(),\r\n          medicine: yup\r\n            .string(),\r\n          disease: yup\r\n            .string(),\r\n          allergies: yup\r\n            .string(),\r\n          addiction: yup\r\n            .string(),\r\n          crm: yup\r\n            .string(),\r\n        }),\r\n        onSubmit: (values) => {\r\n            register(values)\r\n        }\r\n    });\r\n    \r\n    function checkCep(){\r\n        let cep = formik.values.cep\r\n        const cepLimpo = cep.replace(/\\D/g, '')\r\n        fetch(`https://viacep.com.br/ws/${cepLimpo}/json/`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                formik.values.address = data.logradouro\r\n                formik.values.city = data.localidade\r\n                formik.values.state = data.uf\r\n        })\r\n    }\r\n    \r\n    async function register({name, birthDate, gender, telephone, email, password, userType, cep, number, complement, city, state, weight, height, allergies, disease, addiction, medicine, crm}){       \r\n        await api.post(\"/cadastrar\", {\r\n            nome: name, \r\n            dt_nascimento: birthDate, \r\n            genero: gender, \r\n            telefone: telephone, \r\n            email, \r\n            senha: password, \r\n            tipo: userType, \r\n            cep, \r\n            numero: number, \r\n            complemento: complement, \r\n            cidade: city, \r\n            estado: state, \r\n            peso: weight, \r\n            altura: height, \r\n            alergia: allergies, \r\n            doenca: disease, \r\n            vicio: addiction, \r\n            medicamento: medicine, \r\n            crm\r\n        });\r\n\r\n        handleClick();\r\n        setTimeout(() => {\r\n            navigate('/')\r\n        }, 3000)\r\n    }\r\n\r\n    function step1(){\r\n        document.getElementById(\"step1\").hidden = false;\r\n        document.getElementById(\"step2\").hidden = true;\r\n        document.getElementById(\"step3\").hidden = true;\r\n    }\r\n\r\n    function step2(){\r\n        document.getElementById(\"step2\").hidden = false;\r\n        document.getElementById(\"step1\").hidden = true;\r\n        document.getElementById(\"step3\").hidden = true;\r\n    }\r\n\r\n    function step3(){\r\n        document.getElementById(\"step3\").hidden = false;\r\n        document.getElementById(\"step1\").hidden = true;\r\n        document.getElementById(\"step2\").hidden = true;\r\n\r\n        if(formik.values.userType == 'Paciente'){\r\n            document.getElementById(\"medico\").hidden = true;\r\n            document.getElementById(\"paciente\").hidden = false;\r\n        }else{\r\n            document.getElementById(\"paciente\").hidden = true;\r\n            document.getElementById(\"medico\").hidden = false;\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\t\r\n    \r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    return(\r\n        <Container>\r\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                style={{width: '40%'}}\r\n            >\r\n                <Alert variant=\"filled\" severity=\"success\" onClose={handleClose} sx={{ width: '100%' }}>Cadastro Realizado.</Alert>\r\n            </Snackbar>\r\n            <Left>\r\n                <Button fullWidth variant=\"contained\" size=\"large\" onClick={() => navigate('/')} style={{borderRadius: '0px'}}><ChevronLeft fontSize=\"large\" /> Voltar</Button>\r\n            </Left>\r\n\r\n            <Right>\r\n                <img src={logo} alt=\"Logo\" style={{width: '50%'}}/>\r\n                <h1 style={{margin: '1rem'}}>Criar Conta</h1>\r\n\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                    <div id=\"step1\">\r\n                        <h3 style={{margin: 0, marginBottom: '1rem'}}>Dados Pessoais</h3>\r\n                        <Div style={{flexDirection: 'column'}}>\r\n                            <TextField \r\n                                fullWidth \r\n                                error={formik.touched.name && formik.errors.name}\r\n                                size=\"small\"\r\n                                id=\"name\"\r\n                                name=\"name\"\r\n                                type=\"text\"\r\n                                label=\"Nome\" \r\n                                variant=\"outlined\" \r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.name}\r\n                            />\r\n                            {formik.touched.name && formik.errors.name ? (\r\n                                <div style={{color: 'red'}}>{formik.errors.name}</div>\r\n                            ) : null}\r\n                        </Div>\r\n\r\n                        <Div>\r\n                            <ItemLeft>\r\n                                <FormControl variant=\"outlined\" fullWidth> \r\n                                    <InputLabel size=\"small\">Gênero</InputLabel>\r\n                                        <Select\r\n                                            size=\"small\"\r\n                                            labelId=\"genero\"\r\n                                            id=\"gender\"\r\n                                            name=\"gender\"\r\n                                            label=\"Genero\"\r\n                                            error={formik.touched.gender && formik.errors.gender}\r\n                                            onChange={formik.handleChange}\r\n                                            onBlur={formik.handleBlur}\r\n                                            value={formik.values.gender} \r\n                                        >\r\n                                            <MenuItem value=\"H\">Homem</MenuItem>\r\n                                            <MenuItem value=\"M\">Mulher</MenuItem>\r\n                                            <MenuItem value=\"O\">Outro</MenuItem>\r\n                                        </Select>\r\n                                </FormControl>\r\n                                {formik.touched.gender && formik.errors.gender ? (\r\n                                    <div style={{color: 'red'}}>{formik.errors.gender}</div>\r\n                                ) : null}\r\n                            </ItemLeft>\r\n\r\n                            <ItemRight>\r\n                                <FormControl variant=\"outlined\" fullWidth>\r\n                                    <InputLabel size=\"small\">Tipo de Usuário</InputLabel>\r\n                                        <Select\r\n                                            size=\"small\"\r\n                                            labelId=\"userType\"\r\n                                            id=\"userType\"\r\n                                            name=\"userType\"\r\n                                            label=\"Tipo de Usuário\"\r\n                                            error={formik.touched.userType && formik.errors.userType}\r\n                                            onChange={formik.handleChange}\r\n                                            onBlur={formik.handleBlur}\r\n                                            value={formik.values.userType} \r\n                                        >\r\n                                            <MenuItem value=\"Paciente\">Paciente</MenuItem>\r\n                                            <MenuItem value=\"Medico\">Médico</MenuItem>\r\n                                        </Select>\r\n                                </FormControl>\r\n                                {formik.touched.userType && formik.errors.userType ? (\r\n                                    <div style={{color: 'red'}}>{formik.errors.userType}</div>\r\n                                ) : null}\r\n                            </ItemRight>\r\n                        </Div>\r\n\r\n                       <Div>\r\n                           <ItemLeft>\r\n                                <BirthDate \r\n                                    type=\"date\" \r\n                                    id=\"birthDate\" \r\n                                    name=\"birthDate\"\r\n                                    style={formik.touched.birthDate && formik.errors.birthDate ? {borderColor: 'red'} : {backgroundColor: 'none'}}\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value={formik.values.birthDate}\r\n                                />\r\n                                {formik.touched.birthDate && formik.errors.birthDate ? (\r\n                                    <div style={{color: 'red'}}>{formik.errors.birthDate}</div>\r\n                                ) : null}\r\n                            </ItemLeft>\r\n\r\n                            <ItemRight>\r\n                                <TextField \r\n                                    fullWidth\r\n                                    error={formik.touched.telephone && formik.errors.telephone}\r\n                                    size=\"small\"\r\n                                    id=\"telephone\"\r\n                                    name=\"telephone\"\r\n                                    type=\"text\"\r\n                                    label=\"Telefone\" \r\n                                    variant=\"outlined\" \r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value={formik.values.telephone}\r\n                                />\r\n                                {formik.touched.telephone && formik.errors.telephone ? (\r\n                                    <div style={{color: 'red'}}>{formik.errors.telephone}</div>\r\n                                ) : null}\r\n                            </ItemRight>\r\n                        </Div>\r\n\r\n                        <Div style={{flexDirection: 'column'}}>\r\n                            <TextField \r\n                                fullWidth \r\n                                error={formik.touched.email && formik.errors.email}\r\n                                size=\"small\"\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                label=\"E-mail\" \r\n                                variant=\"outlined\" \r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.email}\r\n                            />\r\n                            {formik.touched.email && formik.errors.email ? (\r\n                                <div style={{color: 'red'}}>{formik.errors.email}</div>\r\n                            ) : null}\r\n                        </Div>\r\n                    \r\n\r\n                        <Div>\r\n                           <ItemLeft>\r\n                                <TextField \r\n                                    fullWidth \r\n                                    error={formik.touched.password && formik.errors.password}\r\n                                    size=\"small\"\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    label=\"Senha\" \r\n                                    variant=\"outlined\" \r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value={formik.values.password}\r\n                                />    \r\n                                {formik.touched.password && formik.errors.password ? (\r\n                                    <div style={{color: 'red'}}>{formik.errors.password}</div>\r\n                                ) : null}\r\n                            </ItemLeft>\r\n                            \r\n                            <ItemRight>\r\n                                <TextField \r\n                                    fullWidth \r\n                                    error={formik.touched.confirmPassword && formik.errors.confirmPassword}\r\n                                    size=\"small\"\r\n                                    id=\"confirmPassword\"\r\n                                    name=\"confirmPassword\"\r\n                                    type=\"password\"\r\n                                    label=\"Confirme a Senha\" \r\n                                    variant=\"outlined\" \r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value={formik.values.confirmPassword}\r\n                                /> \r\n                                {formik.touched.confirmPassword && formik.errors.confirmPassword ? (\r\n                                    <div style={{color: 'red'}}>{formik.errors.confirmPassword}</div>\r\n                                ) : null}\r\n                            </ItemRight>\r\n                        </Div>\r\n\r\n                        <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                            <Button variant='contained' color=\"primary\" id=\"setaEsquerda\" disabled={true}> <ChevronLeft/> </Button>\r\n                            <Button variant='contained' color=\"primary\" id=\"setaDireita\" onClick={step2}> <ChevronRight/> </Button>\r\n                        </div> \r\n                    </div>\r\n\r\n                    <div id=\"step2\">\r\n                        <h3 style={{margin: 0, marginBottom: '1rem'}}>Endereço</h3>\r\n                        \r\n                        <Div style={{flexDirection: 'column'}}>\r\n                            <TextField \r\n                                fullWidth \r\n                                error={formik.touched.cep && formik.errors.cep}\r\n                                size=\"small\"\r\n                                id=\"cep\"\r\n                                name=\"cep\"\r\n                                type=\"text\"\r\n                                label=\"Cep\" \r\n                                variant=\"outlined\" \r\n                                onChange={formik.handleChange}\r\n                                onBlur={\r\n                                    checkCep\r\n                                }\r\n                                value={formik.values.cep}\r\n                            />\r\n                            {formik.touched.cep && formik.errors.cep ? (\r\n                                <div style={{color: 'red'}}>{formik.errors.cep}</div>\r\n                            ) : null}\r\n                        </Div>\r\n\r\n                        <Div>\r\n                           <ItemLeft style={{flex: 4}}>\r\n                                <TextField \r\n                                        fullWidth \r\n                                        error={formik.touched.address && formik.errors.address}\r\n                                        size=\"small\"\r\n                                        id=\"address\"\r\n                                        name=\"address\"\r\n                                        type=\"text\"\r\n                                        label=\"Endereço\" \r\n                                        variant=\"outlined\" \r\n                                        onChange={formik.handleChange}\r\n                                        onBlur={formik.handleBlur}\r\n                                        value={formik.values.address}\r\n                                        disabled\r\n                                />\r\n                                {formik.touched.address && formik.errors.address ? (\r\n                                    <div style={{color: 'red'}}>{formik.errors.address}</div>\r\n                                ) : null}\r\n                            </ItemLeft>\r\n\r\n                            <ItemRight>\r\n                                <TextField \r\n                                    fullWidth \r\n                                    error={formik.touched.number && formik.errors.number}\r\n                                    size=\"small\"\r\n                                    id=\"text\"\r\n                                    name=\"number\"\r\n                                    type=\"text\"\r\n                                    label=\"Número\" \r\n                                    variant=\"outlined\" \r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value={formik.values.number}\r\n                                />  \r\n                                {formik.touched.number && formik.errors.number ? (\r\n                                    <div style={{color: 'red'}}>{formik.errors.number}</div>\r\n                                ) : null}\r\n                            </ItemRight>\r\n                        </Div>\r\n\r\n\r\n                        <Div style={{flexDirection: 'column'}}>\r\n                            <TextField \r\n                                fullWidth \r\n                                size=\"small\"\r\n                                id=\"complement\"\r\n                                name=\"complement\"\r\n                                type=\"text\"\r\n                                label=\"Complemento\" \r\n                                variant=\"outlined\" \r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.complement}\r\n                            />\r\n                        </Div>\r\n\r\n                        <Div>\r\n                           <ItemLeft>\r\n                                <TextField \r\n                                    fullWidth \r\n                                    error={formik.touched.city && formik.errors.city}\r\n                                    size=\"small\"\r\n                                    id=\"city\"\r\n                                    name=\"city\"\r\n                                    type=\"text\"\r\n                                    label=\"Cidade\" \r\n                                    variant=\"outlined\" \r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value={formik.values.city}\r\n                                    disabled\r\n                                />\r\n                                {formik.touched.city && formik.errors.city ? (\r\n                                    <div style={{color: 'red'}}>{formik.errors.city}</div>\r\n                                ) : null}\r\n                            </ItemLeft>\r\n\r\n                            <ItemRight>\r\n                                <TextField \r\n                                    fullWidth \r\n                                    error={formik.touched.state && formik.errors.state}\r\n                                    size=\"small\"\r\n                                    id=\"state\"\r\n                                    name=\"state\"\r\n                                    type=\"text\"\r\n                                    label=\"Estado\" \r\n                                    variant=\"outlined\" \r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value={formik.values.state}\r\n                                    disabled\r\n                                />\r\n                                {formik.touched.state && formik.errors.state ? (\r\n                                    <div style={{color: 'red'}}>{formik.errors.state}</div>\r\n                                ) : null}\r\n                            </ItemRight>\r\n                        </Div>\r\n\r\n                        <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                            <Button variant='contained' color=\"primary\" id=\"setaEsquerda\" onClick={step1}> <ChevronLeft/> </Button>\r\n                            <Button variant='contained' color=\"primary\" id=\"setaDireita\" onClick={step3}> <ChevronRight/> </Button>\r\n                        </div> \r\n                    </div>\r\n\r\n                    <div id=\"step3\">\r\n                        <h3 style={{margin: 0, marginBottom: '1rem'}}>Dados Médicos</h3>\r\n                        <div id=\"paciente\">\r\n                            <Div>\r\n                                <ItemLeft>\r\n                                    <TextField  \r\n                                        fullWidth\r\n                                        error={formik.touched.height && formik.errors.height}\r\n                                        size=\"small\"\r\n                                        id=\"height\"\r\n                                        name=\"height\"\r\n                                        type=\"text\"\r\n                                        label=\"Altura\" \r\n                                        variant=\"outlined\" \r\n                                        onChange={formik.handleChange}\r\n                                        onBlur={formik.handleBlur}\r\n                                        value={formik.values.height}\r\n                                    /> \r\n                                    {formik.touched.height && formik.errors.height ? (\r\n                                        <div style={{color: 'red'}}>{formik.errors.height}</div>\r\n                                    ) : null}\r\n                                </ItemLeft>\r\n\r\n                                <ItemRight>\r\n                                    <TextField  \r\n                                        fullWidth\r\n                                        error={formik.touched.weight && formik.errors.weight}\r\n                                        size=\"small\"\r\n                                        id=\"weight\"\r\n                                        name=\"weight\"\r\n                                        type=\"text\"\r\n                                        label=\"Peso\" \r\n                                        variant=\"outlined\" \r\n                                        onChange={formik.handleChange}\r\n                                        onBlur={formik.handleBlur}\r\n                                        value={formik.values.weight}\r\n                                    />\r\n                                    {formik.touched.weight && formik.errors.weight ? (\r\n                                        <div style={{color: 'red'}}>{formik.errors.weight}</div>\r\n                                    ) : null}\r\n                                </ItemRight>\r\n                            </Div>\r\n\r\n                            <Div style={{flexDirection: 'column'}}>\r\n                                <TextField \r\n                                    fullWidth \r\n                                    size=\"small\"\r\n                                    id=\"medicine\"\r\n                                    name=\"medicine\"\r\n                                    type=\"text\"\r\n                                    label=\"Medicamento(s)\" \r\n                                    variant=\"outlined\" \r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value={formik.values.medicine}\r\n                                />\r\n                            </Div>\r\n\r\n                            <Div style={{flexDirection: 'column'}}>\r\n                                <TextField \r\n                                    fullWidth \r\n                                    size=\"small\"\r\n                                    id=\"disease\"\r\n                                    name=\"disease\"\r\n                                    type=\"text\"\r\n                                    label=\"Doença(s) Crônicas \" \r\n                                    variant=\"outlined\" \r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value={formik.values.disease}/>\r\n                            </Div>\r\n\r\n                            <Div>\r\n                                <ItemLeft>\r\n                                    <TextField \r\n                                        fullWidth \r\n                                        size=\"small\"\r\n                                        id=\"allergies\"\r\n                                        name=\"allergies\"\r\n                                        type=\"text\"\r\n                                        label=\"Alergia(s)\" \r\n                                        variant=\"outlined\" \r\n                                        onChange={formik.handleChange}\r\n                                        onBlur={formik.handleBlur}\r\n                                        value={formik.values.allergies}\r\n                                    />\r\n                                </ItemLeft>\r\n\r\n                                <ItemRight>\r\n                                    <TextField \r\n                                        fullWidth \r\n                                        size=\"small\"\r\n                                        id=\"addiction\"\r\n                                        name=\"addiction\"\r\n                                        type=\"text\"\r\n                                        label=\"Vicio(s)\" \r\n                                        variant=\"outlined\" \r\n                                        onChange={formik.handleChange}\r\n                                        onBlur={formik.handleBlur}\r\n                                        value={formik.values.addiction}\r\n                                    />\r\n                                </ItemRight>\r\n                            </Div>\r\n                        </div>\r\n\r\n                        <div id=\"medico\">\r\n                            <TextField\r\n                                fullWidth \r\n                                style={{marginBottom: '1rem'}}\r\n                                variant=\"outlined\" \r\n                                label=\"CRM\"\r\n                                type=\"text\"\r\n                                error={formik.touched.crm && formik.errors.crm}\r\n                                id=\"crm\"\r\n                                name=\"crm\"\r\n                                size=\"small\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.crm}\r\n                            />\r\n                            {formik.touched.crm && formik.errors.crm ? (\r\n                                <div style={{color: 'red'}}>{formik.errors.crm}</div>\r\n                            ) : null}\r\n                        </div>\r\n\r\n                        <Button fullWidth variant=\"contained\" style={{marginBottom: '1rem'}} onClick={formik.handleSubmit}>\r\n                            Confirmar Cadastro\r\n                        </Button>\r\n                                \r\n                        <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                            <Button variant='contained' color=\"primary\" id=\"setaEsquerda\" onClick={step2}> <ChevronLeft/> </Button>\r\n                            <Button variant='contained' color=\"primary\" id=\"setaDireita\" disabled> <ChevronRight/> </Button>\r\n                        </div> \r\n                    </div>\r\n                      \r\n                </Form>  \r\n                             \r\n            </Right>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Cadastro2","import {TextField, Button, Select, MenuItem, InputLabel, FormControl } from '@mui/material';\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from 'yup';\r\n\r\nimport api from '../../services/api'\r\n\r\nimport {\r\n    Form,\r\n    Div,\r\n    BirthDate,\r\n} from '../../styles/Cadastro/Cadastro'\r\n\r\nfunction CreateUserForm({handleOnChange, handleOnSetUserId, type}){\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n        name: \"\",\r\n        birthDate: \"\",\r\n        gender: \"\",\r\n        telephone: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        tipo: type\r\n        },\r\n        validationSchema: yup.object({\r\n        name: yup\r\n            .string()\r\n            .required(\"O campo é obrigatório.\"),\r\n        birthDate: yup\r\n            .string()\r\n            .required(\"O campo é obrigatório.\"),\r\n        gender: yup\r\n            .string()\r\n            .required(\"O campo é obrigatório.\"),\r\n        telephone: yup\r\n            .string()\r\n            .required(\"O campo é obrigatório.\"),\r\n        email: yup\r\n            .string()\r\n            .email(\"E-mail inválido.\")\r\n            .required(\"O campo é obrigatório.\"),\r\n        password: yup\r\n            .string()\r\n            .required(\"O campo é obrigatório.\"),\r\n        confirmPassword: yup\r\n            .string()\r\n            .required(\"O campo é obrigatório.\"),\r\n        }),\r\n        onSubmit: (values) => {\r\n            create(values)\r\n        }\r\n    });\r\n\r\n    async function create({name, birthDate, gender, telephone, email, password}){     \r\n        let res\r\n        if(type === \"Medico\"){\r\n            res = await api.post(\"/usuario/createUser\", {\r\n                nome: name, \r\n                dt_nascimento: birthDate,\r\n                genero: gender, \r\n                telefone: telephone, \r\n                email,\r\n                senha: password,\r\n                tipo: type,\r\n                aguardando_validacao: 1\r\n            });\r\n        }else{\r\n            res = await api.post(\"/usuario/createUser\", {\r\n                nome: name, \r\n                dt_nascimento: birthDate,\r\n                genero: gender, \r\n                telefone: telephone, \r\n                email,\r\n                senha: password,\r\n                tipo: type\r\n            });\r\n        }\r\n        \r\n        handleOnSetUserId(res.data.id)\r\n        handleOnChange(2)\r\n    }\r\n\r\n    return(\r\n        <Form onSubmit={formik.handleSubmit} xs={12}>\r\n            <h3 style={{margin: 0, marginBottom: '1rem'}}>Dados Pessoais</h3>\r\n            <Div style={{flexDirection: 'column'}}>\r\n                <TextField \r\n                    fullWidth \r\n                    error={formik.touched.name && formik.errors.name}\r\n                    size=\"small\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    label=\"Nome\" \r\n                    variant=\"outlined\" \r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.name}\r\n                />\r\n                {formik.touched.name && formik.errors.name ? (\r\n                    <div style={{color: 'red'}}>{formik.errors.name}</div>\r\n                ) : null}\r\n            </Div>\r\n\r\n\r\n            <Div>\r\n                <BirthDate \r\n                    type=\"date\" \r\n                    id=\"birthDate\" \r\n                    name=\"birthDate\"\r\n                    style={formik.touched.birthDate && formik.errors.birthDate ? {borderColor: 'red'} : {backgroundColor: 'none'}}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.birthDate}\r\n                />\r\n                {formik.touched.birthDate && formik.errors.birthDate ? (\r\n                    <></>\r\n                ) : null}\r\n            </Div>\r\n\r\n            <div style={{display: 'flex', flexWrap: 'wrap'}}>\r\n                <Div style={{flex: 1, flexDirection: 'column', minWidth: '200px'}}>\r\n                    <FormControl variant=\"outlined\" fullWidth> \r\n                        <InputLabel size=\"small\">Gênero</InputLabel>\r\n                            <Select\r\n                                size=\"small\"\r\n                                labelId=\"genero\"\r\n                                id=\"gender\"\r\n                                name=\"gender\"\r\n                                label=\"Genero\"\r\n                                error={formik.touched.gender && formik.errors.gender}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.gender} \r\n                            >\r\n                                <MenuItem value=\"H\">Homem</MenuItem>\r\n                                <MenuItem value=\"M\">Mulher</MenuItem>\r\n                                <MenuItem value=\"O\">Outro</MenuItem>\r\n                            </Select>\r\n                    </FormControl>\r\n                    {formik.touched.gender && formik.errors.gender ? (\r\n                        <div style={{color: 'red'}}>{formik.errors.gender}</div>\r\n                    ) : null}\r\n                </Div>\r\n\r\n                <Div style={{flex: 1, flexDirection: 'column', minWidth: '200px'}}>\r\n                    <TextField \r\n                        fullWidth\r\n                        error={formik.touched.telephone && formik.errors.telephone}\r\n                        size=\"small\"\r\n                        id=\"telephone\"\r\n                        name=\"telephone\"\r\n                        type=\"text\"\r\n                        label=\"Telefone\" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.telephone}\r\n                    />\r\n                    {formik.touched.telephone && formik.errors.telephone ? (\r\n                        <div style={{color: 'red'}}>{formik.errors.telephone}</div>\r\n                    ) : null}\r\n                </Div>\r\n            </div>\r\n\r\n            <Div style={{flexDirection: 'column'}}>\r\n                <TextField \r\n                    fullWidth \r\n                    error={formik.touched.email && formik.errors.email}\r\n                    size=\"small\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    label=\"E-mail\" \r\n                    variant=\"outlined\" \r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.email}\r\n                />\r\n                {formik.touched.email && formik.errors.email ? (\r\n                    <div style={{color: 'red'}}>{formik.errors.email}</div>\r\n                ) : null}\r\n            </Div>\r\n\r\n            <div style={{display: 'flex', flexWrap: 'wrap'}}>\r\n                <Div style={{flex: 1, flexDirection: 'column', minWidth: '200px'}}>\r\n                    <TextField \r\n                        fullWidth \r\n                        error={formik.touched.password && formik.errors.password}\r\n                        size=\"small\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        label=\"Senha\" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.password}\r\n                    />    \r\n                    {formik.touched.password && formik.errors.password ? (\r\n                        <div style={{color: 'red'}}>{formik.errors.password}</div>\r\n                    ) : null}\r\n                </Div>\r\n                \r\n                <Div style={{flex: 1, flexDirection: 'column', minWidth: '200px'}}>\r\n                    <TextField \r\n                        fullWidth \r\n                        error={formik.touched.confirmPassword && formik.errors.confirmPassword}\r\n                        size=\"small\"\r\n                        id=\"confirmPassword\"\r\n                        name=\"confirmPassword\"\r\n                        type=\"password\"\r\n                        label=\"Confirme a Senha\" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.confirmPassword}\r\n                    /> \r\n                    {formik.touched.confirmPassword && formik.errors.confirmPassword ? (\r\n                        <div style={{color: 'red'}}>{formik.errors.confirmPassword}</div>\r\n                    ) : null}\r\n                </Div>\r\n            </div>\r\n        \r\n            <Button fullWidth variant=\"contained\" style={{marginBottom: '1rem'}} onClick={formik.handleSubmit}>\r\n                Próximo\r\n            </Button>\r\n        </Form>  \r\n    )\r\n}\r\n\r\nexport default CreateUserForm","import {TextField, Button} from '@mui/material';\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from 'yup';\r\n\r\nimport api from '../../services/api'\r\n\r\nimport {\r\n    Form,\r\n    Div,\r\n} from '../../styles/Cadastro/Cadastro'\r\n\r\nfunction FormEndereco({handleOnChange, userId}){\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            cep: \"\",\r\n            address: \"\",\r\n            complement: \"\",\r\n            city: \"\",\r\n            number: \"\",\r\n            state: \"\",\r\n        },  \r\n        validationSchema: yup.object({\r\n            cep: yup\r\n                .string()\r\n                .required(\"O campo é obrigatório.\"),\r\n            address: yup\r\n                .string()\r\n                .required(\"O campo é obrigatório.\"),\r\n            complement: yup\r\n                .string(),\r\n            city: yup\r\n                .string()\r\n                .required(\"O campo é obrigatório.\"),\r\n            number: yup\r\n                .string()\r\n                .required(\"Obrigatório.\"),\r\n            state: yup\r\n                .string()\r\n                .required(\"O campo é obrigatório.\"),\r\n        }),\r\n        onSubmit: (values) => {\r\n            create(values)\r\n        }\r\n    });\r\n\r\n    function checkCep(){\r\n        let cep = formik.values.cep\r\n        const cepLimpo = cep.replace(/\\D/g, '')\r\n\r\n        if (cepLimpo === ''){return}\r\n        if(cepLimpo.length !== 8){return}\r\n\r\n        fetch(`https://viacep.com.br/ws/${cepLimpo}/json/`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                formik.values.address = data.logradouro\r\n                formik.values.city = data.localidade\r\n                formik.values.state = data.uf\r\n        })\r\n    }\r\n\r\n    async function create({cep, address, number, complement, city, state}){     \r\n        await api.post(\"/usuario/endereco\", {\r\n            id_usuario: userId,\r\n            cep, \r\n            logradouro: address,\r\n            numero: number,\r\n            complemento: complement,\r\n            cidade: city,\r\n            estado: state,\r\n        });\r\n        handleOnChange(3)\r\n    }\r\n\r\n    return(\r\n        <Form onSubmit={formik.handleSubmit} xs={12}>\r\n            <h3 style={{margin: 0, marginBottom: '1rem'}}>Endereço</h3>\r\n            <Div style={{flexDirection: 'column'}}>\r\n                <TextField \r\n                    fullWidth \r\n                    error={formik.touched.cep && formik.errors.cep}\r\n                    size=\"small\"\r\n                    id=\"cep\"\r\n                    name=\"cep\"\r\n                    type=\"text\"\r\n                    label=\"Cep\" \r\n                    variant=\"outlined\" \r\n                    onChange={formik.handleChange}\r\n                    onBlur={(e) => {\r\n                        checkCep()\r\n                    }}\r\n                    value={formik.values.cep}\r\n                />\r\n                {formik.touched.cep && formik.errors.cep ? (\r\n                    <div style={{color: 'red'}}>{formik.errors.cep}</div>\r\n                ) : null}\r\n            </Div>\r\n\r\n            \r\n            <div style={{display: 'flex', flexWrap: 'wrap'}}>\r\n                <Div style={{flex: 3, minWidth: '300px'}}>\r\n                    <TextField \r\n                            fullWidth \r\n                            error={formik.touched.address && formik.errors.address}\r\n                            size=\"small\"\r\n                            id=\"address\"\r\n                            name=\"address\"\r\n                            type=\"text\"\r\n                            label=\"Endereço\" \r\n                            variant=\"outlined\" \r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.address}\r\n                            disabled\r\n                    />\r\n                    {formik.touched.address && formik.errors.address ? (\r\n                        <div style={{color: 'red'}}>{formik.errors.address}</div>\r\n                    ) : null}\r\n                </Div>\r\n\r\n                <Div style={{flex: 1, minWidth: '100px', flexDirection: 'column'}}>\r\n                    <TextField\r\n                        fullWidth \r\n                        error={formik.touched.number && formik.errors.number}\r\n                        size=\"small\"\r\n                        id=\"text\"\r\n                        name=\"number\"\r\n                        type=\"text\"\r\n                        label=\"Número\" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.number}\r\n                    />  \r\n                    {formik.touched.number && formik.errors.number ? (\r\n                        <div style={{color: 'red'}}>{formik.errors.number}</div>\r\n                    ) : null}\r\n                </Div>\r\n            </div>\r\n\r\n\r\n            <Div style={{flexDirection: 'column'}}>\r\n                <TextField \r\n                    fullWidth \r\n                    size=\"small\"\r\n                    id=\"complement\"\r\n                    name=\"complement\"\r\n                    type=\"text\"\r\n                    label=\"Complemento\" \r\n                    variant=\"outlined\" \r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.complement}\r\n                />\r\n            </Div>\r\n\r\n            <div style={{display: 'flex', flexWrap: 'wrap'}}>\r\n                <Div style={{flex: 3, minWidth: '300px'}}>\r\n                    <TextField \r\n                        fullWidth \r\n                        error={formik.touched.city && formik.errors.city}\r\n                        size=\"small\"\r\n                        id=\"city\"\r\n                        name=\"city\"\r\n                        type=\"text\"\r\n                        label=\"Cidade\" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.city}\r\n                        disabled\r\n                    />\r\n                    {formik.touched.city && formik.errors.city ? (\r\n                        <div style={{color: 'red'}}>{formik.errors.city}</div>\r\n                    ) : null}\r\n                </Div>\r\n\r\n                <Div style={{flex: 1, minWidth: '100px'}}>\r\n                    <TextField \r\n                        fullWidth \r\n                        error={formik.touched.state && formik.errors.state}\r\n                        size=\"small\"\r\n                        id=\"state\"\r\n                        name=\"state\"\r\n                        type=\"text\"\r\n                        label=\"Estado\" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.state}\r\n                        disabled\r\n                    />\r\n                    {formik.touched.state && formik.errors.state ? (\r\n                        <div style={{color: 'red'}}>{formik.errors.state}</div>\r\n                    ) : null}\r\n                </Div>\r\n            </div>\r\n\r\n            <Button fullWidth variant=\"contained\" style={{marginBottom: '1rem'}} onClick={formik.handleSubmit}>\r\n                Próximo\r\n            </Button>\r\n        </Form>  \r\n    )\r\n}\r\n\r\nexport default FormEndereco","import React, { useState } from 'react'\r\nimport {TextField, Button, Snackbar, IconButton, Alert} from '@mui/material';\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from 'yup';\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport api from '../../services/api'\r\n\r\nimport {\r\n    Form,\r\n    Div,\r\n} from '../../styles/Cadastro/Cadastro'\r\n\r\nfunction CreatePatientForm({userId}){\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const navigate = useNavigate()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            height: \"\", \r\n            weight: \"\", \r\n            allergies: \"\", \r\n            disease: \"\", \r\n            addiction: \"\", \r\n            medicine: \"\", \r\n        },  \r\n        validationSchema: yup.object({\r\n            height: yup\r\n                .string()\r\n                .required(\"O campo é obrigatório.\"),\r\n            weight: yup\r\n                .string()\r\n                .required(\"O campo é obrigatório.\"),\r\n            medicine: yup\r\n                .string(),\r\n            disease: yup\r\n                .string(),\r\n            allergies: yup\r\n                .string(),\r\n            addiction: yup\r\n                .string(),\r\n        }),\r\n        onSubmit: (values) => {\r\n            create(values)\r\n        }\r\n    });\r\n\r\n    async function create({height, weight, allergies, disease, addiction, medicine}){       \r\n        await api.post(\"/paciente\", {\r\n            id_usuario: userId,\r\n            peso: weight, \r\n            altura: height, \r\n            alergia: allergies,\r\n            doenca_cronica: disease,\r\n            vicio: addiction,\r\n            medicamento: medicine\r\n        });\r\n        handleClick()\r\n        setTimeout(() => {\r\n            navigate('/')\r\n        }, 3000)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\t\r\n    \r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                style={{width: '40%'}}\r\n            >\r\n                <Alert variant=\"filled\" severity=\"success\" onClose={handleClose} sx={{ width: '100%' }}>Cadastro Concluido.</Alert>\r\n            </Snackbar>\r\n            <Form onSubmit={formik.handleSubmit} xs={12}>\r\n                <h3 style={{margin: 0, marginBottom: '1rem'}}>Dados do Paciente</h3>\r\n                \r\n                <div style={{display: 'flex', flexWrap: 'wrap'}}>\r\n                    <Div style={{flex: 1, minWidth: '200px', flexDirection: 'column'}}>\r\n                        <TextField  \r\n                            fullWidth\r\n                            error={formik.touched.height && formik.errors.height}\r\n                            size=\"small\"\r\n                            id=\"height\"\r\n                            name=\"height\"\r\n                            type=\"text\"\r\n                            label=\"Altura\" \r\n                            variant=\"outlined\" \r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.height}\r\n                        /> \r\n                        {formik.touched.height && formik.errors.height ? (\r\n                            <div style={{color: 'red'}}>{formik.errors.height}</div>\r\n                        ) : null}\r\n                    </Div>\r\n\r\n                    <Div style={{flex: 1, minWidth: '200px', flexDirection: 'column'}}>\r\n                        <TextField  \r\n                            fullWidth\r\n                            error={formik.touched.weight && formik.errors.weight}\r\n                            size=\"small\"\r\n                            id=\"weight\"\r\n                            name=\"weight\"\r\n                            type=\"text\"\r\n                            label=\"Peso\" \r\n                            variant=\"outlined\" \r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.weight}\r\n                        />\r\n                        {formik.touched.weight && formik.errors.weight ? (\r\n                            <div style={{color: 'red'}}>{formik.errors.weight}</div>\r\n                        ) : null}\r\n                    </Div>\r\n                </div>\r\n\r\n                <Div style={{flexDirection: 'column'}}>\r\n                    <TextField \r\n                        fullWidth \r\n                        size=\"small\"\r\n                        id=\"medicine\"\r\n                        name=\"medicine\"\r\n                        type=\"text\"\r\n                        label=\"Medicamento(s)\" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.medicine}\r\n                    />\r\n                </Div>\r\n\r\n                <Div style={{flexDirection: 'column'}}>\r\n                    <TextField \r\n                        fullWidth \r\n                        size=\"small\"\r\n                        id=\"disease\"\r\n                        name=\"disease\"\r\n                        type=\"text\"\r\n                        label=\"Doença(s) Crônicas \" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.disease}/>\r\n                </Div>\r\n\r\n                <Div>\r\n                    <TextField \r\n                        fullWidth \r\n                        size=\"small\"\r\n                        id=\"allergies\"\r\n                        name=\"allergies\"\r\n                        type=\"text\"\r\n                        label=\"Alergia(s)\" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.allergies}\r\n                    />\r\n                </Div>\r\n\r\n                <Div>\r\n                    <TextField \r\n                        fullWidth \r\n                        size=\"small\"\r\n                        id=\"addiction\"\r\n                        name=\"addiction\"\r\n                        type=\"text\"\r\n                        label=\"Vicio(s)\" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.addiction}\r\n                    />\r\n                </Div>\r\n                            \r\n                <Button fullWidth variant=\"contained\" style={{marginBottom: '1rem'}} onClick={formik.handleSubmit}>\r\n                    Criar\r\n                </Button>\r\n            </Form>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreatePatientForm","import {useEffect, useState} from 'react'\r\nimport {TextField, Button, Autocomplete, Snackbar, IconButton, Alert } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport api from '../../services/api'\r\n\r\nimport {Form, Div} from '../../styles/Cadastro/Cadastro'\r\n\r\nfunction FormMedico({userId}){\r\n    const [specialties, setSpecialties] = useState([])\r\n    const [crm, setCrm] = useState(\"\")\r\n    const [selectedSpecialties, setSelectedSpecialties] = useState([])\r\n    const [open, setOpen] = useState(false);\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        getAllSpecialties()\r\n    }, [])\r\n\r\n    async function getAllSpecialties(){\r\n        const result = await api.get('/medico/especialidades')\r\n        setSpecialties(result.data)      \r\n    }\r\n\r\n    function onSpecialtyChange(object, value){\r\n        let aux = value\r\n        let selected = []\r\n        aux.map((item) => {\r\n            selected.push(item.id)\r\n        })\r\n        setSelectedSpecialties(selected);\r\n    }\r\n\r\n    function verifyCrmInput(){\r\n        if(crm.length === 0){\r\n            document.querySelector('#crmError').style.display = \"block\";\r\n            return false\r\n        }else{\r\n            document.querySelector('#crmError').style.display = \"none\";\r\n            return true\r\n        }\r\n    }\r\n\r\n    function verifySpecialtiesInput(){\r\n        if(selectedSpecialties.length === 0){\r\n            document.querySelector('#specialtiesError').style.display = \"block\";\r\n            return false\r\n        }else{\r\n            document.querySelector('#specialtiesError').style.display = \"none\";\r\n            return true\r\n        }\r\n    }  \r\n\r\n    function submit(){\r\n        verifyCrmInput()\r\n        verifySpecialtiesInput()\r\n        if(verifyCrmInput() && verifySpecialtiesInput()){\r\n            create()\r\n        }\r\n    }\r\n\r\n    async function create(){  \r\n        await api.post(\"/medico/createDoctor\", {id_usuario: userId, crm});\r\n\r\n        selectedSpecialties.map(async function(specialty){\r\n            await api.post(\"/medico/createDoctorSpecialty\", {id_medico: userId, id_especialidade: specialty})\r\n        })\r\n\r\n        handleClick();\r\n        setTimeout(() => {\r\n            navigate('/')\r\n        }, 3000)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\t\r\n    \r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                style={{width: '40%'}}\r\n            >\r\n                <Alert variant=\"filled\" severity=\"success\" onClose={handleClose} sx={{ width: '100%' }}>Cadastro Concluido.</Alert>\r\n            </Snackbar>\r\n            <Form xs={12}>\r\n                <h3 style={{margin: 0, marginBottom: '1rem'}}>Dados do Médico</h3>\r\n                    <Div style={{flex: 1, minWidth: '200px', flexDirection: 'column'}}>\r\n                        <TextField  \r\n                            fullWidth\r\n                            size=\"small\"\r\n                            id=\"crm\"\r\n                            name=\"crm\"\r\n                            type=\"text\"\r\n                            label=\"CRM\" \r\n                            variant=\"outlined\" \r\n                            onChange={e => setCrm(e.target.value)}\r\n                            onBlur={verifyCrmInput}\r\n                        /> \r\n                        <p id=\"crmError\" style={{color: 'red', margin: 0, marginTop: 10, display: 'none'}}>O Campo é Obrigatório.</p>\r\n                    </Div>\r\n\r\n                    <Div style={{flex: 1, minWidth: '200px', flexDirection: 'column'}}>\r\n                        <Autocomplete\r\n                            fullWidth\r\n                            multiple\r\n                            size=\"small\"\r\n                            id=\"especialidades\"\r\n                            name=\"especialidades\"\r\n                            onChange={onSpecialtyChange}\r\n                            onBlur={verifySpecialtiesInput}\r\n                            options={specialties}\r\n                            getOptionLabel={(option) => option.nome}\r\n                            filterSelectedOptions\r\n                            renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                label=\"Especialidades\"\r\n                                placeholder=\"Escolha uma ou mais especialidades\"\r\n                            />\r\n                            )}\r\n                        />\r\n                        <p id=\"specialtiesError\" style={{color: 'red', margin: 0, marginTop: 10, display: 'none'}}>Selecione um ou mais especialidades.</p>\r\n                    </Div>\r\n\r\n                <Button fullWidth variant=\"contained\" style={{marginBottom: '1rem'}} onClick={submit}>\r\n                    Criar\r\n                </Button>\r\n            </Form>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormMedico","import {useEffect, useState} from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport {Button, Radio, RadioGroup, FormControlLabel, Alert } from '@mui/material';\r\nimport {ChevronLeft} from '@mui/icons-material'\r\n\r\nimport logo from '../../img/logoAzulHoriz.png'\r\nimport CreateUserType from '../../components/FormDadosPessoais/CreateUserForm'\r\nimport CreateAddressForm from '../../components/FormEndereco/CreateAddressForm'\r\nimport CreatePatientForm from '../../components/FormPaciente/CreatePatientForm'\r\nimport CreateDoctorForm from '../../components/FormMedico'\r\n\r\nimport {\r\n    Container,\r\n    Left,\r\n    Right,\r\n} from '../../styles/Cadastro/Cadastro'\r\n\r\nlet Cadastro3 = () => {\r\n    const navigate = useNavigate()\r\n    const [userType, setUserType] = useState(null)\r\n    const [userId, setUserId] = useState(null)\r\n    const [step, setStep] = useState(1)\r\n\r\n    const handleOnChange = (n) => setStep(n)\r\n    const handleOnSetUserId = (id) => setUserId(id)\r\n\r\n    return(\r\n        <Container>\r\n            <Left>\r\n                <Button fullWidth variant=\"contained\" size=\"large\" onClick={() => navigate('/')} style={{borderRadius: '0px'}}><ChevronLeft fontSize=\"large\" /> Voltar</Button>\r\n            </Left>\r\n\r\n            <Right>\r\n                <img src={logo} alt=\"Logo\" style={{width: '50%'}}/>\r\n                <h1 style={{margin: '1rem'}}>Criar Conta</h1>\r\n                \r\n                {userType === null && (\r\n                    <>\r\n                        <h2>Escolha o tipo:</h2>\r\n                        <RadioGroup\r\n                            row\r\n                            aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                            name=\"row-radio-buttons-group\"\r\n                        >\r\n                            <FormControlLabel \r\n                                value=\"Paciente\" \r\n                                control={<Radio sx={{'& .MuiSvgIcon-root': {fontSize: 28,},}}/>} \r\n                                label=\"Paciente\" \r\n                                labelPlacement=\"top\"\r\n                                onChange={e => setUserType(e.target.value)}\r\n                            />\r\n                            <FormControlLabel \r\n                                value=\"Medico\" \r\n                                control={\r\n                                    <Radio sx={{'& .MuiSvgIcon-root': {fontSize: 28,},}}/>\r\n                                }  \r\n                                label=\"Médico\" \r\n                                labelPlacement=\"top\"\r\n                                onChange={e => setUserType(e.target.value)}\r\n                            />\r\n                        </RadioGroup>\r\n                    </>\r\n                )}\r\n\r\n                {userType !== null && step === 1  &&(\r\n                    <CreateUserType handleOnChange={handleOnChange} handleOnSetUserId={handleOnSetUserId} type={userType}/>\r\n                )}\r\n\r\n                {step === 2 && userId && (\r\n                    <CreateAddressForm handleOnChange={handleOnChange} userId={userId}/>\r\n                )}\r\n\r\n                {userType === 'Paciente' && step === 3 && userId && (\r\n                    <CreatePatientForm userId={userId}/>\r\n                )}\r\n\r\n                {userType === 'Medico' && step === 3 && userId && (\r\n                    <>\r\n                        <CreateDoctorForm userId={userId}/>\r\n                    </>\r\n                )}\r\n\r\n                {/* {userType === 'Medico' && (\r\n                    <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                        <Alert severity=\"warning\" style={{flex: 1, width: '45vw', minWidth: '300px', textAlign: 'center'}}>Em construção!</Alert>\r\n                        <Button onClick={() => setUserType(null)} style={{borderRadius: '0px'}}>Voltar</Button>\r\n                    </div>\r\n                )} */}\r\n                             \r\n            </Right>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Cadastro3","export default __webpack_public_path__ + \"static/media/photo-login.9824508f.jpg\";","import { styled } from '@mui/system'\r\nimport { Button, Grid, Paper, TextField } from '@mui/material'\r\nimport PhotoLogin from '../../img/photo-login.jpg'\r\n\r\nexport const ButtonLogin = styled(Button)({\r\n    margin: '0px 8px 8px 8px'\r\n})\r\n\r\nexport const Container = styled('div')({\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n})\r\n\r\nexport const InputItem = styled(TextField)({\r\n    display: 'flex',\r\n    marginBottom: 16,\r\n    width: '100%'\r\n})\r\n\r\nexport const Logo = styled('img')({\r\n    width: 400,\r\n    margin: '32px 8px 16px 8px'\r\n})\r\n\r\nexport const LoginContainer  = styled(Container)({\r\n    justifyContent: 'center'\r\n})\r\n\r\nexport const LogoContainer = styled(Container)({\r\n    alignItems: 'center'\r\n})\r\n\r\nexport const PaperStyled = styled(Paper)({\r\n    padding: 24,\r\n    height: '80vh',\r\n    width: 400,\r\n    margin: '20px auto'\r\n\r\n})\r\n\r\nexport const Principal = styled(Grid)({\r\n    backgroundImage: `url(${PhotoLogin})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    display: 'flex',\r\n    height: '100vh'\r\n\r\n})\r\n\r\nexport const Text = styled('div')({\r\n    margin: '8px 0px 16px 0px'\r\n})\r\n\r\nexport const Title = styled('h1')({\r\n    alignText: 'center',\r\n    margin: 8\r\n})\r\n","import React, { useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { useFormik } from 'formik'\r\nimport { InputAdornment } from '@mui/material'\r\nimport { Email, Https, Visibility, VisibilityOff } from '@mui/icons-material'\r\nimport logo from \"../../img/logoAzulHoriz.png\"\r\nimport { useAuthContext } from '../../context/AuthContext'\r\nimport {\r\n    ButtonLogin,\r\n    Container,\r\n    InputItem,\r\n    Logo,\r\n    LoginContainer,\r\n    LogoContainer,\r\n    PaperStyled,\r\n    Principal,\r\n    Text,\r\n    Title\r\n} from '../../styles/Login'\r\n\r\nfunction Login() {\r\n    const navigate = useNavigate()\r\n    const { login } = useAuthContext()\r\n    const [isShowing, setIsShowing] = useState(false)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            senha: ''\r\n        },\r\n        onSubmit: (values) => {\r\n            login(values.email, values.senha)\r\n        }\r\n    })\r\n\r\n    const handleChangeEyeIcon = (e) => {\r\n        e.preventDefault()\r\n        setIsShowing(!isShowing);\r\n    }\r\n\r\n    return (\r\n        <Principal columns={16}>\r\n            <PaperStyled elevation={10}>\r\n                <LoginContainer>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <LogoContainer>\r\n                            <Logo src={logo} alt=\"Telemedicina\" />\r\n                            <Title>Olá novamente!</Title>\r\n                            <Text>Faça seu login para entrar na plataforma.</Text>\r\n                        </LogoContainer> \r\n                        <Container>\r\n                            <InputItem\r\n                                id='email'\r\n                                type='text'\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Email />\r\n                                        </InputAdornment>\r\n                                    ),}}\r\n                                value={formik.email}\r\n                                onChange={formik.handleChange}\r\n                                label=\"Digite seu email\"\r\n                                variant=\"filled\"\r\n                            />\r\n                            <InputItem\r\n                                id='senha'\r\n                                type={isShowing ? \"text\" : \"password\"}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Https />\r\n                                        </InputAdornment> ),\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <div onClick={handleChangeEyeIcon}>\r\n                                                {isShowing ? <Visibility size={20} /> : <VisibilityOff size={20} />}\r\n                                            </div>\r\n                                        </InputAdornment>\r\n                                ),}}\r\n                                value={formik.senha}\r\n                                onChange={formik.handleChange}\r\n                                label=\"Digite sua senha\"\r\n                                variant=\"filled\"\r\n                            />\r\n                        </Container>\r\n                        <Container>\r\n                            <ButtonLogin\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                type='submit'\r\n                            >\r\n                               Entrar \r\n                            </ButtonLogin>\r\n                            <Text style={{alignSelf: 'center'}} textDecoration='none'>\r\n                                <Link to=\"/recuperar-senha\">\r\n                                    Esqueceu a senha?\r\n                                </Link>\r\n                            </Text>\r\n                            <Text style={{alignSelf: 'center'}}>Você é novo?</Text>\r\n                            <ButtonLogin variant='outlined' color=\"primary\" onClick={() => navigate('/cadastro')}>\r\n                                Cadastrar\r\n                            </ButtonLogin>\r\n                        </Container>\r\n                    </form>\r\n                </LoginContainer>\r\n            </PaperStyled>\r\n        </Principal>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import { api } from '../../services/api'\r\nimport { useState, useEffect } from 'react'\r\nimport { Container, Button, Grid, TextField, Snackbar, IconButton, Alert } from '@mui/material'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction RecoverAccount({handleClose}){\r\n    const navigate = useNavigate()\r\n    const [email, setEmail] = useState('')\r\n    const [open, setOpen] = useState(false);\r\n    const [open1, setOpen1] = useState(false);\r\n    const [open2, setOpen2] = useState(false);\r\n    \r\n    async function esqueceuASenha(e){\r\n        try{\r\n            e.preventDefault()\r\n            if(!email || email == null){\r\n                handleClick()\r\n                return\r\n            }\r\n\r\n            let exists = await api.get(`/usuario/getUserByEmail/${email}`)\r\n\r\n            if(exists.data == ''){\r\n                handleClick1()\r\n                return \r\n            }\r\n            \r\n            await api.post(\"/usuario/esqueceu_a_senha\", { email })\r\n            \r\n            handleClick2()\r\n            setTimeout(() => {\r\n                handleClose()\r\n            }, 3000)\r\n            \r\n        } catch (err) {\r\n            console.error(\"ops! ocorreu um erro\" + err)\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\t\r\n    \r\n    const handleClose3 = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleClick1 = () => {\r\n        setOpen1(true);\r\n    };\t\r\n    \r\n    const handleClose1 = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen1(false);\r\n    };\r\n    const handleClick2 = () => {\r\n        setOpen2(true);\r\n    };\t\r\n    \r\n    const handleClose2 = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen2(false);\r\n    };\r\n\r\n    return(\r\n        <Container style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose3}\r\n                style={{width: '40%'}}\r\n            >\r\n                <Alert variant=\"filled\" severity=\"warning\" onClose={handleClose3} sx={{ width: '100%' }}>Preencha o e-mail e clique em esqueceu a senha novamente.</Alert>\r\n            </Snackbar>\r\n            \r\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={open1}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose1}\r\n                style={{width: '40%'}}\r\n            >\r\n                <Alert variant=\"filled\" severity=\"warning\" onClose={handleClose1} sx={{ width: '100%' }}>E-mail não encontrado.</Alert>\r\n            </Snackbar>\r\n            \r\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={open2}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose2}\r\n                style={{width: '40%'}}\r\n            >\r\n                <Alert variant=\"filled\" severity=\"success\" onClose={handleClose2} sx={{ width: '100%' }}>O link foi enviado. Acesse o seu e-mail para redefinir a senha.</Alert>\r\n            </Snackbar>\r\n\r\n            <Grid item xs={12} sm={12} md={10} lg={7}>\r\n                <h1>RECUPERAR CONTA</h1>\r\n                <p>Insira o seu email e enviaremos um link para você redefinir a senha da sua conta.</p>\r\n            </Grid>\r\n                \r\n            \r\n            <Grid item xs={12} sm={12} md={10} lg={7}>\r\n                <form>\r\n                    <TextField style={{marginBottom: '1rem'}}\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        id=\"standard-basic\"\r\n                        label=\"E-mail\"\r\n                        variant=\"standard\"\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    <Button tpye=\"submit\" onClick={e => esqueceuASenha(e)}>\r\n                        Enviar Link\r\n                    </Button>\r\n                </form>\r\n            </Grid>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RecoverAccount","import { styled } from '@mui/system'\r\nimport { Link, } from '@mui/material'\r\nimport photoLogin from '../../img/photo-login.jpg'\r\n\r\nexport const Container = styled('div')({\r\n    display: 'flex',\r\n    height: '100vh', \r\n    width: '100vw', \r\n    maxWidth: '1440px',\r\n})\r\n\r\nexport const Left = styled('div')({\r\n    flex: 1, \r\n    display: 'flex', \r\n    flexDirection: 'column', \r\n    alignItems: 'center', \r\n    justifyContent: 'center'\r\n})\r\n\r\nexport const Right = styled('div')(({theme}) => ({\r\n    flex: 1, \r\n    backgroundImage: `url(${photoLogin})`, \r\n    backgroundPosition: 'center', \r\n    backgroundSize: 'cover',\r\n    [theme.breakpoints.down('md')]: {\r\n        display: 'none',\r\n    },\r\n}))\r\n\r\nexport const Img = styled('img')({\r\n    width: '50%'\r\n})\r\n\r\nexport const Form = styled('form')({\r\n    width: '90%'\r\n})\r\n\r\nexport const LinkStyled = styled(Link)({\r\n    marginBottom: '1rem', \r\n    marginLeft: '5px', \r\n    cursor: 'pointer'\r\n})\r\n\r\nexport const Div = styled('div')({\r\n    marginBottom: '1rem'   \r\n})\r\n\r\nexport const DivCadastreSe = styled('div')({\r\n    display: 'flex', \r\n    marginBottom: '1rem', \r\n    justifyContent: 'center'    \r\n})\r\n\r\nexport const DivEsqueceuASenha = styled('div')({\r\n    display: 'flex', \r\n    marginBottom: '1rem', \r\n    justifyContent: 'end', \r\n    paddingRight: '1rem'\r\n})\r\n\r\n","import {useState} from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport {TextField, Link, Button, Modal, Box} from '@mui/material';\r\nimport {Visibility, VisibilityOff } from '@mui/icons-material'\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from 'yup';\r\n\r\nimport { useAuthContext } from '../../context/AuthContext'\r\nimport logo from '../../img/logoAzulHoriz.png'\r\nimport RecoverAccount from '../RecoverAccount'\r\n\r\nimport {\r\n    Container,\r\n    Left,\r\n    Right,\r\n    Img,\r\n    Form,\r\n    Div,\r\n    LinkStyled,\r\n    DivCadastreSe,\r\n    DivEsqueceuASenha\r\n} from '../../styles/Login/Login'\r\n\r\nlet Login = () => {\r\n    const navigate = useNavigate()\r\n    const { login } = useAuthContext()\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const [open, setOpen] = useState(false);\r\n    \r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    function toggleShowPassword(e){\r\n        e.preventDefault()\r\n        setShowPassword(!showPassword);\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          email: \"\",\r\n          password: \"\",\r\n        },\r\n        validationSchema: yup.object({\r\n          email: yup\r\n            .string()\r\n            .email(\"E-mail inválido.\")\r\n            .required(\"O campo é obrigatório.\"),\r\n          password: yup\r\n            .string()\r\n            .required(\"O campo é obrigatório.\")\r\n        }),\r\n        onSubmit: (values) => {\r\n            login(values.email, values.password)\r\n        },\r\n      });\r\n\r\n    return(\r\n        <Container>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box style={{position: 'absolute', display: 'flex', flexDirection: 'column', alignItems: 'flex-end', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', backgroundColor: '#fff', boxShadow: 24, p: 4,padding: '0px 1.5rem 1.5rem 1.5rem'}}>\r\n                    <Button onClick={handleClose} color='error' style={{fontSize: '25px', fontWeight: 'bold'}}>X</Button>\r\n                    <div style={{display: 'flex', width: '100%'}}>\r\n                        <div style={{flex: 1}}>\r\n                            <RecoverAccount handleClose={handleClose}/>\r\n                        </div>\r\n                    </div>\r\n                </Box>\r\n            </Modal>\r\n            <Right/>\r\n            <Left>\r\n                <Img src={logo} alt=\"Logo\"/>\r\n\r\n                <h1>Login</h1>\r\n\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                    <Div>\r\n                        <TextField \r\n                            fullWidth \r\n                            error={formik.touched.email && formik.errors.email}\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            label=\"E-mail\" \r\n                            variant=\"outlined\" \r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.email}/>\r\n                            \r\n                            {formik.touched.email && formik.errors.email ? (\r\n                                <div style={{color: 'red'}}>{formik.errors.email}</div>\r\n                            ) : null}\r\n                    </Div>\r\n\r\n                    <Div>\r\n                        <TextField \r\n                            fullWidth \r\n                            error={formik.touched.password && formik.errors.password}\r\n                            id=\"password\" \r\n                            name=\"password\"\r\n                            type={showPassword ? \"text\" : \"password\"} \r\n                            label=\"Senha\" \r\n                            variant=\"outlined\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.password}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <div onClick={toggleShowPassword} style={{cursor: 'pointer', color: '#343434'}}>\r\n                                        {showPassword ? <Visibility size={20} /> : <VisibilityOff size={20} />}\r\n                                    </div>  \r\n                                ),\r\n                            }}\r\n                        />\r\n                        \r\n\r\n                        {formik.touched.password && formik.errors.password ? (\r\n                            <div style={{color: 'red'}}>{formik.errors.password}</div>\r\n                        ) : null}\r\n                    </Div>\r\n\r\n                    <DivEsqueceuASenha>\r\n                        <LinkStyled underline=\"hover\" onClick={handleOpen}>Esqueceu a senha?</LinkStyled>\r\n                    </DivEsqueceuASenha>\r\n\r\n                    <Div>\r\n                        <Button fullWidth variant=\"contained\" size=\"large\" onClick={formik.handleSubmit}>\r\n                            Login\r\n                        </Button>\r\n                    </Div>\r\n\r\n                </Form>\r\n\r\n                <DivCadastreSe>\r\n                    Você não tem uma conta? <LinkStyled underline=\"hover\" onClick={() => navigate('/cadastro')}> Cadastre-se</LinkStyled>\r\n                </DivCadastreSe>\r\n                \r\n            </Left>\r\n            \r\n            \r\n\r\n        </Container> \r\n    )\r\n}\r\n\r\nexport default Login","import { useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport {\r\n    ListItemButton,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Icon\r\n} from '@mui/material'\r\nimport { useAuthContext } from '../../../context/AuthContext'\r\n\r\n\r\nexport default function ListItemLink(props) {\r\n    const navigate = useNavigate()\r\n    const { logout } = useAuthContext()\r\n\r\n    const handleLogout = () => {\r\n        logout()\r\n    }\r\n    \r\n    const handleClick = () => {\r\n        if (props.to === 'exit') {\r\n            handleLogout()\r\n        } else {\r\n            navigate(props.to)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ListItemButton onClick={handleClick}>\r\n            <ListItemIcon>\r\n                <Icon>\r\n                    {props.icon}\r\n                </Icon>\r\n            </ListItemIcon>\r\n            <ListItemText primary={props.label} />\r\n        </ListItemButton>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/logoAzul.b8cb5cb9.png\";","import { createContext, useCallback, useContext, useState } from 'react'\r\n\r\nconst DrawerContext = createContext()\r\n\r\nexport const useDrawerContext = () => {\r\n    return useContext(DrawerContext)\r\n}\r\n\r\nexport default function DrawerProvider({ children }) {\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false)\r\n\r\n    const toggleDrawerOpen = useCallback(() => {\r\n        setIsDrawerOpen(oldDrawerOpen => !oldDrawerOpen)\r\n    }, [])\r\n\r\n    return (\r\n        <DrawerContext.Provider value={{ isDrawerOpen, toggleDrawerOpen }}>\r\n            {children}\r\n        </DrawerContext.Provider>\r\n    )\r\n}","import { useState, useEffect } from 'react'\r\nimport {\r\n    Box,\r\n    Divider,\r\n    Drawer,\r\n    IconButton,\r\n    List,\r\n    ListItemButton,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Typography,\r\n    useMediaQuery,\r\n    useTheme\r\n} from '@mui/material'\r\n\r\nimport {\r\n    Assignment,\r\n    ExitToApp,\r\n    Dashboard,\r\n    DateRange,\r\n    Group,\r\n    InsertInvitation,\r\n    MedicalServices,\r\n    Person,\r\n    Settings,\r\n    EventNote,\r\n  } from '@mui/icons-material'\r\nimport api from '../../services/api'\r\nimport ListItemLink from './ListItemLink'\r\nimport Logo from '../../img/logoAzul.png'\r\nimport { useDrawerContext } from '../../context/DrawerContext'\r\n\r\nexport default function NavBar({ children, exit }) {\r\n    const theme = useTheme()\r\n    const smDown = useMediaQuery(theme.breakpoints.down('sm'))\r\n    const [tipo, setTipo] = useState(\"\")\r\n\r\n    const { isDrawerOpen, toggleDrawerOpen } = useDrawerContext()\r\n\r\n    useEffect(() => {\r\n        getType()\r\n    }, [])\r\n\r\n    async function getType(){\r\n        const result = await api.get('/usuario/getType')\r\n        setTipo(result.data.tipo)\r\n    }\r\n    \r\n    return (\r\n        <Box>\r\n            <Drawer open={isDrawerOpen} variant={smDown ? 'temporary' : 'permanent'} onClose={toggleDrawerOpen}>\r\n                <Box width={theme.spacing(28)} height='100%' display='flex' flexDirection='column'>\r\n                    <Box width='100%' height={theme.spacing(20)} display='flex' alignItems='center' justifyContent='center'>\r\n                        <img src={Logo} alt='Telemedicina' width='100vh' height='100vh' />\r\n                    </Box>\r\n                    <Divider />\r\n                    <Box flex={1}>\r\n                        <List>\r\n                            <ListItemLink\r\n                                icon={<Dashboard/>}\r\n                                label='Página inicial'\r\n                                to='/inicio'                            \r\n                            />\r\n\r\n                            {tipo === 'Admin' && \r\n                                <>\r\n                                    <ListItemLink\r\n                                        icon={<Group />}\r\n                                        label='Gerenciar Usuários'\r\n                                        to='/admin'                            \r\n                                    />                 \r\n                                    <ListItemLink\r\n                                        icon={<MedicalServices />}\r\n                                        label='Novos Médicos'\r\n                                        to='/novos_medicos'                            \r\n                                    />  \r\n                                </>               \r\n                            }\r\n\r\n                            {tipo === 'Paciente' && \r\n                                <>\r\n                                    <ListItemLink\r\n                                        icon={<InsertInvitation />}\r\n                                        label='Agendar Consulta'\r\n                                        to='/consulta/adicionar'\r\n                                    />\r\n                                    \r\n                                </>                        \r\n                            }\r\n                            {tipo === 'Medico' && \r\n                                <>\r\n                                    <ListItemLink\r\n                                        icon={<DateRange />}\r\n                                        label='Disponibilidade'\r\n                                        to='/config/disponibilidademedica'\r\n                                    />\r\n                                    \r\n                                </>     \r\n                            }\r\n\r\n                            {tipo !== 'Admin' && \r\n                                <>\r\n                                    <ListItemLink\r\n                                        icon={<DateRange />}\r\n                                        label='Minhas Consultas'\r\n                                        to='/consultas'\r\n                                    />\r\n\r\n                                    <ListItemLink\r\n                                        icon={<DateRange />}\r\n                                        label='Agenda'\r\n                                        to='/agenda'\r\n                                    />  \r\n                                    <ListItemLink\r\n                                        icon={<EventNote />}\r\n                                        label='Historico Consultas'\r\n                                        to='/historico'\r\n                                    />  \r\n                                </>\r\n                            }\r\n\r\n                            <ListItemLink\r\n                                icon={<Person />}\r\n                                label='Perfil'\r\n                                to='/perfil'\r\n                            />                             \r\n                            \r\n                            <ListItemLink\r\n                                icon={<ExitToApp />}\r\n                                label='Sair'\r\n                                to='exit'\r\n                            />\r\n                        </List>\r\n                    </Box>\r\n                </Box>\r\n            </Drawer>\r\n            <Box height='100vh' marginLeft={smDown ? 0 : theme.spacing(28)}>\r\n                {children}\r\n            </Box>\r\n\r\n        </Box>\r\n    )\r\n}","import { AppBar, IconButton, Typography, useMediaQuery, useTheme } from '@mui/material'\r\nimport { Menu } from '@mui/icons-material'\r\nimport { Box } from '@mui/system'\r\nimport { useDrawerContext } from '../context/DrawerContext'\r\n\r\nexport default function BaseLayout({ children, title, toolbar }) {\r\n    const theme = useTheme()\r\n    const smDown = useMediaQuery(theme.breakpoints.down('sm'))\r\n\r\n    const { toggleDrawerOpen } = useDrawerContext()\r\n\r\n    return (\r\n        <>        \r\n            <AppBar position='relative'>\r\n                <Box padding={1} height={theme.spacing(12)} display='flex' alignItems='center'>\r\n                    {smDown && (\r\n                        <IconButton onClick={toggleDrawerOpen} color=\"inherit\">\r\n                            <Menu />\r\n                        </IconButton>\r\n                    )}\r\n                    <Typography marginLeft='4%' variant='h5'>\r\n                        {title}\r\n                    </Typography>\r\n                </Box>\r\n            </AppBar>\r\n            {toolbar && (\r\n                <Box>\r\n                    {toolbar}\r\n                </Box>\r\n            )}\r\n            <Box margin='3% 5% 0 5%'height='100%' display='flex' flexDirection='column' gap={1}>\r\n                <Box>\r\n                    {children}\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport api from '../../services/api'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Box, Button} from '@mui/material'\r\nimport CloseIcon from '@mui/icons-material/Close'\r\n\r\nimport NavBar from '../../components/NavBar'\r\nimport BaseLayout from '../../layouts/BaseLayout'\r\n// import { Principal } from '../../styles/Dashboard'\r\n\r\nfunction Dashboard() {\r\n    const navigate = useNavigate()\r\n    const [tipo, setTipo] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        getType()\r\n    }, [])\r\n\r\n    async function getType(){\r\n        const result = await api.get('/usuario/getType')\r\n        setTipo(result.data.tipo)\r\n    }\r\n\r\n    function minhasConsultas(){\r\n        navigate('/consultas')\r\n    }\r\n\r\n    function configuracoes(){\r\n        navigate('/config')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavBar>\r\n            {/* <Box sx={{marginX: 10}}>\r\n                <Button variant=\"contained\" size=\"large\" color=\"primary\" sx={{margin: 1}}><h1>primary</h1></Button>\r\n                <Button variant=\"contained\" size=\"large\" color=\"secondary\" sx={{margin: 1}}><h1>secondary</h1></Button>\r\n                <Button variant=\"contained\" size=\"large\" color=\"success\" sx={{margin: 1}}><h1>success</h1></Button>\r\n                <Button variant=\"contained\" size=\"large\" color=\"error\" sx={{margin: 1}}><h1>error</h1></Button>\r\n                <Button variant=\"contained\" size=\"large\" color=\"info\" sx={{margin: 1}}><h1>info</h1></Button>\r\n                <Button variant=\"contained\" size=\"large\" color=\"warning\" sx={{margin: 1}}><h1>warning</h1></Button>\r\n            </Box>\r\n            <hr/> */}\r\n\r\n                <BaseLayout title={`Página Inicial (${tipo})`}>\r\n                    <div style={{marginTop: '100px', display: 'flex', flexWrap: 'wrap', alignItems: 'center'}}>\r\n                        {tipo === 'Paciente' && \r\n                            <>\r\n                                <Button variant=\"contained\" size=\"large\" color=\"secondary\" sx={{margin: 1}} style={{color: '#fff'}} onClick={() => navigate('/consulta/adicionar')}><h2>Nova Consulta</h2></Button>\r\n                            </>             \r\n                        }\r\n\r\n                        {tipo === 'Medico' && \r\n                            <>\r\n                                <Button variant=\"contained\" size=\"large\" color=\"secondary\" sx={{margin: 1}} style={{color: '#fff'}} onClick={() => navigate('/config/disponibilidademedica')}><h2>Definir Disponibilidade</h2></Button>\r\n                            </> \r\n                        }\r\n\r\n                        {(tipo === 'Paciente' || tipo === 'Medico')  && \r\n                            <>\r\n                                <Button variant=\"contained\" size=\"large\" color=\"secondary\" sx={{margin: 1}} style={{color: '#fff'}} onClick={() => navigate('/consultas')}><h2>Consultas</h2></Button>\r\n                                <Button variant=\"contained\" size=\"large\" color=\"secondary\" sx={{margin: 1}} style={{color: '#fff'}} onClick={() => navigate('/agenda')}><h2>Minha Agenda</h2></Button>\r\n                                <Button variant=\"contained\" size=\"large\" color=\"secondary\" sx={{margin: 1}} style={{color: '#fff'}} onClick={() => navigate('/historico')}><h2>Historico de Consultas</h2></Button>\r\n                            </>\r\n                        }\r\n\r\n                        {tipo === 'Admin' && \r\n                            <>\r\n                                <Button variant=\"contained\" size=\"large\" color=\"secondary\" sx={{margin: 1}} style={{color: '#fff'}} onClick={() => navigate('/admin')}><h2>Gerenciar Usuários</h2></Button>\r\n                                <Button variant=\"contained\" size=\"large\" color=\"secondary\" sx={{margin: 1}} style={{color: '#fff'}} onClick={() => navigate('/novos_medicos')}><h2>Novos Médicos</h2></Button>\r\n                            </>  \r\n                        }\r\n                    </div>\r\n                </BaseLayout>\r\n            </NavBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import React, { useState } from 'react'\r\nimport {TextField, Button, Select, MenuItem, InputLabel, FormControl, Snackbar, IconButton, Alert } from '@mui/material';\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from 'yup';\r\n\r\nimport api from '../../services/api'\r\n\r\nimport {\r\n    Form,\r\n    Div,\r\n} from '../../styles/Cadastro/Cadastro'\r\n\r\nfunction UpdateUserForm({toggleModal, name, gender, telephone, email}){\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n        name: name,\r\n        gender: gender,\r\n        telephone: telephone,\r\n        email: email,\r\n        },\r\n        validationSchema: yup.object({\r\n        name: yup\r\n            .string()\r\n            .required(\"O campo é obrigatório.\"),\r\n        gender: yup\r\n            .string()\r\n            .required(\"O campo é obrigatório.\"),\r\n        telephone: yup\r\n            .string()\r\n            .required(\"O campo é obrigatório.\"),\r\n        email: yup\r\n            .string()\r\n            .email(\"E-mail inválido.\")\r\n            .required(\"O campo é obrigatório.\"),\r\n        }),\r\n        onSubmit: (values) => {\r\n            update(values)\r\n        }\r\n    });\r\n\r\n    async function update({name, gender, telephone, email}){       \r\n        await api.put(\"/usuario/updateDadosPessoais\", {\r\n            nome: name, \r\n            genero: gender, \r\n            telefone: telephone, \r\n            email\r\n        });\r\n        handleClick()\r\n        setTimeout(() => {\r\n            toggleModal()\r\n        }, 3000)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\t\r\n    \r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                style={{width: '40%'}}\r\n            >\r\n                <Alert variant=\"filled\" severity=\"success\" onClose={handleClose} sx={{ width: '100%' }}>Dados Atualizados.</Alert>\r\n            </Snackbar>\r\n            \r\n            <Form style={{width: '70vw'}} onSubmit={formik.handleSubmit} xs={12}>\r\n                <h3 style={{margin: 0, marginBottom: '1rem'}} align=\"center\">Editar Dados Pessoais</h3>\r\n                <Div style={{flexDirection: 'column'}}>\r\n                    <TextField \r\n                        fullWidth \r\n                        error={formik.touched.name && formik.errors.name}\r\n                        size=\"small\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        label=\"Nome\" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.name}\r\n                    />\r\n                    {formik.touched.name && formik.errors.name ? (\r\n                        <div style={{color: 'red'}}>{formik.errors.name}</div>\r\n                    ) : null}\r\n                </Div>\r\n\r\n                <Div>\r\n                    <FormControl variant=\"outlined\" fullWidth> \r\n                        <InputLabel size=\"small\">Gênero</InputLabel>\r\n                            <Select\r\n                                size=\"small\"\r\n                                labelId=\"genero\"\r\n                                id=\"gender\"\r\n                                name=\"gender\"\r\n                                label=\"Genero\"\r\n                                error={formik.touched.gender && formik.errors.gender}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.gender} \r\n                            >\r\n                                <MenuItem value=\"H\">Homem</MenuItem>\r\n                                <MenuItem value=\"M\">Mulher</MenuItem>\r\n                                <MenuItem value=\"O\">Outro</MenuItem>\r\n                            </Select>\r\n                    </FormControl>\r\n                    {formik.touched.gender && formik.errors.gender ? (\r\n                        <div style={{color: 'red'}}>{formik.errors.gender}</div>\r\n                    ) : null}\r\n                </Div>\r\n\r\n                <Div>\r\n                    <TextField \r\n                        fullWidth\r\n                        error={formik.touched.telephone && formik.errors.telephone}\r\n                        size=\"small\"\r\n                        id=\"telephone\"\r\n                        name=\"telephone\"\r\n                        type=\"text\"\r\n                        label=\"Telefone\" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.telephone}\r\n                    />\r\n                    {formik.touched.telephone && formik.errors.telephone ? (\r\n                        <div style={{color: 'red'}}>{formik.errors.telephone}</div>\r\n                    ) : null}\r\n                </Div>\r\n\r\n                <Div style={{flexDirection: 'column'}}>\r\n                    <TextField \r\n                        fullWidth \r\n                        error={formik.touched.email && formik.errors.email}\r\n                        size=\"small\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        label=\"E-mail\" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.email}\r\n                    />\r\n                    {formik.touched.email && formik.errors.email ? (\r\n                        <div style={{color: 'red'}}>{formik.errors.email}</div>\r\n                    ) : null}\r\n                </Div>\r\n            \r\n                <Button fullWidth variant=\"contained\" style={{marginBottom: '1rem'}} onClick={formik.handleSubmit}>\r\n                    Atualizar\r\n                </Button>\r\n            </Form>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateUserForm","import React, { useState } from 'react'\r\nimport {TextField, Button, Snackbar, IconButton, Alert} from '@mui/material';\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from 'yup';\r\n\r\nimport api from '../../services/api'\r\n\r\nimport {\r\n    Form,\r\n    Div,\r\n} from '../../styles/Cadastro/Cadastro'\r\n\r\nfunction FormEndereco({toggleModal, cep, address, complement, city, number, state}){\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            cep: cep,\r\n            address: address,\r\n            complement: complement,\r\n            city: city,\r\n            number: number,\r\n            state: state,\r\n        },  \r\n        validationSchema: yup.object({\r\n            cep: yup\r\n                .string()\r\n                .required(\"O campo é obrigatório.\"),\r\n            address: yup\r\n                .string()\r\n                .required(\"O campo é obrigatório.\"),\r\n            complement: yup\r\n                .string(),\r\n            city: yup\r\n                .string()\r\n                .required(\"O campo é obrigatório.\"),\r\n            number: yup\r\n                .string()\r\n                .required(\"Obrigatório.\"),\r\n            state: yup\r\n                .string()\r\n                .required(\"O campo é obrigatório.\"),\r\n        }),\r\n        onSubmit: (values) => {\r\n            update(values)\r\n        }\r\n    });\r\n\r\n    function checkCep(){\r\n        let cep = formik.values.cep\r\n        const cepLimpo = cep.replace(/\\D/g, '')\r\n        fetch(`https://viacep.com.br/ws/${cepLimpo}/json/`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                formik.values.address = data.logradouro\r\n                formik.values.city = data.localidade\r\n                formik.values.state = data.uf\r\n        })\r\n    }\r\n\r\n    async function update({cep, number, complement, city, state}){       \r\n        await api.put(\"/usuario/endereco\", {\r\n            cep, \r\n            numero: number,\r\n            complemento: complement,\r\n            cidade: city,\r\n            estado: state,\r\n        });\r\n        handleClick()\r\n        setTimeout(() => {\r\n            toggleModal()\r\n        }, 3000)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\t\r\n    \r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                style={{width: '40%'}}\r\n            >\r\n                <Alert variant=\"filled\" severity=\"success\" onClose={handleClose} sx={{ width: '100%' }}>Endereço Atualizado.</Alert>\r\n            </Snackbar>\r\n            <Form style={{width: '70vw'}} onSubmit={formik.handleSubmit} xs={12}>\r\n                <h3 style={{margin: 0, marginBottom: '1rem'}} align=\"center\">Editar Endereço</h3>\r\n                <Div style={{flexDirection: 'column'}}>\r\n                    <TextField \r\n                        fullWidth \r\n                        error={formik.touched.cep && formik.errors.cep}\r\n                        size=\"small\"\r\n                        id=\"cep\"\r\n                        name=\"cep\"\r\n                        type=\"text\"\r\n                        label=\"Cep\" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={\r\n                            checkCep\r\n                        }\r\n                        value={formik.values.cep}\r\n                    />\r\n                    {formik.touched.cep && formik.errors.cep ? (\r\n                        <div style={{color: 'red'}}>{formik.errors.cep}</div>\r\n                    ) : null}\r\n                </Div>\r\n\r\n                {/* <Div>\r\n                    <TextField \r\n                            fullWidth \r\n                            error={formik.touched.address && formik.errors.address}\r\n                            size=\"small\"\r\n                            id=\"address\"\r\n                            name=\"address\"\r\n                            type=\"text\"\r\n                            label=\"Endereço\" \r\n                            variant=\"outlined\" \r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.address}\r\n                            disabled\r\n                    />\r\n                    {formik.touched.address && formik.errors.address ? (\r\n                        <div style={{color: 'red'}}>{formik.errors.address}</div>\r\n                    ) : null}\r\n                </Div> */}\r\n\r\n                <Div>\r\n                    <TextField \r\n                        fullWidth \r\n                        error={formik.touched.number && formik.errors.number}\r\n                        size=\"small\"\r\n                        id=\"text\"\r\n                        name=\"number\"\r\n                        type=\"text\"\r\n                        label=\"Número\" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.number}\r\n                    />  \r\n                    {formik.touched.number && formik.errors.number ? (\r\n                        <div style={{color: 'red'}}>{formik.errors.number}</div>\r\n                    ) : null}\r\n                </Div>\r\n\r\n\r\n                <Div style={{flexDirection: 'column'}}>\r\n                    <TextField \r\n                        fullWidth \r\n                        size=\"small\"\r\n                        id=\"complement\"\r\n                        name=\"complement\"\r\n                        type=\"text\"\r\n                        label=\"Complemento\" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.complement}\r\n                    />\r\n                </Div>\r\n\r\n                <Div>\r\n                    <TextField \r\n                        fullWidth \r\n                        error={formik.touched.city && formik.errors.city}\r\n                        size=\"small\"\r\n                        id=\"city\"\r\n                        name=\"city\"\r\n                        type=\"text\"\r\n                        label=\"Cidade\" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.city}\r\n                        disabled\r\n                    />\r\n                    {formik.touched.city && formik.errors.city ? (\r\n                        <div style={{color: 'red'}}>{formik.errors.city}</div>\r\n                    ) : null}\r\n                </Div>\r\n\r\n                <Div>\r\n                    <TextField \r\n                        fullWidth \r\n                        error={formik.touched.state && formik.errors.state}\r\n                        size=\"small\"\r\n                        id=\"state\"\r\n                        name=\"state\"\r\n                        type=\"text\"\r\n                        label=\"Estado\" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.state}\r\n                        disabled\r\n                    />\r\n                    {formik.touched.state && formik.errors.state ? (\r\n                        <div style={{color: 'red'}}>{formik.errors.state}</div>\r\n                    ) : null}\r\n                </Div>\r\n\r\n                <Button fullWidth variant=\"contained\" style={{marginBottom: '1rem'}} onClick={formik.handleSubmit}>\r\n                    Atualizar\r\n                </Button>\r\n            </Form>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormEndereco","import React, { useState } from 'react'\r\nimport {TextField, Button, Snackbar, IconButton, Alert} from '@mui/material';\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from 'yup';\r\n\r\nimport api from '../../services/api'\r\n\r\nimport {\r\n    Form,\r\n    Div,\r\n} from '../../styles/Cadastro/Cadastro'\r\n\r\nfunction UpdatePatientForm({toggleModal, height, weight, medicine, disease, allergies, addiction}){\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            height: height, \r\n            weight: weight, \r\n            allergies: allergies, \r\n            disease: disease, \r\n            addiction: addiction, \r\n            medicine: medicine, \r\n        },  \r\n        validationSchema: yup.object({\r\n            height: yup\r\n                .string(),\r\n            weight: yup\r\n                .string(),\r\n            medicine: yup\r\n                .string(),\r\n            disease: yup\r\n                .string(),\r\n            allergies: yup\r\n                .string(),\r\n            addiction: yup\r\n                .string(),\r\n        }),\r\n        onSubmit: (values) => {\r\n            update(values)\r\n        }\r\n    });\r\n\r\n    async function update({height, weight, allergies, disease, addiction, medicine}){       \r\n        await api.put(\"/paciente\", {\r\n            altura: height, \r\n            peso: weight, \r\n            alergia: allergies,\r\n            doenca_cronica: disease,\r\n            vicio: addiction,\r\n            medicamento: medicine\r\n        });\r\n        handleClick()\r\n        setTimeout(() => {\r\n            toggleModal()\r\n        }, 3000)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\t\r\n    \r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n    \r\n\r\n    return(\r\n        <>\r\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                style={{width: '40%'}}\r\n            >\r\n                <Alert variant=\"filled\" severity=\"success\" onClose={handleClose} sx={{ width: '100%' }}>Dados Atualizados.</Alert>\r\n            </Snackbar>\r\n            <Form style={{width: '70vw'}} onSubmit={formik.handleSubmit} xs={12}>\r\n                <h3 style={{margin: 0, marginBottom: '1rem'}} align=\"center\">Editar Dados do Paciente</h3>\r\n                <Div>\r\n                    <TextField  \r\n                        fullWidth\r\n                        error={formik.touched.height && formik.errors.height}\r\n                        size=\"small\"\r\n                        id=\"height\"\r\n                        name=\"height\"\r\n                        type=\"text\"\r\n                        label=\"Altura\" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.height}\r\n                    /> \r\n                    {formik.touched.height && formik.errors.height ? (\r\n                        <div style={{color: 'red'}}>{formik.errors.height}</div>\r\n                    ) : null}\r\n                </Div>\r\n\r\n                <Div>\r\n                    <TextField  \r\n                        fullWidth\r\n                        error={formik.touched.weight && formik.errors.weight}\r\n                        size=\"small\"\r\n                        id=\"weight\"\r\n                        name=\"weight\"\r\n                        type=\"text\"\r\n                        label=\"Peso\" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.weight}\r\n                    />\r\n                    {formik.touched.weight && formik.errors.weight ? (\r\n                        <div style={{color: 'red'}}>{formik.errors.weight}</div>\r\n                    ) : null}\r\n                </Div>\r\n\r\n                <Div style={{flexDirection: 'column'}}>\r\n                    <TextField \r\n                        fullWidth \r\n                        size=\"small\"\r\n                        id=\"medicine\"\r\n                        name=\"medicine\"\r\n                        type=\"text\"\r\n                        label=\"Medicamento(s)\" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.medicine}\r\n                    />\r\n                </Div>\r\n\r\n                <Div style={{flexDirection: 'column'}}>\r\n                    <TextField \r\n                        fullWidth \r\n                        size=\"small\"\r\n                        id=\"disease\"\r\n                        name=\"disease\"\r\n                        type=\"text\"\r\n                        label=\"Doença(s) Crônicas \" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.disease}/>\r\n                </Div>\r\n\r\n                <Div>\r\n                    <TextField \r\n                        fullWidth \r\n                        size=\"small\"\r\n                        id=\"allergies\"\r\n                        name=\"allergies\"\r\n                        type=\"text\"\r\n                        label=\"Alergia(s)\" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.allergies}\r\n                    />\r\n                </Div>\r\n\r\n                <Div>\r\n                    <TextField \r\n                        fullWidth \r\n                        size=\"small\"\r\n                        id=\"addiction\"\r\n                        name=\"addiction\"\r\n                        type=\"text\"\r\n                        label=\"Vicio(s)\" \r\n                        variant=\"outlined\" \r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.addiction}\r\n                    />\r\n                </Div>\r\n                            \r\n                <Button fullWidth variant=\"contained\" style={{marginBottom: '1rem'}} onClick={formik.handleSubmit}>\r\n                    Atualizar\r\n                </Button>\r\n            </Form>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdatePatientForm","import {useState, useEffect} from 'react'\r\nimport { Button, Modal, Container, Box } from '@mui/material'\r\nimport dayjs from 'dayjs'\r\n\r\nimport NavBar from '../../components/NavBar'\r\nimport BaseLayout from '../../layouts/BaseLayout'\r\nimport api from '../../services/api'\r\nimport { useAuthContext } from '../../context/AuthContext'\r\nimport UpdateUserForm from '../../components/FormDadosPessoais/UpdateUserForm'\r\nimport UpdateAddressForm from '../../components/FormEndereco/UpdateAddressForm'\r\nimport UpdatePatientForm from '../../components/FormPaciente/UpdatePatientForm'\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'flex-end',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  bgcolor: 'background.paper',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function Perfil() {\r\n  const { logout } = useAuthContext()\r\n  const [user, setUser] = useState([])\r\n  const [userType, setUserType] = useState([])\r\n  const [address, setAddress] = useState([])\r\n  const [patient, setPatient] = useState([])\r\n  const [openModalUser, setOpenModalUser] = useState(false);\r\n  const [openModalAddress, setOpenModalAddress] = useState(false);\r\n  const [openModalPatient, setOpenModalPatient] = useState(false);\r\n\r\n  const handleOpenModalUser = () => setOpenModalUser(!openModalUser);\r\n  const handleOpenModalAddress = () => setOpenModalAddress(!openModalAddress);\r\n  const handleOpenModalPatient = () => setOpenModalPatient(!openModalPatient);\r\n\r\n  useEffect(() => {\r\n    getUser()\r\n    getUserType()\r\n    getAddress()\r\n  }, [])\r\n\r\n  async function getUser(){\r\n    const result = await api.get('/usuario/getUserById')\r\n    setUser(result.data)\r\n  }\r\n\r\n  async function getAddress(){\r\n    const result = await api.get('/usuario/endereco')\r\n    setAddress(result.data)\r\n  }\r\n\r\n  async function getPatient(){\r\n    const result = await api.get('/paciente')\r\n    setPatient(result.data)\r\n  }\r\n\r\n  async function getUserType(){\r\n    const result = await api.get('/usuario/getType')\r\n    setUserType(result.data.tipo)\r\n\r\n    if(result.data.tipo === 'Paciente'){\r\n      getPatient()\r\n    }\r\n  }\r\n\r\n  async function disableAccount() {\r\n    const res = window.confirm('Deseja realmente desativar sua conta?')\r\n    if (res) {\r\n        try {\r\n            await api.put('/usuario/disable')\r\n            logout()\r\n        } catch (err) {\r\n            console.log(\"ops! ocorreu um erro\" + err)\r\n        }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <NavBar>\r\n          <BaseLayout title={`Perfil de ${user.nome}.`}>\r\n          \r\n              <Container style={{display: 'flex', alignItems: 'flex-end', flexWrap: 'wrap'}}>\r\n\r\n                <Box style={{padding: '10px', maxWidth: '250px', width: '100%'}} xs={12} sm={6} md={4} >\r\n                  <h2>Dados Pessoais:</h2> {/* Tabela usuário */}\r\n\r\n                  <p style={{margin: '5px 0px'}}><b>Nome:</b> {user.nome}</p>\r\n                  <p style={{margin: '5px 0px'}}><b>Gênero: </b> \r\n                                {user.genero === 'H' && 'Masculino'}\r\n                                {user.genero === 'M' && 'Feminino'}\r\n                                {user.genero === 'O' && 'Outro'}\r\n                                \r\n                  </p>\r\n                  <p style={{margin: '5px 0px'}}><b>Data de Nascimento:</b> {dayjs(user.dt_nascimento).format('DD/MM/YYYY')}</p>\r\n                  <p style={{margin: '5px 0px'}}><b>Telefone:</b> {user.telefone}</p>\r\n                  <p style={{margin: '5px 0px'}}><b>E-mail:</b> {user.email}</p>\r\n                  <Button size=\"large\" variant=\"contained\" color='primary' style={{width: '100%'}} onClick={handleOpenModalUser}>Editar</Button>\r\n                </Box>\r\n\r\n                <Modal\r\n                  open={openModalUser}\r\n                  onClose={handleOpenModalUser}\r\n                  aria-labelledby=\"modal-modal-title\"\r\n                  aria-describedby=\"modal-modal-description\"\r\n                >\r\n                  \r\n                  <Box sx={style} style={{padding: '0px 1.5rem 1.5rem 1.5rem'}}>\r\n                    <Button onClick={handleOpenModalUser} color='error' style={{fontSize: '25px', fontWeight: 'bold'}}>X</Button>\r\n                    <UpdateUserForm \r\n                      toggleModal={handleOpenModalUser} \r\n                      name={user.nome} \r\n                      gender={user.genero} \r\n                      telephone={user.telefone} \r\n                      email={user.email}\r\n\r\n                    />\r\n                  </Box>\r\n                </Modal>\r\n\r\n\r\n                <Box style={{padding: '10px', maxWidth: '250px', width: '100%'}} xs={12} sm={6} md={4} >\r\n                  <h2>Endereço:</h2> {/* Tabela endereço */}\r\n                  \r\n                  <p style={{margin: '5px 0px'}}><b>Endereço:</b> {address.logradouro}, {address.numero}</p>\r\n                  <p style={{margin: '5px 0px'}}><b>Cep:</b> {address.cep}</p>\r\n                  <p style={{margin: '5px 0px'}}><b>Complemento: </b>{!address.completo? 'editar para adicionar' : address.complemento}</p>\r\n                  <p style={{margin: '5px 0px'}}><b>Cidade:</b> {address.cidade}</p>\r\n                  <p style={{margin: '5px 0px'}}><b>Estado:</b> {address.estado}</p>\r\n                  <Button size=\"large\" variant=\"contained\" color='primary' style={{width: '100%'}} onClick={handleOpenModalAddress}>Editar</Button>\r\n                </Box>\r\n\r\n                <Modal\r\n                  open={openModalAddress}\r\n                  onClose={handleOpenModalAddress}\r\n                  aria-labelledby=\"modal-modal-title\"\r\n                  aria-describedby=\"modal-modal-description\"\r\n                >\r\n                  \r\n                  <Box sx={style} style={{padding: '0px 1.5rem 1.5rem 1.5rem'}}>\r\n                    <Button onClick={handleOpenModalAddress} color='error' style={{fontSize: '25px', fontWeight: 'bold'}}>X</Button>\r\n                    <UpdateAddressForm\r\n                      toggleModal={handleOpenModalAddress} \r\n                      cep={address.cep}\r\n                      number={address.numero} \r\n                      complement={address.complemento} \r\n                      city={address.cidade} \r\n                      state={address.estado}\r\n                    />\r\n                  </Box>\r\n                </Modal>\r\n                \r\n\r\n                {userType === 'Paciente' && (\r\n                  <>\r\n                    <Box style={{padding: '10px', maxWidth: '250px', width: '100%'}} xs={12} sm={6} md={4} >\r\n                      <h2>Dados do Paciente:</h2> \r\n\r\n                      <p style={{margin: '5px 0px'}}><b>Altura:</b> {patient.altura}</p>\r\n                      <p style={{margin: '5px 0px'}}><b>Peso:</b> {patient.peso} Kg</p>\r\n                      <p style={{margin: '5px 0px'}}><b>Médicamentos:</b> {!patient.medicamento ? 'editar para adicionar' : patient.medicamento}</p>\r\n                      <p style={{margin: '5px 0px'}}><b>Doenças Crônicas:</b> {!patient.doenca_cronica ? 'editar para adicionar' : patient.doenca_cronica}</p>\r\n                      <p style={{margin: '5px 0px'}}><b>Alergias:</b> {!patient.alergia ? 'editar para adicionar' : patient.alergia}</p>\r\n                      <p style={{margin: '5px 0px'}}><b>Vicios:</b> {!patient.vicio ? 'editar para adicionar' : patient.vicio}</p>\r\n                      <Button size=\"large\" variant=\"contained\" color='primary' style={{width: '100%'}} onClick={handleOpenModalPatient}>Editar</Button>\r\n                    </Box>\r\n                    <Modal\r\n                      open={openModalPatient}\r\n                      onClose={handleOpenModalPatient}\r\n                      aria-labelledby=\"modal-modal-title\"\r\n                      aria-describedby=\"modal-modal-description\"\r\n                    >\r\n                    \r\n                    <Box sx={style} style={{padding: '0px 1.5rem 1.5rem 1.5rem'}}>\r\n                      <Button onClick={handleOpenModalPatient} color='error' style={{fontSize: '25px', fontWeight: 'bold'}}>X</Button>\r\n                      <UpdatePatientForm\r\n                        toggleModal={handleOpenModalPatient} \r\n                        height={patient.altura}\r\n                        weight={patient.peso}\r\n                        medicine={patient.medicamento}\r\n                        disease={patient.doenca_cronica}\r\n                        allergies={patient.alergia}\r\n                        addiction={patient.vicio}\r\n                      />\r\n                    </Box>\r\n                  </Modal>\r\n                </>\r\n                )}\r\n\r\n\r\n                <Box style={{padding: '10px', maxWidth: '250px', width: '100%'}} xs={12} sm={6} md={4} >\r\n                  <h2>Desativar Conta: </h2>\r\n                  <Button size=\"large\" variant=\"contained\" color='error' style={{width: '100%'}} onClick={disableAccount}>Desativar</Button>\r\n                </Box>\r\n\r\n              </Container>\r\n\r\n          </BaseLayout> \r\n        </NavBar>\r\n    </div>\r\n\r\n  )\r\n}\r\n","import { styled } from '@mui/system'\r\nimport { Button, Grid, Paper, TextField } from '@mui/material'\r\n\r\n\r\nexport const ButtonRegister = styled(Button)({\r\n    margin: '0px 8px 8px 8px'\r\n})\r\n\r\nexport const Container = styled('div')({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    width: '50%'\r\n})\r\n\r\nexport const DoubleItem = styled('div')({\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n})\r\n\r\nexport const InputBox = styled(TextField)({\r\n    color: 'black'\r\n})\r\n\r\nexport const InputItem = styled(TextField)({\r\n    display: 'flex',\r\n    marginBottom: 16,\r\n    width: '100%'\r\n})\r\n\r\nexport const Logo = styled('img')({\r\n    width: 400,\r\n    margin: '32px 8px 16px 8px'\r\n})\r\n\r\nexport const LogoContainer = styled(Container)({\r\n    alignItems: 'center'\r\n})\r\n\r\nexport const PaperStyled = styled(Paper)({\r\n    padding: 24,\r\n    height: '90vh',\r\n    width: 640,\r\n    margin: '20px auto'\r\n\r\n})\r\n\r\nexport const Principal = styled(Grid)({\r\n    display: 'flex',\r\n    height: '100vh'\r\n\r\n})\r\n\r\nexport const RegisterContainer  = styled(Container)({\r\n    justifyContent: 'center'\r\n})\r\n\r\nexport const Text = styled('div')({\r\n    margin: '8px 0px 16px 0px'\r\n})\r\n\r\nexport const Title = styled('h1')({\r\n    alignText: 'center',\r\n    margin: 8\r\n})","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    MonitorWeight,Height, PestControl, Coronavirus, SmokingRooms, Medication} from '@mui/icons-material'\r\nimport api from '../../services/api'\r\nimport { Box, InputAdornment, Button, Snackbar, IconButton, Alert } from '@mui/material'\r\nimport {DoubleItem, InputItem} from '../../styles/Cadastro'\r\n\r\nfunction FormPaciente() {\r\n    const [peso, setPeso] = useState(\"\")\r\n    const [altura, setAltura] = useState(\"\")\r\n    const [alergia, setAlergia] = useState(\"\")\r\n    const [doenca, setDoenca] = useState(\"\")\r\n    const [vicio, setVicio] = useState(\"\")\r\n    const [medicamento, setMedicamento] = useState(\"\")\r\n    const [open, setOpen] = useState(false);\r\n    const [open1, setOpen1] = useState(false);\r\n    const [open2, setOpen2] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getPaciente();\r\n    }, [])\r\n\r\n    async function getPaciente() {\r\n        const result = await api.get('/paciente')\r\n        setPeso(result.data.peso)\r\n        setAltura(result.data.altura)\r\n        setAlergia(result.data.alergia)\r\n        setDoenca(result.data.doenca_cronica)\r\n        setVicio(result.data.vicio)\r\n        setMedicamento(result.data.medicamento)\r\n    }\r\n\r\n    async function atualizarPaciente() {\r\n        if (!peso) {\r\n            handleClick()\r\n            return\r\n        }\r\n\r\n        if (!altura) {\r\n            handleClick1()\r\n            return\r\n        }\r\n\r\n        handleClick2()\r\n        await api.put('/paciente', { peso, altura, alergia, doenca_cronica: doenca, vicio, medicamento })\r\n        setTimeout(() => {\r\n            window.location.reload(false)\r\n        }, 3000)\r\n\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\t\r\n    \r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleClick1 = () => {\r\n        setOpen1(true);\r\n    };\t\r\n    \r\n    const handleClose1 = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen1(false);\r\n    };\r\n\r\n    const handleClick2 = () => {\r\n        setOpen2(true);\r\n    };\t\r\n    \r\n    const handleClose2 = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen2(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                style={{width: '40%'}}\r\n            >\r\n                <Alert variant=\"filled\" severity=\"warning\" onClose={handleClose} sx={{ width: '100%' }}>Peso é obrigatório.</Alert>\r\n            </Snackbar>\r\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={open1}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose1}\r\n                style={{width: '40%'}}\r\n            >\r\n                <Alert variant=\"filled\" severity=\"warning\" onClose={handleClose1} sx={{ width: '100%' }}>Altura é obrigatório.</Alert>\r\n            </Snackbar>\r\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={open2}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose2}\r\n                style={{width: '40%'}}\r\n            >\r\n                <Alert variant=\"filled\" severity=\"success\" onClose={handleClose2} sx={{ width: '100%' }}>Usuario Atualizado.</Alert>\r\n            </Snackbar>\r\n\r\n            <DoubleItem>\r\n                <Box>\r\n                    <InputItem\r\n                        style={{ width: 300 }}\r\n                        variant=\"filled\"\r\n                        label=\"Peso\"\r\n                        value={peso}\r\n                        onChange={e => setPeso(e.target.value)}\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <MonitorWeight />\r\n                                </InputAdornment>),\r\n                        }}\r\n                    />\r\n                </Box>\r\n                <Box>\r\n                    <InputItem\r\n                        style={{ width: 300 }}\r\n                        variant=\"filled\"\r\n                        label=\"Altura\"\r\n                        value={altura}\r\n                        onChange={e => setAltura(e.target.value)}\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Height />\r\n                                </InputAdornment>),\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </DoubleItem>\r\n            <DoubleItem>\r\n                <Box>\r\n                    <InputItem\r\n                        style={{ width: 300 }}\r\n                        variant=\"filled\"\r\n                        label=\"Alergia(s)\"\r\n                        value={alergia}\r\n                        onChange={e => setAlergia(e.target.value)}\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    < PestControl />\r\n                                </InputAdornment>),\r\n                        }}\r\n                    />\r\n                </Box>\r\n                <Box>\r\n                    <InputItem\r\n                        style={{ width: 300 }}\r\n                        variant=\"filled\"\r\n                        label=\"Doença(s) cronica\"\r\n                        value={doenca}\r\n                        onChange={e => setDoenca(e.target.value)}\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Coronavirus />\r\n                                </InputAdornment>),\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </DoubleItem>\r\n            <DoubleItem>\r\n                <Box>\r\n                    <InputItem\r\n                        style={{ width: 300 }}\r\n                        variant=\"filled\"\r\n                        label=\"Vicio(s)\"\r\n                        value={vicio}\r\n                        onChange={e => setVicio(e.target.value)}\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <SmokingRooms />\r\n                                </InputAdornment>),\r\n                        }}\r\n                    />\r\n                </Box>\r\n                <Box>\r\n                    <InputItem\r\n                        style={{ width: 300 }}\r\n                        variant=\"filled\"\r\n                        label=\"Medicamento(s)\"\r\n                        value={medicamento}\r\n                        onChange={e => setMedicamento(e.target.value)}\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Medication />\r\n                                </InputAdornment>),\r\n                        }}\r\n                    />\r\n                </Box>\r\n            </DoubleItem>\r\n            <Button variant=\"contained\" size=\"large\" color=\"success\" sx={{ margin: 1 }} onClick={atualizarPaciente}><h4>ATUALIZAR</h4></Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormPaciente","import * as React from 'react';\r\nimport { useState, useEffect } from 'react'\r\nimport { styled } from '@mui/system';\r\nimport TabsUnstyled from '@mui/base/TabsUnstyled';\r\nimport TabsListUnstyled from '@mui/base/TabsListUnstyled';\r\nimport TabPanelUnstyled from '@mui/base/TabPanelUnstyled';\r\nimport { buttonUnstyledClasses } from '@mui/base/ButtonUnstyled';\r\nimport TabUnstyled, { tabUnstyledClasses } from '@mui/base/TabUnstyled';\r\nimport api from '../../services/api'\r\nimport NavBar from '../../components/NavBar'\r\nimport FormUsuario from '../../components/Configuracoes/FormUsuario'\r\nimport FormEndereco from '../../components/Configuracoes/FormEndereco'\r\nimport FormPaciente from '../../components/Configuracoes/FormPaciente'\r\nimport { Button, Snackbar, IconButton, Alert } from '@mui/material'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Container } from '../../styles/Configuracoes'\r\nimport BaseLayout from '../../layouts/BaseLayout'\r\n\r\n\r\nconst blue = {\r\n  50: '#F0F7FF',\r\n  100: '#C2E0FF',\r\n  200: '#80BFFF',\r\n  300: '#66B2FF',\r\n  400: '#3399FF',\r\n  500: '#007FFF',\r\n  600: '#0072E5',\r\n  700: '#0059B2',\r\n  800: '#004C99',\r\n  900: '#003A75',\r\n};\r\n\r\nconst Tab = styled(TabUnstyled)`\r\n  font-family: IBM Plex Sans, sans-serif;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 0.875rem;\r\n  font-weight: bold;\r\n  background-color: transparent;\r\n  width: 100%;\r\n  padding: 12px 16px;\r\n  margin: 6px 6px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  &:hover {\r\n    background-color: ${blue[400]};\r\n  }\r\n\r\n  &:focus {\r\n    color: #fff;\r\n    border-radius: 3px;\r\n    outline: 2px solid ${blue[200]};\r\n    outline-offset: 2px;\r\n  }\r\n\r\n  &.${tabUnstyledClasses.selected} {\r\n    background-color: ${blue[50]};\r\n    color: ${blue[600]};\r\n  }\r\n\r\n  &.${buttonUnstyledClasses.disabled} {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst TabPanel = styled(TabPanelUnstyled)`\r\n  width: 100%;\r\n  font-family: IBM Plex Sans, sans-serif;\r\n  font-size: 0.875rem;\r\n`;\r\n\r\nconst TabsList = styled(TabsListUnstyled)`\r\n  min-width: 320px;\r\n  background-color: ${blue[500]};\r\n  border-radius: 8px;\r\n  margin-bottom: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  align-content: space-between;\r\n`;\r\n\r\nexport default function Configuracoes() {\r\n  const navigate = useNavigate()\r\n  const [tipo, setTipo] = useState(\"\")\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getType()\r\n  },[])\r\n\r\n  async function getType(){\r\n    const result = await api.get('/usuario/getType')\r\n    setTipo(result.data.tipo)\r\n  }\r\n\r\n  async function desativarConta() {\r\n    const res = window.confirm('Deseja realmente excluir?')\r\n    if (res) {\r\n        try {\r\n            await api.put('/usuario/disable')\r\n            handleClick()\r\n            localStorage.removeItem(\"token\")\r\n            setTimeout(() => {\r\n              navigate('/');\r\n            }, 3000)  \r\n        } catch (err) {\r\n            console.log(\"ops! ocorreu um erro\" + err)\r\n        }\r\n    }\r\n  }\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\t\r\n\r\n  const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n          return;\r\n      }\r\n      setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <NavBar>\r\n      <BaseLayout title='Configurações'>\r\n        <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n          open={open}\r\n          autoHideDuration={6000}\r\n          onClose={handleClose}\r\n          style={{width: '40%'}}\r\n        >\r\n            <Alert variant=\"filled\" severity=\"success\" onClose={handleClose} sx={{ width: '100%' }}>Usuário desativado!.</Alert>\r\n        </Snackbar>\r\n        <Container>\r\n          <Button variant=\"contained\" size=\"large\" color=\"error\" sx={{ margin: 1 }} onClick={desativarConta}><h4>DESATIVAR CONTA</h4></Button>\r\n          <TabsUnstyled defaultValue={0}>\r\n            <TabsList>\r\n              <Tab>Dados de Acesso</Tab>\r\n              <Tab>Endereço</Tab>\r\n              {tipo === 'Paciente' && <Tab>Dados do Paciente</Tab>}\r\n            </TabsList>\r\n            <TabPanel value={0}>\r\n              <FormUsuario/>\r\n            </TabPanel>\r\n            <TabPanel value={1}><FormEndereco/></TabPanel>\r\n            <TabPanel value={2}>\r\n              {tipo === 'Paciente' && <FormPaciente/>}\r\n            </TabPanel>\r\n          </TabsUnstyled>\r\n        </Container>\r\n      </BaseLayout>\r\n    </NavBar>\r\n  )\r\n}","import {useState, useEffect} from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Button, Typography, Select, MenuItem, InputLabel, FormControl, FormGroup, FormControlLabel, Checkbox, Snackbar, IconButton, Alert } from '@mui/material';\r\nimport { api } from '../../services/api'\r\nimport NavBar from '../../components/NavBar'\r\nimport BaseLayout from '../../layouts/BaseLayout'\r\nimport styles from './DisponibilidadeMedica.module.css'\r\n\r\nimport {\r\n    Div,\r\n  } from '../../styles/Cadastro/Cadastro'\r\nimport { ConstructionOutlined } from '@mui/icons-material';\r\n\r\nlet DisponibilidadeMedica = () => {\r\n    let navigate = useNavigate()\r\n    const [diasSelecionados, setDiasSelecionados] = useState([])\r\n    const [diasDaSemana, setDiasDaSemana] = useState([])\r\n    const [inicioExpediente, setInicioExpediente] = useState(\"\")\r\n    const [terminoExpediente, setTerminoExpediente] = useState(\"\")\r\n    const [inicioAlmoco, setInicioAlmoco] = useState(\"\")\r\n    const [terminoAlmoco, setTerminoAlmoco] = useState(\"\")\r\n    const [disponibilidade, setDisponibilidade] = useState([])\r\n    const [open, setOpen] = useState(false);\r\n    const horas = ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23']\r\n    // const horas = ['00:00', '01:00', '02:00', '03:00']\r\n\r\n    useEffect(() => {\r\n        getDisponibilidadeMedica()\r\n        getDiasDaSemana()\r\n    }, [])\r\n\r\n    async function getDiasDaSemana(){\r\n        const result = await api.get('/getDiasDaSemana')\r\n        setDiasDaSemana(result.data)\r\n    }\r\n    async function getDisponibilidadeMedica(){\r\n        const result = await api.get(\"/getDisponibilidadeMedica\")\r\n\r\n        if(result.data.length > 0){\r\n            setDisponibilidade(result.data)\r\n\r\n            let aux = []\r\n        \r\n            result.data.forEach((item) => {\r\n                if(!aux.includes(item.dia)){\r\n                    aux.push(item.dia)\r\n                    aux.sort()\r\n                }\r\n            })\r\n\r\n            aux.forEach((item) => {\r\n                document.querySelectorAll('.checkbox')[item].checked = true\r\n            })\r\n\r\n            setInicioExpediente(result.data[0].horas)\r\n            setTerminoExpediente(parseInt(result.data[result.data.length - 1].horas) + 1)\r\n\r\n            let auxAlmoco = []\r\n            result.data.map(item => {\r\n                if(!auxAlmoco.includes(item.horas)){\r\n                    auxAlmoco.push(item.horas)\r\n                }\r\n            })            \r\n\r\n            let hrAnterior\r\n\r\n            for (let i = 0; i < auxAlmoco.length; i++) {\r\n                let hrMenosUm = auxAlmoco[i]\r\n                hrMenosUm = parseInt(hrMenosUm) - 1\r\n\r\n                if(hrMenosUm < 10){\r\n                    hrMenosUm = String(hrMenosUm)\r\n                    hrMenosUm = '0' + hrMenosUm\r\n                }\r\n\r\n                if(i == 0){\r\n                    hrAnterior = hrMenosUm\r\n                }\r\n\r\n                if(String(hrAnterior) !== String(hrMenosUm)){\r\n                    setInicioAlmoco(hrMenosUm)\r\n                    setTerminoAlmoco(auxAlmoco[i])\r\n                }\r\n\r\n                hrAnterior = auxAlmoco[i]\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    async function enviar(e){\r\n        e.preventDefault();\r\n\r\n        if(disponibilidade.length > 0){\r\n            await api.delete(\"/definirDisponibilidadeMedica\")\r\n        }\r\n\r\n        let checkBoxes = document.querySelectorAll('.checkbox')\r\n        let selecionados = []\r\n\r\n        checkBoxes.forEach((el) => {\r\n            if(el.checked){\r\n                selecionados.push(el.value)\r\n            }\r\n        })\r\n\r\n        setDiasSelecionados(selecionados)\r\n\r\n        let dias_selecionados = diasSelecionados.toString()\r\n        \r\n        let termino = parseInt(terminoExpediente)\r\n        let inicioAlmo = parseInt(inicioAlmoco)\r\n        \r\n\r\n\r\n        selecionados.map(async function inserir(selecionado){\r\n            let inicio = parseInt(inicioExpediente)\r\n            let intervalo = termino - inicio\r\n\r\n            for (let i = 0; i < intervalo; i++) {\r\n                if(inicio !== inicioAlmo){\r\n                    if(inicio < 10){\r\n                        inicio = String(inicio)\r\n                        inicio = '0' + inicio\r\n                    }\r\n                    await api.post(\"/definirDisponibilidadeMedica\", { horas: inicio, dia_selecionado: selecionado })\r\n                }\r\n                inicio++\r\n            }      \r\n        })\r\n\r\n        handleClick()\r\n        setTimeout(() => {\r\n            navigate('/inicio')\r\n        }, 3000)        \r\n    }\r\n\r\n    function verificarDiasSelecionados(){\r\n        let checkBoxes = document.querySelectorAll('.checkbox')\r\n        let dias_selecionados = []\r\n\r\n        checkBoxes.forEach((el) => {\r\n            if(el.checked){\r\n                dias_selecionados.push(el.value)\r\n            }\r\n        })\r\n\r\n        setDiasSelecionados(dias_selecionados)\r\n    }\r\n\r\n    function setAlmoco(hora){\r\n        setInicioAlmoco(hora)\r\n        setTerminoAlmoco(parseInt(hora)+1)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\t\r\n    \r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    return(\r\n        <NavBar>  \r\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                style={{width: '40%'}}\r\n            >\r\n                <Alert variant=\"filled\" severity=\"success\" onClose={handleClose} sx={{ width: '100%' }}>Disponibilidade Definida com Sucesso.</Alert>\r\n            </Snackbar>  \r\n            <BaseLayout title='Configurações'>\r\n                {/* <div className={styles.container}> */}\r\n                    <form onSubmit={enviar} style={{width: '100%'}}>\r\n\r\n                    {/* <FormGroup aria-label=\"position\" row style={{justifyContent: 'space-between'}}>\r\n                        {diasDaSemana.map(dia => (\r\n                            <FormControlLabel control={<Checkbox />} label={dia.titulo} labelPlacement=\"bottom\"/>\r\n                        ))} \r\n\r\n                    </FormGroup> */}\r\n\r\n                        <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between'}}>\r\n                            <div className={styles.dia} style={{display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '1rem'}}>\r\n                                <input type=\"checkbox\" className=\"checkbox\" id=\"domingo\" name=\"domingo\" value=\"0\" style={{width: '18px', height: '18px'}}/>\r\n                                <label htmlFor=\"domingo\"> Domingo</label>\r\n                            </div>\r\n                            <div className={styles.dia} style={{display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '1rem'}}>\r\n                                <input type=\"checkbox\" className=\"checkbox\" id=\"segunda\" name=\"segunda\" value=\"1\" style={{width: '18px', height: '18px'}} />\r\n                                <label htmlFor=\"segunda\"> Segunda-Feira</label>\r\n                            </div>\r\n                            <div className={styles.dia} style={{display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '1rem'}}>\r\n                                <input type=\"checkbox\" className=\"checkbox\"id=\"terca\" name=\"terca\" value=\"2\" style={{width: '18px', height: '18px'}} />\r\n                                <label htmlFor=\"terca\"> Terça-Feira</label>\r\n                            </div>\r\n                            <div className={styles.dia} style={{display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '1rem'}}>\r\n                                <input type=\"checkbox\" className=\"checkbox\" id=\"quarta\" name=\"quarta\" value=\"3\" style={{width: '18px', height: '18px'}} />\r\n                                <label htmlFor=\"quarta\"> Quarta-Feira</label>\r\n                            </div>\r\n                            <div className={styles.dia} style={{display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '1rem'}}>\r\n                                <input type=\"checkbox\" className=\"checkbox\" id=\"quinta\" name=\"quinta\" value=\"4\" style={{width: '18px', height: '18px'}} />\r\n                                <label htmlFor=\"quinta\"> Quinta-Feira</label>\r\n                            </div>\r\n                            <div className={styles.dia} style={{display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '1rem'}}>\r\n                                <input type=\"checkbox\" className=\"checkbox\" id=\"sexta\" name=\"sexta\" value=\"5\" style={{width: '18px', height: '18px'}} />\r\n                                <label htmlFor=\"sexta\"> Sexta-Feira</label>\r\n                            </div>\r\n                            <div className={styles.dia} style={{display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '1rem'}}>\r\n                                <input type=\"checkbox\" className=\"checkbox\" id=\"sabado\" name=\"sabado\" value=\"6\" style={{width: '18px', height: '18px'}} />\r\n                                <label htmlFor=\"sabado\"> Sábado</label>\r\n                            </div>\r\n                        </div>\r\n                        \r\n\r\n                        \r\n                        {/* <div className={styles.expediente}> */}\r\n                            {/* <div className={styles.leftSide}>\r\n                                <p>Inicio:</p>\r\n                                <input type=\"time\" id=\"inicioExpediente\" defaultValue={inicioExpediente} onChange={(e) => setInicioExpediente(e.target.value)}/>\r\n                            </div> */}\r\n\r\n                            {/* <div className={styles.rightSide}>\r\n                                <p>Termino:</p>\r\n                                {inicioExpediente === '' ? \r\n                                    <input type=\"time\" id=\"terminoExpediente\" disabled/>\r\n                                :\r\n                                    <input type=\"time\" defaultValue={terminoExpediente} onChange={(e) => setTerminoExpediente(e.target.value)}/>\r\n                                }\r\n                            </div> */}\r\n\r\n                            <Div style={{width: '100%', marginTop: '2rem'}}>\r\n                                <FormControl variant=\"outlined\" fullWidth> \r\n                                    <>       \r\n                                        <InputLabel size=\"small\">Inicio Expediente</InputLabel>\r\n                                        <Select\r\n                                            size=\"small\"\r\n                                            labelId=\"inicioExpediente\"\r\n                                            id=\"inicioExpediente\"\r\n                                            label=\"inicioExpediente\"\r\n                                            name=\"inicioExpediente\" \r\n                                            onChange={(e) => setInicioExpediente(e.target.value)}\r\n                                            value={inicioExpediente}\r\n                                        >\r\n                                            {horas.map(hr => (<MenuItem key={hr} value={hr}>{hr}</MenuItem>))}\r\n                                        </Select>\r\n                                    </>\r\n                                </FormControl>\r\n                            </Div>\r\n\r\n                            <Div style={{width: '100%'}}>\r\n                                <FormControl variant=\"outlined\" fullWidth disabled={(!inicioExpediente) ? true : false}> \r\n                                    <>       \r\n                                        <InputLabel size=\"small\">Termino Expediente</InputLabel>\r\n                                        <Select\r\n                                            size=\"small\"\r\n                                            labelId=\"terminoExpediente\"\r\n                                            id=\"terminoExpediente\"\r\n                                            label=\"terminoExpediente\"\r\n                                            name=\"terminoExpediente\" \r\n                                            onChange={(e) => setTerminoExpediente(e.target.value)}\r\n                                            value={terminoExpediente}\r\n                                        >\r\n                                            {horas.map(hr => {\r\n                                                if(parseInt(hr) > parseInt(inicioExpediente)){\r\n                                                    return(<MenuItem key={hr} value={hr}>{hr}</MenuItem>)\r\n                                                }\r\n                                            })}\r\n                                        </Select>\r\n                                    </>\r\n                                </FormControl>\r\n                            </Div>\r\n                        {/* </div> */}\r\n                        \r\n                       \r\n                        \r\n                        {/* <div className={styles.almoco}> */}\r\n                            {/* <div className={styles.leftSide}>\r\n                                <p>Inicio:</p>\r\n                                <input type=\"time\" id=\"inicioAlmoco\" defaultValue={inicioAlmoco} onChange={(e) => setInicioAlmoco(e.target.value)}/>\r\n                            </div> */}\r\n\r\n                            {/* <div className={styles.rightSide}>\r\n                                <p>Termino:</p>\r\n                                {inicioAlmoco === '' ? \r\n                                    <input type=\"time\" id=\"terminoAlmoco\" disabled/>\r\n                                :\r\n                                    <input type=\"time\" defaultValue={terminoAlmoco} onChange={(e) => setTerminoAlmoco(e.target.value)}/>\r\n                                }\r\n                            </div> */}\r\n\r\n                            <Div style={{width: '100%'}}>\r\n                                <FormControl variant=\"outlined\" fullWidth disabled={(!inicioExpediente && !terminoExpediente) ? true : false}> \r\n                                    <>        \r\n                                        <InputLabel size=\"small\">Inicio Almoço</InputLabel>\r\n                                        <Select\r\n                                            size=\"small\"\r\n                                            labelId=\"inicioAlmoco\"\r\n                                            id=\"inicioAlmoco\"\r\n                                            label=\"inicioAlmoco\"\r\n                                            name=\"inicioAlmoco\" \r\n                                            onChange={(e) => setAlmoco(e.target.value)}\r\n                                            value={inicioAlmoco}\r\n                                        >\r\n                                            {horas.map(hr => {\r\n                                                if((parseInt(hr) > parseInt(inicioExpediente)) && parseInt(hr) < parseInt(terminoExpediente)){\r\n                                                    return(<MenuItem key={hr} value={hr}>{hr}</MenuItem>)\r\n                                                }\r\n                                            })}   \r\n                                        </Select>\r\n                                    </>\r\n                                </FormControl>\r\n                            </Div>\r\n                            \r\n                            \r\n                            {/* {horas.map(hr => (<h1>{hr}</h1>))}    */}\r\n\r\n                            <Div style={{width: '100%'}}>\r\n                                <FormControl variant=\"outlined\" fullWidth disabled> \r\n                                    <>       \r\n                                        <InputLabel size=\"small\">Fim Almoço</InputLabel>\r\n                                        <Select\r\n                                            size=\"small\"\r\n                                            labelId=\"terminoAlmoco\"\r\n                                            id=\"terminoAlmoco\"\r\n                                            label=\"terminoAlmoco\"\r\n                                            name=\"terminoAlmoco\" \r\n                                            value={terminoAlmoco}\r\n                                        >\r\n                                            <MenuItem key={terminoAlmoco} value={terminoAlmoco}>{terminoAlmoco}</MenuItem>  \r\n                                        </Select>\r\n                                    </>\r\n                                </FormControl>\r\n                            </Div>\r\n                        {/* </div> */}\r\n                        \r\n                        <Button variant=\"contained\" fullWidth onClick={enviar} style={{marginTop: '1rem'}}>Salvar</Button>\r\n                        \r\n                    </form>\r\n                {/* </div> */}\r\n            </BaseLayout>\r\n        </NavBar>\r\n    )\r\n}\r\n\r\nexport default DisponibilidadeMedica","import { styled } from '@mui/system'\r\nimport { Button, Paper } from '@mui/material'\r\n\r\nexport const ButtonTool = styled(Button)({\r\n    margin: '0px 4px 0px 4px'\r\n})\r\n\r\nexport const PaperStyled = styled(Paper)({\r\n    padding: 8\r\n})\r\n\r\nexport const ButtonBox = styled('div')({\r\n    display: 'flex'\r\n})","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport api from '../../services/api'\r\nimport { \r\n    Box,\r\n    Button,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    TextField,\r\n    useTheme,\r\n    Snackbar, \r\n    IconButton, \r\n    Alert\r\n} from '@mui/material'\r\nimport { Add, BorderColor, Delete, Event } from '@mui/icons-material'\r\nimport { ButtonBox, ButtonTool, PaperStyled } from '../../styles/UsuariosListagem'\r\nimport NavBar from '../../components/NavBar'\r\nimport BaseLayout from '../../layouts/BaseLayout'\r\n\r\nfunction UsuariosListagem(){\r\n    let navigate = useNavigate()\r\n    const theme = useTheme()\r\n    const [users, setUsers] = useState([])\r\n    const [tipo, setTipo] = useState(\"\")\r\n    const [loading, setLoading] = useState(true)\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getType()\r\n        loadUsers()\r\n    },[])\r\n\r\n    setInterval(loadUsers, 60000)\r\n\r\n    async function loadUsers(){\r\n        const response = await api.get('/admin')\r\n        setUsers(response.data)\r\n        setLoading(false)\r\n    }\r\n\r\n    async function getType(){\r\n        const result = await api.get('/usuario/getType')\r\n        setTipo(result.data.tipo)\r\n    }\r\n\r\n    async function remove(id){\r\n        const res = window.confirm('Deseja realmente excluir?')\r\n        if(res){\r\n            try {\r\n                const result = await api.put(`/usuario/${id}`)\r\n                console.log(result.data)\r\n                handleClick()\r\n                setTimeout(() => {\r\n                    window.location.reload()\r\n                }, 3000)                \r\n            } catch(err) {\r\n                console.log(\"ops! ocorreu um erro\" + err)\r\n            }\r\n        }\r\n    }\r\n\r\n    if (loading) {\r\n        return <div>Carregando dados...</div>\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\t\r\n    \r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <NavBar>\r\n                <BaseLayout title='Gerenciar Usuários'>\r\n                    <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                        open={open}\r\n                        autoHideDuration={6000}\r\n                        onClose={handleClose}\r\n                        style={{width: '40%'}}\r\n                    >\r\n                        <Alert variant=\"filled\" severity=\"success\" onClose={handleClose} sx={{ width: '100%' }}>Usuário excluido com sucesso.</Alert>\r\n                    </Snackbar>\r\n                    <Box\r\n                        display='flex'\r\n                        alignItems='center'\r\n                        height={theme.spacing(5)}\r\n                    >\r\n                        {/*<TextField\r\n                            size='small'\r\n                            placeholder='Pesquisar...'\r\n                        />*/}\r\n                        <Box\r\n                            flex={1}\r\n                            display='flex'\r\n                            justifyContent='end'\r\n                            marginBottom={2}\r\n                        >\r\n                            <Button\r\n                                color='primary'\r\n                                variant='contained'\r\n                                disableElevation\r\n                                startIcon={<Add/>}\r\n                            >\r\n                                Novo Usuário\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                    \r\n                    {tipo === 'Medico' && <h1>MEDICO</h1>}\r\n                    {tipo === 'Paciente' && <h1>PACIENTE</h1>}\r\n                    <PaperStyled>\r\n                        <h2>Listagem de Usuários</h2>\r\n                        <TableContainer component={Paper} elevation={0}>\r\n                            <Table aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>ID</TableCell>\r\n                                    <TableCell>NOME</TableCell>\r\n                                    <TableCell>DATA DE NASCIMENTO</TableCell>\r\n                                    <TableCell>GÊNERO</TableCell>\r\n                                    <TableCell>E-MAIL</TableCell>\r\n                                    <TableCell>CRIADO EM</TableCell>\r\n                                    <TableCell>ATUALIZADO EM</TableCell>\r\n                                    <TableCell>AÇÕES</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {users.map(u => (\r\n                                    <TableRow key={u.id}>\r\n                                        <TableCell component=\"th\" scope=\"row\">{u.id}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\">{u.nome}</TableCell>\r\n                                        <TableCell>{new Date(u.dt_nascimento).toLocaleDateString('pt-br')}</TableCell>\r\n                                        <TableCell>{u.genero}</TableCell>\r\n                                        <TableCell>{u.email}</TableCell>\r\n                                        <TableCell>{new Date(u.criado_em).toLocaleString('pt-br')}</TableCell>\r\n                                        <TableCell>{new Date(u.atualizado_em).toLocaleString('pt-br')}</TableCell>\r\n                                        <TableCell>\r\n                                            <ButtonBox>\r\n                                                <ButtonTool\r\n                                                    size=\"small\"\r\n                                                    variant=\"outlined\"\r\n                                                    color=\"primary\"\r\n                                                    onClick={() => navigate(`/usuario/consultas/${u.id}`)}\r\n                                                >\r\n                                                    <Event/>\r\n                                                </ButtonTool>\r\n                                                <ButtonTool\r\n                                                    size=\"small\"\r\n                                                    variant=\"outlined\"\r\n                                                    color=\"primary\"\r\n                                                    onClick={() => navigate(`/usuario/editar/${u.id}`)}\r\n                                                >\r\n                                                    <BorderColor/>\r\n                                                </ButtonTool>\r\n                                                <ButtonTool\r\n                                                    size=\"small\"\r\n                                                    variant=\"outlined\"\r\n                                                    color=\"error\"\r\n                                                    onClick={() => remove(u.id)}\r\n                                                >\r\n                                                    <Delete/>\r\n                                                </ButtonTool>\r\n                                            </ButtonBox>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </PaperStyled>\r\n                </BaseLayout>\r\n            </NavBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsuariosListagem\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport api from '../../services/api'\r\nimport { \r\n    Accordion,\r\n    AccordionSummary,\r\n    AccordionDetails,\r\n    Typography,\r\n    Button,\r\n    Snackbar, \r\n    IconButton, \r\n    Alert\r\n} from '@mui/material'\r\nimport {ExpandMore} from '@mui/icons-material';\r\nimport NavBar from '../../components/NavBar'\r\nimport BaseLayout from '../../layouts/BaseLayout'\r\n\r\nfunction CheckNewDoctors(){    \r\n    const [newDoctors, setNewDoctors] = useState([])\r\n    const [specialties, setSpecialties] = useState([])\r\n    const [open, setOpen] = useState(false);\r\n    const [open1, setOpen1] = useState(false);\r\n    const [open2, setOpen2] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getNewDoctors()\r\n        getAllSpecialities()\r\n    },[])\r\n\r\n    async function getNewDoctors(){\r\n        const result = await api.get('/medico/getNewDoctors')\r\n        setNewDoctors(result.data)\r\n    }\r\n\r\n    setInterval(getNewDoctors, 60000)\r\n\r\n    async function getAllSpecialities(){\r\n        const result = await api.get(`/medico/getSpecialityByDoctor`)\r\n        setSpecialties(result.data)\r\n    }\r\n\r\n    async function deleteMedicoEspecialidade(id_medico, id_especialidade){\r\n        const res = window.confirm('Deseja Realmente Remover Essa Especialidade?')\r\n        if (res) {\r\n            await api.delete(`/medico/medico_especialidade/${id_medico}/${id_especialidade}`)\r\n            handleClick()\r\n            getAllSpecialities()\r\n        }\r\n    }\r\n\r\n    async function aprovarCadastro(id_medico, nome, email){\r\n        const res = window.confirm(\"Ao clicar em 'OK' você concorda com todas as especialidades selecionadas\")\r\n        if (res) {\r\n            await api.put(`/medico/validar_medico/${id_medico}/${nome}/${email}`)\r\n            handleClick1()\r\n            getNewDoctors()\r\n        }\r\n    }\r\n    async function reprovarCadastro(id_medico, nome, email){\r\n        const res = window.confirm(\"Deseja realmente reprovar o cadastro?\")\r\n        if (res) {\r\n            await api.delete(`/medico/reprovarMedico/${id_medico}/${nome}/${email}`)\r\n            handleClick2()\r\n            getNewDoctors()\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\t\r\n    \r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    \r\n    const handleClick1 = () => {\r\n        setOpen1(true);\r\n    };\t\r\n    \r\n    const handleClose1 = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen1(false);\r\n    };\r\n\r\n    const handleClick2 = () => {\r\n        setOpen2(true);\r\n    };\t\r\n    \r\n    const handleClose2 = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen2(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n            open={open}\r\n            autoHideDuration={6000}\r\n            onClose={handleClose}\r\n            style={{width: '40%'}}\r\n        >\r\n            <Alert variant=\"filled\" severity=\"success\" onClose={handleClose} sx={{ width: '100%' }}>Especialidade Removida.</Alert>\r\n        </Snackbar>\r\n\r\n        <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n            open={open1}\r\n            autoHideDuration={6000}\r\n            onClose={handleClose1}\r\n            style={{width: '40%'}}\r\n        >\r\n            <Alert variant=\"filled\" severity=\"success\" onClose={handleClose1} sx={{ width: '100%' }}>Médico Aprovado.</Alert>\r\n        </Snackbar>\r\n\r\n        <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n            open={open2}\r\n            autoHideDuration={6000}\r\n            onClose={handleClose2}\r\n            style={{width: '40%'}}\r\n        >\r\n            <Alert variant=\"filled\" severity=\"error\" onClose={handleClose2} sx={{ width: '100%' }}>Médico Reprovado.</Alert>\r\n        </Snackbar>\r\n\r\n            <NavBar>\r\n                <BaseLayout title='Gerenciar Usuários'>\r\n                    <h1>NOVOS MÉDICOS</h1>\r\n                    {newDoctors.length === 0 ? <p>Não Há Registros.</p> : <p>Aguardando Verificação do Administrador.</p>}\r\n                    \r\n                    \r\n                    <div>\r\n                        {newDoctors.map(doctor => (\r\n                            <>\r\n                            <Accordion>\r\n                                {/* Head */}\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMore />}\r\n                                    aria-controls=\"panel1a-content\"\r\n                                    id=\"panel1a-header\"\r\n                                >\r\n                                    <Typography><b>Médico:</b> {doctor.nome}</Typography>\r\n                                </AccordionSummary>\r\n                                \r\n                                {/* Body */}\r\n                                <AccordionDetails>\r\n                                    <div style={{display: 'flex', flexWrap: 'wrap'}}>\r\n                                        <p style={{flex: 1}}><b>Telefone: </b>{doctor.telefone}</p>\r\n                                        <p style={{flex: 1}}><b>E-mail: </b>{doctor.email}</p>\r\n                                        <p style={{flex: 1}}><b>CRM: </b>{doctor.crm}</p>\r\n                                    </div>\r\n                                    <p><b>Especialidades</b></p>\r\n                                    <ul>\r\n                                        {specialties.map(item => {\r\n                                            if(item.id_medico === doctor.id){\r\n                                                return(\r\n                                                    <li style={{marginTop: '1rem'}}>\r\n                                                        <div style={{display: 'flex'}}>\r\n                                                            <div style={{flex: 1}}>{item.nome}</div>\r\n                                                            <div style={{flex: 1}}>\r\n                                                            <Button variant=\"contained\" size=\"small\" color=\"error\" onClick={() => {deleteMedicoEspecialidade(item.id_medico, item.id_especialidade)}}>X</Button>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </li>\r\n                                                )\r\n                                            }\r\n                                        })}\r\n                                    </ul>\r\n                                   \r\n                                </AccordionDetails>\r\n                                <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'space-around'}}>\r\n                                    <Button variant=\"contained\" size=\"small\" fullWidth onClick={() => {aprovarCadastro(doctor.id, doctor.nome, doctor.email)}} style={{flex: 1, maxWidth: '45%'}}>Aprovar</Button>\r\n                                    <Button variant=\"contained\" size=\"small\" color=\"error\" fullWidth onClick={() => {reprovarCadastro(doctor.id, doctor.nome, doctor.email)}} style={{flex: 1, maxWidth: '45%'}}>Reprovar</Button>\r\n                                </div>\r\n                            </Accordion>\r\n                            </>  \r\n                        ))}\r\n\r\n                    </div>\r\n                </BaseLayout>\r\n            </NavBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CheckNewDoctors\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { AccountBox, ArrowBack, Email, Lock } from '@mui/icons-material'\r\nimport { Box, Button, FormControl, InputAdornment, InputLabel, Paper, NativeSelect, TextField, Snackbar, IconButton, Alert } from '@mui/material'\r\nimport api from '../../services/api'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@mui/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    buttonBack: {\r\n        borderStyle: 'none',\r\n        borderRadius: 10\r\n    },\r\n    container: {\r\n        marginLeft: 70,\r\n        display: 'flex',\r\n        padding: 10,\r\n        alignItems: 'right',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        width: 1000,\r\n        height: 550\r\n    },\r\n    containerItem: {\r\n        flex: 1,\r\n        marginLeft: 30\r\n    }\r\n}))\r\n\r\nfunction UsuariosEditar() {\r\n    const navigate = useNavigate()\r\n    const classes = useStyles()\r\n    const [nome, setNome] = useState(\"\")\r\n    const [dt_nascimento, setDt_Nascimento] = useState(\"\")\r\n    const [genero, setGenero] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [senha, setSenha] = useState(\"\")\r\n    const [confirmasenha, setConfirmaSenha] = useState(\"\")\r\n    const { id } = useParams()\r\n    const [open, setOpen] = useState(false);\r\n    const [open1, setOpen1] = useState(false);\r\n\r\n    useEffect(() => {\r\n      async function getUsuario() {\r\n        var response = await api.get(`/usuario/${id}`)\r\n        // console.log(response)\r\n        setNome(response.data.nome);\r\n        setDt_Nascimento(response.data.dt_nascimento);\r\n        setGenero(response.data.genero);\r\n        setEmail(response.data.email);\r\n        setSenha(response.data.senha);\r\n      }\r\n      getUsuario();\r\n    }, [])\r\n\r\n    async function atualizar(id){\r\n        const data = {nome, dt_nascimento, genero, email, senha}\r\n          if(nome !== '' && dt_nascimento !== '' && genero !== '' && email !== '' && senha !== ''){\r\n              console.log('1')\r\n            if(!senha) {\r\n              handleClick1()\r\n            }else {\r\n                console.log('3')\r\n              try {\r\n                console.log('4')\r\n                const response = await api.put(`/usuario/editar/${id}`, {data});\r\n                console.log(response.data)\r\n                handleClick()\r\n                setTimeout(() => {\r\n                    navigate('/admin');\r\n                }, 3000)\r\n            } catch (err) {\r\n                console.error(\"ops! ocorreu um erro\" + err);\r\n            }\r\n          }\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\t\r\n    \r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleClick1 = () => {\r\n        setOpen1(true);\r\n    };\t\r\n    \r\n    const handleClose1 = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen1(false);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n            open={open}\r\n            autoHideDuration={6000}\r\n            onClose={handleClose}\r\n            style={{width: '40%'}}\r\n        >\r\n            <Alert variant=\"filled\" severity=\"success\" onClose={handleClose} sx={{ width: '100%' }}>Alteração realizada.</Alert>\r\n        </Snackbar>\r\n\r\n        <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n            open={open1}\r\n            autoHideDuration={6000}\r\n            onClose={handleClose1}\r\n            style={{width: '40%'}}\r\n        >\r\n            <Alert variant=\"filled\" severity=\"warning\" onClose={handleClose1} sx={{ width: '100%' }}>Por favor, digite a senha para confirmar a alteração.</Alert>\r\n        </Snackbar>\r\n\r\n                <Link to=\"/admin\">\r\n                    <Button type=\"link\" className={classes.buttonBack}>\r\n                        <ArrowBack/>\r\n                    </Button>\r\n                </Link>\r\n              <Paper className={classes.container}>\r\n                    <h1 className={classes.containerItem}>Atualizar Dados</h1>\r\n                    <Box className={classes.containerItem}>\r\n                        <TextField\r\n                            style={{width: 400}}\r\n                            variant=\"filled\"\r\n                            label=\"Informe seu nome\"\r\n                            id=\"nome\"\r\n                            value={nome}\r\n                            onChange={e => setNome(e.target.value)}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <AccountBox />\r\n                                </InputAdornment> ),}}\r\n                        />\r\n                        <TextField\r\n                            style={{width: 400, marginLeft: 15}}\r\n                            variant=\"filled\"\r\n                            type=\"date\"\r\n                            label=\"Informe sua data de nascimento\"\r\n                            id=\"dt_nascimento\"\r\n                            value={dt_nascimento}\r\n                            onChange={e => setDt_Nascimento(e.target.value)}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                    </Box>\r\n                    <Box className={classes.containerItem}>\r\n                        <FormControl className={classes.formControl}>\r\n                        <InputLabel>Gênero</InputLabel>\r\n                            <NativeSelect\r\n                                style={{width: 400}}\r\n                                variant=\"filled\"\r\n                                id=\"genero\"\r\n                                value={genero}\r\n                                onChange={e => setGenero(e.target.value)}\r\n                            >\r\n                                <option aria-label=\"None\" value=\"\" />\r\n                                <option value=\"H\">Homem</option>\r\n                                <option value=\"M\">Mulher</option>\r\n                                <option value=\"O\">Outro</option>\r\n                            </NativeSelect>\r\n                            </FormControl>\r\n                       <TextField\r\n                            style={{width: 400, marginLeft: 15}}\r\n                            type=\"email\"\r\n                            variant=\"filled\"\r\n                            label=\"Informe seu email\"\r\n                            id=\"email\"\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Email />\r\n                                </InputAdornment> ),}}\r\n                      />\r\n                    </Box>\r\n                    <Box className={classes.containerItem}>\r\n                        <TextField\r\n                            style={{width: 400}}\r\n                            type=\"password\"\r\n                            variant=\"filled\"\r\n                            label=\"Informe sua senha\"\r\n                            id=\"senha\"\r\n                            value={senha}\r\n                            onChange={e => setSenha(e.target.value)}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Lock/>\r\n                                </InputAdornment> ),}}\r\n                        />\r\n                        <TextField\r\n                            style={{width: 400, marginLeft: 15}}\r\n                            type=\"password\"\r\n                            variant=\"filled\"\r\n                            label=\"Digite a senha novamente\"\r\n                            id=\"confirmasenha\"\r\n                            value={confirmasenha}\r\n                            onChange={e => setConfirmaSenha(e.target.value)}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Lock/>\r\n                                </InputAdornment> ),}}\r\n                        />\r\n                    </Box>\r\n                    <Box className={classes.containerItem}>\r\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" onClick={() => atualizar(id)}>\r\n                            Confirmar Alteração\r\n                        </Button>\r\n                    </Box>\r\n                </Paper>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default UsuariosEditar\r\n","import api from '../../services/api'\r\nimport {useState, useEffect} from 'react'\r\nimport { Container, Button, Grid, TextField, Snackbar, IconButton, Alert } from '@mui/material'\r\nimport SaveIcon from '@mui/icons-material/Save';\r\n\r\nfunction ResetPassword(){  \r\n    const [email, setEmail] = useState('')\r\n    const [senha, setSenha] = useState('')\r\n    const [open, setOpen] = useState(false);\r\n    const [open1, setOpen1] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getEmail()\r\n    }, [])\r\n\r\n    let url = window.location.pathname;\r\n    let token = url.substring(url.lastIndexOf('/') + 1);\r\n\r\n    async function getEmail(){\r\n        const res = await api.get(`/usuario/getEmail/${token}`)\r\n        setEmail(res.data.email)\r\n    }\r\n\r\n    async function redefinirSenha(e){\r\n        e.preventDefault();\r\n        try{\r\n            if(!senha || senha == null){\r\n                handleClick()\r\n                return\r\n            }\r\n            const res = await api.post(`/usuario/redefinir_senha/${token}`, { senha });\r\n    \r\n            if(res.status === 200){\r\n                handleClick1()\r\n                window.location.href = '/'\r\n            }          \r\n        }catch (err) {\r\n            console.error(\"ops! ocorreu um erro\" + err)\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\t\r\n    \r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleClick1 = () => {\r\n        setOpen1(true);\r\n    };\t\r\n    \r\n    const handleClose1 = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen1(false);\r\n    };\r\n\r\n    return(\r\n        <Container>\r\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                style={{width: '40%'}}\r\n            >\r\n                <Alert variant=\"filled\" severity=\"warning\" onClose={handleClose} sx={{ width: '100%' }}>Prencha a senha.</Alert>\r\n            </Snackbar>\r\n\r\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={open1}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose1}\r\n                style={{width: '40%'}}\r\n            >\r\n                <Alert variant=\"filled\" severity=\"success\" onClose={handleClose1} sx={{ width: '100%' }}>Senha alterada.</Alert>\r\n            </Snackbar>\r\n            <Grid container marginY={5}> \r\n                <Grid item xs={4}></Grid>\r\n                <Grid item xs={4}>\r\n                    <h1>REDEFINIR SENHA</h1>\r\n                </Grid>\r\n                <Grid item xs={4}></Grid>\r\n            </Grid>\r\n            <Grid container marginY={2}> \r\n                <Grid item xs={4}></Grid>\r\n                <Grid item xs={4}>\r\n                    <form>\r\n                        <TextField type=\"text\" fullWidth id=\"standard-basic\" label=\"E-mail\" variant=\"standard\" value={email} disabled/><br/><br/>\r\n                        <TextField type=\"password\" fullWidth id=\"standard-basic\" label=\"Senha\" variant=\"standard\" onChange={e => setSenha(e.target.value)}/><br/><br/>\r\n                        <Button variant=\"outlined\" color=\"success\" startIcon={<SaveIcon />} onClick={redefinirSenha}>Atualizar</Button>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item xs={4}></Grid>\r\n            </Grid>  \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ResetPassword","import dayjs from 'dayjs'\r\n\r\nlet Registro = ({id_paciente, id_medico, dt_hr_consulta, doenca, motivo_consulta, tempo_doente, sintoma, resumo}) => {\r\n    return(\r\n        <div style={{display: 'flex', width: '100%', flexWrap: 'wrap'}}>\r\n            <div style={{flex: 1}}>\r\n                <p><b>Paciente:</b> {id_paciente}</p> \r\n                <p><b>Médico:</b> {id_medico}</p>\r\n                <p><b>Data Consulta:</b> {dayjs(dt_hr_consulta).format('DD/MM/YYYY HH:mm:ss')}</p>\r\n                <p><b>Enfermidade:</b> {doenca}</p>\r\n            </div>\r\n            <div style={{flex: 1}}>\r\n                <p><b>Motivo da Consulta:</b> {motivo_consulta}</p>\r\n                <p><b>Tempo Doente (em dias):</b> {tempo_doente}</p>\r\n                <p><b>Sintomas:</b> {sintoma}</p>\r\n                \r\n            </div>\r\n            <div style={{width: '100%'}}>\r\n                <p><b>Resumo:</b> {resumo}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Registro","import React, { useState, useEffect } from 'react'\r\nimport Pagination from '@mui/material/Pagination';\r\n\r\nimport api from '../../services/api'\r\nimport Registro from './Registro'\r\n\r\nlet Prontuario = ({idPaciente}) => {\r\n    const [prontuarios, setProntuarios] = useState([])\r\n    const [registro, setRegistro] = useState({})\r\n\r\n    useEffect(() => {\r\n        getProntuario()\r\n        getProntuarioById()\r\n    }, [])\r\n\r\n    \r\n    async function getProntuario(){\r\n        const result = await api.get(`/prontuario/${idPaciente}`)\r\n        setProntuarios(result.data)\r\n\r\n        if(result.data.length > 0){\r\n            setRegistro(result.data[0])\r\n        }else{\r\n            setRegistro(null)\r\n        }\r\n        \r\n    }\r\n\r\n    function getProntuarioById(n){\r\n        if(n){\r\n            setRegistro(prontuarios[n-1])\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div style={{width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n            <h1 style={{marginTop: '0px'}}>PRONTUARIO</h1><hr/>\r\n\r\n            {(registro) ? (\r\n                <Registro \r\n                    key={registro.id}\r\n                    id_paciente={registro.paciente} \r\n                    id_medico={registro.medico}\r\n                    dt_hr_consulta={registro.dt_hr_consulta} \r\n                    doenca={registro.doenca} \r\n                    motivo_consulta={registro.motivo_consulta} \r\n                    tempo_doente={registro.tempo_doente} \r\n                    sintoma={registro.sintoma} \r\n                    resumo={registro.resumo}\r\n                />\r\n            ) : (\r\n               'Não Há Registros'\r\n            )}\r\n\r\n\r\n            <Pagination count={prontuarios.length} color=\"primary\" onClick={(e) => getProntuarioById(e.target.textContent)}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Prontuario","import { useState } from 'react'\r\nimport Button from '@mui/material/Button';\r\n\r\nimport api from '../../services/api'\r\n\r\nlet FormProntuario = ({id_paciente}) => {\r\n    const [doenca, setDoenca] = useState(\"\")\r\n    const [motivoConsulta, setMotivoConsulta] = useState(\"\")\r\n    const [tempoDoente, setTempoDoente] = useState(\"\")\r\n    const [sintoma, setSintoma] = useState(\"\")\r\n    const [resumo, setResumo] = useState(\"\")\r\n    const [showForm, setShowForm] = useState(true)\r\n    const [showMessage, setShowMessage] = useState(false)\r\n\r\n    async function cadastrar(e){\r\n        e.preventDefault()\r\n        setShowForm(false)\r\n        setShowMessage(true)\r\n\r\n        setTimeout(() => {\r\n            setShowMessage(false)\r\n        }, 5000);\r\n\r\n        await api.post(\"/prontuario\", {\r\n            id_paciente,\r\n            doenca,\r\n            motivo_consulta: motivoConsulta,\r\n            tempo_doente: tempoDoente,\r\n            sintoma,\r\n            resumo\r\n        });\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            {showForm ?\r\n                <div style={{width: '300px', padding: '0px 1rem'}}>\r\n                    <div>\r\n                        <h3 align=\"center\">Preencha o prontuario</h3>\r\n                        <form style={{display: 'flex', flexDirection: 'column'}}>\r\n                            <label htmlFor=\"doenca\"><b>Doença(s)</b></label>\r\n                            <input type=\"text\" id=\"doenca\" placeholder=\"Doença\" style={{marginBottom: '1rem'}} onChange={(e) => setDoenca(e.target.value)}/>\r\n\r\n                            <label htmlFor=\"motivo\"><b>Motivo da Consulta</b></label>\r\n                            <input type=\"text\" id=\"motivo\" placeholder=\"motivo\" style={{marginBottom: '1rem'}} onChange={(e) => setMotivoConsulta(e.target.value)}/>\r\n\r\n                            <label htmlFor=\"tempo\"><b>Tempo Doente (em dias)</b></label>\r\n                            <input type=\"number\" id=\"tempo\" placeholder=\"tempo doente\" style={{marginBottom: '1rem'}} onChange={(e) => setTempoDoente(e.target.value)}/>\r\n\r\n                            <label htmlFor=\"sintoma\"><b>Sintoma(s)</b></label>\r\n                            <input type=\"text\" id=\"sintoma\" placeholder=\"sintomas\" style={{marginBottom: '1rem'}} onChange={(e) => setSintoma(e.target.value)}/>\r\n\r\n                            <label htmlFor=\"resumo\"><b>Resumo</b></label>\r\n                            <textarea id=\"resumo\" placeholder=\"resumo\" rows=\"7\" maxlength=\"1000\" style={{marginBottom: '1rem'}} onChange={(e) => setResumo(e.target.value)}/>\r\n\r\n                            <Button variant=\"contained\" onClick={cadastrar}>Salvar</Button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            :\r\n                showMessage && (\r\n                    <div style={{width: '300px', display: 'flex', justifyContent: 'center', alignItems: 'center', height: '75vh', paddingLeft: '1rem'}}>\r\n                        <div style={{backgroundColor: '#d4edda', border: '1px solid #155724', padding: '3rem', width: '100%', borderRadius: '10px'}}>\r\n                            <h1 align=\"center\">Salvo!</h1>\r\n                        </div>\r\n                    </div>\r\n                )\r\n                \r\n            }\r\n        </>\r\n)}\r\n\r\nexport default FormProntuario","import React, { useState, useEffect } from 'react'\r\nimport {Box, Card, CardActions, CardContent, CardMedia, Button, Typography, Modal, Snackbar, IconButton, Alert } from '@mui/material'\r\nimport { BorderColor, Delete } from '@mui/icons-material'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport dayjs from 'dayjs'\r\n\r\nimport api from '../../services/api'\r\nimport Prontuario from '../Prontuario'\r\nimport FormProntuario from '../Prontuario/FormProntuario'\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-end',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '95vw',\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n  \r\nfunction CardConsulta({id_consulta, id_especialidade, id_medico, id_paciente, status, data, url_consulta}){\r\n    let navigate = useNavigate()\r\n    const [paciente, setPaciente] = useState([])\r\n    const [medico, setMedico] = useState([])\r\n    const [especialidade, setEspecialidade] = useState([])\r\n    const [typeUser, setTypeUser] = useState('')\r\n    const [limitTime, setLimitTime] = useState('')\r\n    const [agora, setAgora] = useState('')\r\n    const [formattedDate, setFormattedDate] = useState('')\r\n    const [openConsulta, setOpenConsulta] = useState(false);\r\n    const [openProntuario, setOpenProntuario] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [open1, setOpen1] = useState(false);\r\n\r\n    const handleOpenConsulta = () => setOpenConsulta(true);\r\n    const handleCloseConsulta = () => setOpenConsulta(false);\r\n    const handleOpenProntuario = () => setOpenProntuario(true);\r\n    const handleCloseProntuario = () => setOpenProntuario(false);\r\n  \r\n\r\n    useEffect(() => {\r\n        getDoctor()\r\n        getSpecialtie()\r\n        getType()\r\n        getPaciente()\r\n        limitTimeForChange()\r\n        dateNow()\r\n        formatDateAppointment()\r\n    }, [])\r\n\r\n    async function getPaciente(){\r\n        const result = await api.get(`/paciente/getPaciente/${id_paciente}`)\r\n        setPaciente(result.data)\r\n    }\r\n\r\n    function limitTimeForChange(){\r\n        var limitTimeForChange = dayjs(data).subtract(1, 'hour').format('DD/MM/YYYY HH:mm:ss')\r\n        setLimitTime(limitTimeForChange)\r\n    }\r\n\r\n    function dateNow(){\r\n        setAgora(dayjs().format('DD/MM/YYYY HH:mm:ss'))\r\n    }\r\n\r\n    function formatDateAppointment(){\r\n        setFormattedDate(dayjs(data).format('DD/MM/YYYY HH:mm:ss'))\r\n    }\r\n\r\n    async function getType(){\r\n        const result = await api.get('/usuario/getType')\r\n        setTypeUser(result.data.tipo)\r\n    }\r\n\r\n    async function getDoctor(){\r\n        const result = await api.get(`/medico/getDoctor/${id_medico}`)\r\n        setMedico(result.data)\r\n    }\r\n\r\n    async function getSpecialtie(){\r\n        const result = await api.get(`/medico/getSpecialtie/${id_especialidade}`)\r\n        setEspecialidade(result.data)\r\n    }\r\n\r\n    async function cancelarConsulta(){\r\n        const res = window.confirm('Deseja realmente cancelar a consulta?')\r\n        if (res) {\r\n            await api.put(`/consulta/cancelar/${id_consulta}`)\r\n            handleClick()\r\n            setTimeout(() => {\r\n                window.location.reload()\r\n            }, 3000)\r\n        }\r\n    }\r\n\r\n    async function removerConsulta(id){\r\n        const res = window.confirm('Deseja realmente excluir?')\r\n        if(res){\r\n            try {\r\n                const result = await api.delete(`/admin/consultas/deletar/${id_consulta}`)\r\n                handleClick1()\r\n                window.location.reload()\r\n            } catch(err) {\r\n                console.log(\"ops! ocorreu um erro\" + err)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClick1 = () => {\r\n        setOpen1(true);\r\n    };\t\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleClose1 = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen1(false);\r\n    };\r\n\r\n    function done(){\r\n        api.put(`/consulta/done/${id_consulta}`)\r\n    }\r\n\r\n    return(\r\n        <Card sx={{ \r\n            maxWidth: 300,\r\n            margin: 3,\r\n        }}>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                style={{width: '40%'}}\r\n            >\r\n                <Alert variant=\"filled\" severity=\"success\" onClose={handleClose1} sx={{ width: '100%' }}>Consulta Cancelada.</Alert>\r\n            </Snackbar>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={open1}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose1}\r\n                style={{width: '40%'}}\r\n            >\r\n                <Alert variant=\"filled\" severity=\"success\" onClose={handleClose1} sx={{ width: '100%' }}>Consulta excluida com sucesso.</Alert>\r\n            </Snackbar>\r\n            <Modal\r\n                open={openConsulta}\r\n                onClose={handleCloseConsulta}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style} style={{padding: '0px 1.5rem 1.5rem 1.5rem'}}>\r\n                    <Button onClick={handleCloseConsulta} color='error' style={{fontSize: '25px', fontWeight: 'bold'}}>X</Button>\r\n                    <div style={{display: 'flex', width: '100%'}}>\r\n                        <div style={{flex: 1}}>\r\n                        <iframe src={`https://meet.jit.si/${url_consulta}`} frameborder=\"0\" width=\"100%\" height=\"500\" allow=\"microphone; camera\"/>\r\n                        </div>\r\n\r\n                        {(typeUser === 'Medico') && (\r\n                            <div>\r\n                                <FormProntuario id_paciente={id_paciente}/>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </Box>\r\n            </Modal>\r\n\r\n            <Modal\r\n                open={openProntuario}\r\n                onClose={handleCloseProntuario}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style} style={{padding: '0px 1.5rem 1.5rem 1.5rem'}}>\r\n                    <Button onClick={handleCloseProntuario} color='error' style={{fontSize: '25px', fontWeight: 'bold'}}>X</Button>\r\n                    <Prontuario idPaciente={id_paciente}/>\r\n                </Box>\r\n            </Modal>\r\n\r\n            <Box\r\n                display='flex'\r\n                flexDirection='column'\r\n                alignContent='center'\r\n                alignItems='center'\r\n            >\r\n                <Typography gutterBottom variant=\"h6\" component=\"div\" alignSelf='center'>\r\n                    <b>Data</b>\r\n                </Typography>\r\n            {status != 'Cancelado' ? \r\n                    <Typography gutterBottom variant=\"p\" component=\"div\">\r\n                        {formattedDate}\r\n                    </Typography>\r\n                :\r\n                    <Typography gutterBottom variant=\"p\" component=\"div\">\r\n                        Cancelada\r\n                    </Typography>\r\n                }\r\n            </Box>\r\n            <CardContent>\r\n                <Typography gutterBottom variant=\"p\" component=\"span\">\r\n                    <b>Status:</b> {status}\r\n                </Typography>\r\n                \r\n                {(typeUser === 'Medico') &&\r\n                    <Typography gutterBottom variant=\"p\" component=\"div\">\r\n                        <b>Paciente:</b> {paciente.nome} \r\n                    </Typography>\r\n                }       \r\n\r\n                {(typeUser === 'Paciente') &&\r\n                   <Typography gutterBottom variant=\"p\" component=\"div\">\r\n                       <b>Médico:</b> {medico.nome} \r\n                    </Typography> \r\n                }    \r\n\r\n                <Typography gutterBottom variant=\"p\" component=\"div\">\r\n                    <b>Especialidade:</b> {especialidade.nome}\r\n                </Typography>\r\n\r\n                        \r\n            </CardContent>\r\n          \r\n            <Box display='flex' alignItems='center' justifyContent='center'>\r\n                <CardActions>\r\n                        {((typeUser === 'Medico' || typeUser === 'Admin') && status === 'Livre') &&\r\n                            <Button size=\"small\" color='secondary' onClick={() => navigate(`/consulta/editar/${id_consulta}`)}>\r\n                                <BorderColor/>\r\n                            </Button>\r\n                        }\r\n                        {(typeUser === 'Admin') && \r\n                                <Button size=\"small\" color='error' onClick={removerConsulta}>\r\n                                    <Delete/>\r\n                                </Button>\r\n                        }\r\n\r\n                        {(typeUser === 'Medico') && (\r\n                            <Button onClick={handleOpenProntuario}>Prontuário</Button>\r\n                        )}\r\n\r\n                        {(status === 'Agendado') && (agora <= limitTime) && (\r\n                            <Button size=\"small\" color='warning' onClick={cancelarConsulta}>Cancelar</Button>\r\n                        )}\r\n\r\n                        {(\r\n                            (status === 'Agendado') \r\n                        && \r\n                            (agora >= dayjs(data).subtract(10, 'minute').format('DD/MM/YYYY HH:mm:ss')) \r\n                        && \r\n                            (agora <= dayjs(data).add(1, 'hour').format('DD/MM/YYYY HH:mm:ss'))\r\n                        ) && (\r\n                            typeUser === \"Paciente\" ? (\r\n                            <Button onClick={() => {handleOpenConsulta(); setTimeout(done, 60000);}}>Acessar Consulta</Button>) : (\r\n                            <Button onClick={handleOpenConsulta}>Acessar Consulta</Button>)\r\n                        )}\r\n                            \r\n\r\n                </CardActions>\r\n            </Box>\r\n            \r\n        </Card>       \r\n    )\r\n}\r\n\r\nexport default CardConsulta","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { Box } from '@mui/material'\r\nimport api from '../../../services/api'\r\nimport BaseLayout from '../../../layouts/BaseLayout'\r\nimport NavBar from '../../../components/NavBar'\r\nimport CardConsulta from '../../../components/CardConsulta'\r\n\r\nfunction AgendarConsulta(){\r\n    let navigate = useNavigate()\r\n    let params = useParams()\r\n    const [consultas, setConsultas] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        async function getConsultasDisponiveis(){\r\n            const response = await api.get(`/consulta/getConsultasDisponiveis`)\r\n            setConsultas(response.data)\r\n            console.log(response.data)\r\n            setLoading(false)\r\n\r\n        }\r\n        getConsultasDisponiveis()\r\n    },[])\r\n\r\n    if (loading) {\r\n        return <div>Carregando dados...</div>\r\n    }\r\n\r\n    return(\r\n        <NavBar>\r\n            <BaseLayout title='Agendar Consulta'>\r\n                <Box display='flex' flexDirection='row' flexWrap='wrap'>\r\n                {consultas.map(consulta => (\r\n                    \r\n                        <CardConsulta\r\n                            key={consulta.id}\r\n                            id_consulta={consulta.id}\r\n                            status={consulta.status}\r\n                            id_especialidade={consulta.id_especialidade}\r\n                            id_medico={consulta.id_medico}\r\n                            data={consulta.dt_hr_consulta}\r\n                        />\r\n                ))}\r\n                </Box>     \r\n           </BaseLayout>\r\n       </NavBar>\r\n    )\r\n}\r\n\r\nexport default AgendarConsulta","import React, { useState, useEffect } from 'react'\r\nimport CardConsulta from '../../../components/CardConsulta'\r\nimport './styles.css';\r\nimport api from '../../../services/api'\r\nimport BaseLayout from '../../../layouts/BaseLayout'\r\nimport NavBar from '../../../components/NavBar'\r\nimport { ButtonGroup, Button } from '@mui/material'\r\n\r\nfunction MinhasConsultas(){\r\n    const [appointments, setAppointments] = useState([])\r\n    const [filterActived, setFilterActived] = useState(\"all\")\r\n\r\n    useEffect(() => {\r\n        getAppointments()\r\n    },[filterActived])\r\n\r\n    async function getAppointments(){\r\n        const response = await api.get(`/consultas/getMyAppointments/${filterActived}`)\r\n        setAppointments(response.data)\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <NavBar>\r\n                <BaseLayout title='Minhas Consultas'>\r\n                    <div className=\"filters\">\r\n                        <ButtonGroup variant=\"contained\" aria-label=\"outlined primary button group\" style={{boxShadow: 'none', borderRadius: '0px', display: 'flex', justifyContent: 'center', flexWrap: 'wrap'}}>\r\n                            <Button style={{width: '100%', minWidth: '120px', maxWidth: '120px', borderRadius: '0px'}} onClick={(e) => setFilterActived('today')} actived={filterActived == \"today\"? \"true\" : \"false\"}>Hoje</Button>\r\n                            <Button style={{width: '100%', minWidth: '120px', maxWidth: '120px', borderRadius: '0px'}} onClick={(e) => setFilterActived('all')} actived={filterActived == \"all\"? \"true\" : \"false\"}>Todos</Button>\r\n                            <Button style={{width: '100%', minWidth: '120px', maxWidth: '120px', borderRadius: '0px'}} onClick={(e) => setFilterActived('week')} actived={filterActived == \"week\"? \"true\" : \"false\"}>Semana</Button>\r\n                            <Button style={{width: '100%', minWidth: '120px', maxWidth: '120px', borderRadius: '0px'}} onClick={(e) => setFilterActived('scheduled')} actived={filterActived == \"scheduled\"? \"true\" : \"false\"}>Agendado</Button>\r\n                            <Button style={{width: '100%', minWidth: '120px', maxWidth: '120px', borderRadius: '0px'}} onClick={(e) => setFilterActived('canceled')} actived={filterActived == \"canceled\"? \"true\" : \"false\"}>Cancelado</Button>\r\n                        </ButtonGroup>\r\n                    </div>\r\n                    <div className=\"container\" style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\r\n                        {appointments?.map(appointment => (\r\n                            <>\r\n                                <CardConsulta \r\n                                    style={{minWidth: '200px'}}\r\n                                    key={appointment.id} \r\n                                    id_consulta={appointment.id} \r\n                                    status={appointment.status} \r\n                                    id_especialidade={appointment.id_especialidade} \r\n                                    id_medico={appointment.id_medico} \r\n                                    id_paciente={appointment.id_paciente} \r\n                                    data={appointment.dt_hr_consulta}\r\n                                    url_consulta={appointment.url_consulta}\r\n                                />\r\n                            </>\r\n                        ))}\r\n                    </div>\r\n                </BaseLayout>\r\n            </NavBar>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default MinhasConsultas","import React, { useState, useEffect } from 'react'\r\nimport api from '../../../services/api'\r\nimport { \r\n    Box,\r\n    Button,\r\n    useTheme\r\n} from '@mui/material'\r\nimport { Add, BorderColor, Delete, Event } from '@mui/icons-material'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { ButtonTool, PaperStyled } from '../../../styles/UsuariosListagem'\r\nimport NavBar from '../../../components/NavBar'\r\nimport CardConsulta from '../../../components/CardConsulta'\r\nimport BaseLayout from '../../../layouts/BaseLayout'\r\nimport { configure } from '@testing-library/react'\r\n\r\nfunction ConsultasListagem(){\r\n    let navigate = useNavigate()\r\n    let params = useParams()\r\n    const theme = useTheme()\r\n    const [usuario, setUsuario] = useState([])\r\n    const [consultas, setConsultas] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        async function loadConsultas(){\r\n            const response = await api.get(`/admin/consultas/${params.id}`)\r\n            setConsultas(response.data.results)\r\n            console.log(response.data.results)\r\n            setUsuario(response.data.others)\r\n            setLoading(false)\r\n\r\n        }\r\n        loadConsultas()\r\n    },[])\r\n\r\n    if (loading) {\r\n        return <div>Carregando dados...</div>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavBar>\r\n                <BaseLayout title={`Consultas agendadas para ${usuario[0].nome}`}>\r\n                    {(usuario[0].tipo === 'Medico') && \r\n                        <Box\r\n                            display='flex'\r\n                            alignItems='center'\r\n                            height={theme.spacing(5)}\r\n                        >\r\n                            {/*<TextField\r\n                                size='small'\r\n                                placeholder='Pesquisar...'\r\n                            />*/}\r\n                            <Box\r\n                                flex={1}\r\n                                display='flex'\r\n                                justifyContent='end'\r\n                                marginBottom={2}\r\n                            >\r\n                                <Button\r\n                                    color='primary'\r\n                                    variant='contained'\r\n                                    disableElevation\r\n                                    startIcon={<Add/>}\r\n                                    onClick={() => navigate('/consulta/adicionar')}\r\n                                >\r\n                                    Adicionar Consultas\r\n                                </Button>\r\n                            </Box>\r\n                        </Box>\r\n                    }\r\n                    \r\n                    <div className=\"container\">\r\n                \r\n                    {consultas.map(consulta => (\r\n                        <CardConsulta\r\n                            key={consulta.id}\r\n                            id_consulta={consulta.id}\r\n                            status={consulta.status}\r\n                            id_especialidade={consulta.id_especialidade}\r\n                            id_medico={consulta.id_medico}\r\n                            id_paciente={consulta.id_paciente}\r\n                            data={consulta.dt_hr_consulta}\r\n                        />\r\n                    ))}\r\n                    </div>\r\n                </BaseLayout>\r\n            </NavBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ConsultasListagem\r\n","import {useState, useEffect} from 'react'\r\nimport { Button, Typography, Select, MenuItem, InputLabel, FormControl, Snackbar, IconButton, Alert } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport dayjs from 'dayjs'\r\n\r\nimport api from '../../../services/api'\r\nimport NavBar from '../../../components/NavBar'\r\nimport BaseLayout from '../../../layouts/BaseLayout'\r\n\r\nimport {\r\n  Div,\r\n  BirthDate,\r\n} from '../../../styles/Cadastro/Cadastro'\r\n\r\nfunction AdicionarConsulta2(){\r\n  let navigate = useNavigate()\r\n  const [open, setOpen] = useState(false);\r\n  const [especialidades, setEspecialidades] = useState([])\r\n  const [medicos, setMedicos] = useState([])\r\n  const [idEspecialidade, setIdEspecialidade] = useState()\r\n  const [idMedico, setIdMedico] = useState()\r\n  const [data, setData] = useState()\r\n  const [diaDaSemana, setDiaDaSemana] = useState()\r\n  const [horas, setHoras] = useState([])\r\n  const [hora, setHora] = useState()\r\n\r\n  useEffect(() => {\r\n    getSpecialties()\r\n    getDoctors()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getDoctorsBySpecialty()\r\n  }, [idEspecialidade])\r\n\r\n  useEffect(() => {\r\n    getSpecialtieByDoctor()\r\n  }, [idMedico])\r\n\r\n  useEffect(() => {\r\n    horasDisponiveisMedico()\r\n  }, [data])\r\n\r\n  async function getSpecialties(){\r\n    const response = await api.get('/medico/especialidades')\r\n    setEspecialidades(response.data)\r\n  }\r\n\r\n  async function getDoctors(){   \r\n    const response = await api.get('/medico/getDoctors')\r\n    setMedicos(response.data)\r\n  } \r\n\r\n  async function getDoctorsBySpecialty(){  \r\n    if(idEspecialidade){\r\n      const response = await api.get(`/medico/getDoctorsBySpecialty/${idEspecialidade}`)\r\n      setMedicos(response.data)\r\n    }\r\n    return\r\n  }  \r\n  \r\n  async function getSpecialtieByDoctor(){\r\n    if(idMedico){\r\n      const response = await api.get(`/medico/getSpecialtieByDoctor/${idMedico}`)\r\n      setEspecialidades(response.data)\r\n    }\r\n    return\r\n  }\r\n\r\n  async function horasDisponiveisMedico(){\r\n    if(idMedico && data){    \r\n      const response = await api.get(`/horasdisponiveismedico/${idMedico}/${data}`)\r\n      console.log(response.data)\r\n      setHoras(response.data)\r\n    }\r\n    return\r\n  }\r\n\r\n  async function criarConsulta(e){\r\n    e.preventDefault()\r\n    let url_consulta = `telemed${idMedico}${data}${idEspecialidade}`\r\n    await api.post('/agendarconsulta', {id_medico: idMedico, id_especialidade: idEspecialidade, dt_hr_consulta: `${data} ${hora}:00:00.000`, url_consulta})\r\n    handleClick()\r\n    setTimeout(() => {\r\n      navigate(`/inicio`);\r\n    }, 3000);\r\n  }\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  return(\r\n    <NavBar>\r\n      <Snackbar\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n            open={open}\r\n            autoHideDuration={2000}\r\n            onClose={handleClose}\r\n            style={{width: '40%'}}\r\n        >\r\n          <Alert variant=\"filled\" severity=\"success\" onClose={handleClose} sx={{ width: '100%' }}>Consulta Criada com Sucesso!</Alert>\r\n      </Snackbar>\r\n\r\n      <BaseLayout title='Adicionar Consulta'>\r\n        <Typography variant='h4' align=\"center\">Nova Consulta</Typography><br/>\r\n        \r\n        {/* <h3>ESPECIALIDADE</h3>\r\n        <select style={{width: '100%'}} onChange={(e) => setIdEspecialidade(e.target.value)}>\r\n          {especialidades.map(especialidade => (\r\n            <option key={especialidade.id}>{especialidade.id}</option>\r\n          ))}\r\n        </select> */}\r\n        <Div style={{flex: 1, flexDirection: 'column', minWidth: '200px'}}>\r\n          <FormControl variant=\"outlined\" fullWidth> \r\n            <InputLabel size=\"small\">Especialidade</InputLabel>\r\n            <Select\r\n              size=\"small\"\r\n              labelId=\"specialty\"\r\n              id=\"specialty\"\r\n              name=\"specialty\"\r\n              label=\"Especialidade\"\r\n              onChange={e => setIdEspecialidade(e.target.value)} \r\n              onBlur={getDoctorsBySpecialty}\r\n            >\r\n              {especialidades.length > 0 ? (\r\n                especialidades.map(specialty => (\r\n                  <MenuItem key={specialty.id} value={specialty.id}>{specialty.nome}</MenuItem>\r\n                ))\r\n              ): \r\n                <MenuItem disabled>Não há especialidades</MenuItem>\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n        </Div>\r\n          \r\n        {/* <h3>MÉDICO</h3>\r\n        <select style={{width: '100%'}} onChange={(e) => setIdMedico(e.target.value)}>\r\n          {medicos.map(medico => (\r\n            <option key={medico.id}>{medico.id}</option>\r\n          ))}\r\n        </select> */}\r\n\r\n        <Div style={{flex: 1, flexDirection: 'column', minWidth: '200px'}}>\r\n          <FormControl variant=\"outlined\" fullWidth> \r\n              <>\r\n                <InputLabel size=\"small\">Médico</InputLabel>\r\n                <Select\r\n                  size=\"small\"\r\n                  labelId=\"doctor\"\r\n                  id=\"doctor\"\r\n                  label=\"doctor\"\r\n                  name=\"medico\" \r\n                  onChange={(e) => setIdMedico(e.target.value)} \r\n                  onBlur={getSpecialtieByDoctor}\r\n                >\r\n                  {medicos.length > 0 ? (\r\n                    medicos.map(doctor => (\r\n                      <MenuItem key={doctor.id_usuario} value={doctor.id_usuario}>{doctor.nome}</MenuItem>\r\n                    ))\r\n                  ): \r\n                    <MenuItem disabled>Não há Médicos</MenuItem>\r\n                  }\r\n                </Select>\r\n              </>\r\n          </FormControl>\r\n        </Div>\r\n\r\n        {/* <h3>DATA</h3>\r\n        <input type=\"date\" style={{width: '100%'}} onChange={(e) => {\r\n                                                                      setData(e.target.value);\r\n                                                                      setDiaDaSemana(dayjs(e.target.value).day());\r\n                                                                    }\r\n        }/> */}\r\n\r\n        <Div>\r\n          <BirthDate \r\n              type=\"date\" \r\n              id=\"date\" \r\n              name=\"birthDate\"\r\n              onChange={(e) => {setData(e.target.value); setDiaDaSemana(dayjs(e.target.value).day());}} \r\n              min={dayjs().format('YYYY-MM-DD')}\r\n          />\r\n        </Div>\r\n\r\n        {/* <h3>HORA</h3>\r\n        <select style={{width: '100%'}}>\r\n          {horas.map(h => (\r\n            <option key={h}>{h}</option>\r\n          ))}\r\n        </select> */}\r\n\r\n        <Div>\r\n          <FormControl variant=\"outlined\" fullWidth> \r\n              <>        \r\n                <InputLabel size=\"small\">Hora</InputLabel>\r\n                <Select\r\n                  size=\"small\"\r\n                  labelId=\"hour\"\r\n                  id=\"hour\"\r\n                  label=\"hour\"\r\n                  name=\"hora\" \r\n                  onChange={(e) => setHora(e.target.value)}\r\n                >\r\n\r\n                {horas.length > 0 ? (\r\n                  horas.map(hr => (\r\n                    <MenuItem key={hr} value={hr}>{hr}</MenuItem> \r\n                  ))\r\n                ): \r\n                  <MenuItem disabled>Não há Horários Disponiveis nessa Data</MenuItem>\r\n                }\r\n                </Select>\r\n              </>\r\n          </FormControl>\r\n        </Div>\r\n\r\n        <div style={{display: 'flex', justifyContent: 'center'}}>\r\n          <Button onClick={e => criarConsulta(e)}>Salvar</Button>\r\n          <Button color='error' onClick={() => navigate(`/inicio`)}>Cancelar</Button>\r\n        </div>\r\n      </BaseLayout>\r\n    </NavBar>\r\n  )\r\n}\r\n\r\nexport default AdicionarConsulta2","export default __webpack_public_path__ + \"static/media/notFound.3b101e9a.png\";","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Button from '@mui/material/Button';\r\nimport NotFound from '../../img/notFound.png'\r\nimport NavBar from '../../components/NavBar'\r\nimport BaseLayout from '../../layouts/BaseLayout'\r\n\r\nfunction NotFoundPage(){\r\n    const navigate = useNavigate()\r\n    return(\r\n        <>\r\n            <NavBar>\r\n                <BaseLayout title=\"404 - Not Found\">\r\n                    <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                        <img src={NotFound} style={{maxWidth: '300px'}}/>\r\n                        <h3>Página Não Encontrada.</h3>\r\n                        <Button variant=\"contained\" full onClick={() => navigate('/inicio')}>Voltar para Home</Button>\r\n                    </div>\r\n                </BaseLayout>\r\n            </NavBar>\r\n        </>\r\n    )\r\n}\r\nexport default NotFoundPage;","import React, { useState, useMemo, useEffect } from \"react\";\r\nimport ReactDOM from 'react-dom'\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/pt-br';\r\n// import events from \"./events\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport api from '../../services/api'\r\nimport CardConsulta from '../CardConsulta'\r\n\r\nmoment.locale('pt-br');\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport default function ReactBigCalendar() {\r\n  const [eventsData, setEventsData] = useState([]);\r\n  const [appointments, setAppointments] = useState([])\r\n\r\n  useEffect(() => {\r\n      getAppointments()\r\n  },[])\r\n\r\n  async function getAppointments(){\r\n    const response = await api.get(`/consultas/getMyAppointments/all`)\r\n    setAppointments(response.data)\r\n    const items = response.data\r\n    const aux = []\r\n    items.map(item => {\r\n      aux.push({\r\n        id: item.id,\r\n        id_especialidade: item.id_especialidade,\r\n        id_medico: item.id_medico,\r\n        id_paciente: item.id_paciente,\r\n        status: item.status,\r\n        dt_hr_consulta: item.dt_hr_consulta,\r\n        url_consulta: item.url_consulta,\r\n        start: moment(`${item.dt_hr_consulta}`)._d ,\r\n        end: moment(`${item.dt_hr_consulta}`).add(1, 'h')._d,\r\n        title: `Consulta ${item.nome}`\r\n      })\r\n    })\r\n    setEventsData(aux)\r\n  }\r\n\r\n  setInterval(getAppointments, 60000)\r\n\r\n  const { defaultDate, formats } = useMemo(\r\n    () => ({\r\n      defaultDate: new Date(),\r\n      formats: {\r\n        weekdayFormat: (date, culture, localizer) =>\r\n        localizer.format(date, 'dddd', culture),\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  function openModal(e){\r\n    ReactDOM.render(\r\n      <React.StrictMode>\r\n        <div>\r\n          <CardConsulta id_consulta={e.id} id_especialidade={e.id_especialidade} id_medico={e.id_medico} id_paciente={e.id_paciente} status={e.status} data={e.dt_hr_consulta} url_consulta={e.url_consulta} />\r\n        </div>\r\n      </React.StrictMode>\r\n    )\r\n  }\r\n\r\n  // const handleSelect = ({ start, end }) => {\r\n  //   const title = window.prompt(\"New Event name\");\r\n  //   if (title)\r\n  //     setEventsData([\r\n  //       ...eventsData,\r\n  //       {\r\n  //         start,\r\n  //         end,\r\n  //         title\r\n  //       }\r\n  //     ]);\r\n  // };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Calendar\r\n        views={[\"day\", \"agenda\", \"work_week\", \"month\"]}\r\n        selectable\r\n        localizer={localizer}\r\n        defaultDate={defaultDate}\r\n        defaultView=\"month\"\r\n        events={eventsData}\r\n        formats={formats}\r\n        style={{ height: \"70vh\", width: \"100%\" }}\r\n        onSelectEvent={(event) => openModal(event)}\r\n        // onSelectSlot={handleSelect}\r\n      />\r\n\r\n\r\n      {/* CardConsulta({id_consulta, id_especialidade, id_medico, id_paciente, status, data, url_consulta}) */}\r\n      {/* <CardConsulta \r\n        style={{minWidth: '200px'}}\r\n        key={appointment.id} \r\n        id_consulta={appointment.id} \r\n        status={appointment.status} \r\n        id_especialidade={appointment.id_especialidade} \r\n        id_medico={appointment.id_medico} \r\n        id_paciente={appointment.id_paciente} \r\n        data={appointment.dt_hr_consulta}\r\n        url_consulta={appointment.url_consulta}\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Button from '@mui/material/Button';\r\nimport NavBar from '../../components/NavBar'\r\nimport BaseLayout from '../../layouts/BaseLayout'\r\nimport ReactBigCalendar from '../../components/ReactBigCalendar'\r\n\r\nfunction Agenda(){\r\n    const navigate = useNavigate()\r\n    return(\r\n        <>\r\n            <NavBar>\r\n                <BaseLayout title=\"Agenda\">\r\n                    <ReactBigCalendar/>\r\n                </BaseLayout>\r\n            </NavBar>\r\n        </>\r\n    )\r\n}\r\nexport default Agenda;","import * as React from 'react';\r\nimport {useState, useEffect} from 'react'\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport dayjs from 'dayjs'\r\n\r\nimport api from '../../services/api'\r\n\r\nconst columns = [\r\n  { id: 'especialidade', label: 'Especialidade', minWidth: 170 },\r\n  { id: 'medico', label: 'Médico', minWidth: 170 },\r\n  { id: 'status', label: 'Status Consulta', minWidth: 170 },\r\n  { id: 'dt_hr_consulta', label: 'Data', minWidth: 170 },\r\n];\r\n\r\n\r\nexport default function PatientsAppointmentHistory() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [rows, setRows] = useState([])\r\n\r\n  useEffect(() => {\r\n    getAppointments()\r\n}, [])\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  async function getAppointments(){\r\n    const result = await api.get('/consultas/getPatientAppointments')\r\n    setRows(result.data)\r\n  }\r\n  \r\n  setInterval(getAppointments, 60000)\r\n  \r\n  return (\r\n    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n      <TableContainer sx={{ maxHeight: 440 }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n\r\n                          {(column.id === 'especialidade') && value}\r\n\r\n                          {column.id === 'medico' && value}\r\n\r\n                          {column.id === 'status' && value}\r\n\r\n                          {column.id === 'dt_hr_consulta' && \r\n                            dayjs(value).format('DD/MM/YYYY')\r\n                          }\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}","import * as React from 'react';\r\nimport {useState, useEffect} from 'react'\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport dayjs from 'dayjs'\r\n\r\nimport api from '../../services/api'\r\n\r\nconst columns = [\r\n  { id: 'especialidade', label: 'Especialidade', minWidth: 170 },\r\n  { id: 'paciente', label: 'Paciente', minWidth: 170 },\r\n  { id: 'status', label: 'Status', minWidth: 170 },\r\n  { id: 'dt_hr_consulta', label: 'Data', minWidth: 170 },\r\n];\r\n\r\n\r\nexport default function DoctorsAppointmentHistory() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [rows, setRows] = useState([])\r\n\r\n  useEffect(() => {\r\n    getAppointments()\r\n}, [])\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  async function getAppointments(){\r\n    const result = await api.get('/consultas/getDoctorAppointments')\r\n    setRows(result.data)\r\n  }\r\n\r\n  setInterval(getAppointments, 60000)\r\n\r\n  return (\r\n    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n      <TableContainer sx={{ maxHeight: 440 }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n\r\n                          {(column.id === 'especialidade') && value}\r\n\r\n                          {column.id === 'paciente' && value}\r\n\r\n                          {column.id === 'status' && value}\r\n\r\n                          {column.id === 'dt_hr_consulta' && \r\n                            dayjs(value).format('DD/MM/YYYY')\r\n                          }\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}","import React from 'react';\r\nimport {useState, useEffect} from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Button from '@mui/material/Button';\r\nimport NavBar from '../../components/NavBar'\r\nimport BaseLayout from '../../layouts/BaseLayout'\r\nimport PatientsAppointmentHistory from '../../components/PatientsAppointmentHistory'\r\nimport DoctorsAppointmentHistory from '../../components/DoctorsAppointmentHistory'\r\nimport api from '../../services/api'\r\n\r\nfunction HistoricoConsultas(){\r\n    const navigate = useNavigate()\r\n    const [typeUser, setTypeUser] = useState()\r\n\r\n    useEffect(() => {\r\n        getType()\r\n    }, [])\r\n\r\n    async function getType(){\r\n        const result = await api.get('/usuario/getType')\r\n        setTypeUser(result.data.tipo)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <NavBar>\r\n                <BaseLayout title=\"Historico de Consultas\">\r\n                    {typeUser === 'Medico' && <DoctorsAppointmentHistory/> }\r\n                    {typeUser === 'Paciente' && <PatientsAppointmentHistory/> }\r\n                </BaseLayout>\r\n            </NavBar>\r\n        </>\r\n    )\r\n}\r\nexport default HistoricoConsultas;","import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nimport { Navigate, Routes } from 'react-router-dom'\r\nimport AuthProvider, { useAuthContext } from './context/AuthContext'\r\n\r\nimport Cadastro from './pages/Cadastro'\r\nimport Cadastro2 from './pages/Cadastro/Cadastro2'\r\nimport Cadastro3 from './pages/Cadastro/Cadastro3'\r\nimport Login from './pages/Login'\r\nimport Login2 from './pages/Login/Login'\r\nimport Dashboard from './pages/Dashboard'\r\nimport Perfil from './pages/Perfil'\r\nimport Configuracoes from './pages/Configuracoes'\r\nimport DisponibilidadeMedica from './pages/Configuracoes/DisponibilidadeMedica'\r\nimport UsuariosListagem from './pages/UsuariosListagem'\r\nimport CheckNewDoctors from './pages/CheckNewDoctors'\r\nimport UsuariosEditar from './pages/UsuariosListagem/UsuariosEditar'\r\nimport UsuariosCadastrar from './pages/UsuariosListagem/UsuariosCadastrar'\r\nimport ResetPassword from './pages/ResetPassword'\r\nimport AgendarConsulta from './pages/Consultas/AgendarConsulta'\r\nimport MinhasConsultas from './pages/Consultas/MinhasConsultas'\r\nimport RecoverAccount from './pages/RecoverAccount'\r\nimport ConsultasListagem from './pages/UsuariosListagem/ConsultasListagem'\r\nimport EditarConsulta from './pages/UsuariosListagem/ConsultasListagem/EditarConsulta'\r\nimport AdicionarConsulta from './pages/UsuariosListagem/ConsultasListagem/AdicionarConsulta'\r\nimport AdicionarConsulta2 from './pages/UsuariosListagem/ConsultasListagem/AdicionarConsulta2'\r\nimport NotFoundPage from './pages/NotFoundPage'\r\nimport Agenda from './pages/Agenda'\r\nimport HistoricoConsultas from './pages/HistoricoConsultas'\r\n\r\nexport default function AppRoutes() {\r\n    const Private = ({children}) => {\r\n        const { authenticated, loading } = useAuthContext()\r\n\r\n        if (loading) {\r\n            return <div>Carregando...</div>\r\n        }\r\n        \r\n        if(!authenticated) {\r\n            return <Navigate to=\"/\"/>\r\n        }\r\n\r\n        return children\r\n    }\r\n    \r\n    const Logged = ({children}) => {\r\n        const { authenticated } = useAuthContext()\r\n\r\n        if(authenticated) {\r\n            return <Navigate to=\"/inicio\"/>\r\n        }\r\n        return children\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <AuthProvider>\r\n                <Routes>\r\n                    {/* Views Refatoradas */}\r\n                    <Route path='/login' exact element={<Login />} /> {/* View Antiga */}\r\n                    <Route path='/' exact element={<Logged><Login2/></Logged>}/>\r\n\r\n                    <Route path='/cadastroAntigo' exact element={<Cadastro/>} /> {/* View Antiga */}\r\n                    <Route path='/cadastro1' exact element={<Logged><Cadastro2/></Logged>} />\r\n                    <Route path='/cadastro' exact element={<Logged><Cadastro3/></Logged>} />\r\n                    \r\n                    <Route path='/recuperar-senha' exact element={<RecoverAccount/>} />\r\n                    <Route path='/usuario/redefinir_senha/:token' exact element={<ResetPassword/>} />\r\n                    {/* <Route path='/login' exact element={Login} /> Mesma página que a rota raiz */}\r\n                    <Route path='/inicio' exact element={<Private><Dashboard /></Private>} /> \r\n                    <Route path='/perfil' exact element={<Private><Perfil/></Private>} />\r\n                    {/* <Route path='/config' exact element={<Private><Configuracoes/></Private>} /> */}\r\n                    <Route path='/config/disponibilidademedica' exact element={<Private><DisponibilidadeMedica/></Private>} />\r\n                    <Route path='/admin' exact element={<Private><UsuariosListagem/></Private>} /> \r\n                    <Route path='/novos_medicos' exact element={<Private><CheckNewDoctors/></Private>} /> \r\n                    <Route path='/usuario/editar/:id' exact element={<Private><UsuariosEditar/></Private>} /> {/* Falta resolver o problema do value={xxx} */}\r\n                    {/* <Route path='/usuario/:id' exact element={UsuariosEditar} /> Mesma página que a rota usuario/editar/:id */}\r\n                    {/* <Route path='/consulta/agendar' exact element={<Private><AgendarConsulta/></Private>} /> */}\r\n                    <Route path='/consultas' exact element={<Private><MinhasConsultas/></Private>} />\r\n                    <Route path='/agenda' exact element={<Private><Agenda/></Private>} />\r\n                    {/* <Route path='/consulta/editar/:id' exact element={<Private><EditarConsulta/></Private>} /> */}\r\n                    <Route path='/consulta/adicionar' exact element={<Private><AdicionarConsulta2/></Private>} />\r\n                    <Route path='/usuario/consultas/:id' exact element={<Private><ConsultasListagem/></Private>} />\r\n                    {/* <Route path='/usuario/cadastrar' exact element={<Private><UsuariosCadastrar/></Private>} /> */}\r\n                    <Route path='/historico' exact element={<Private><HistoricoConsultas/></Private>} />\r\n                    <Route path=\"*\" element={<Private><NotFoundPage/></Private>} />\r\n                </Routes>\r\n            </AuthProvider>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { CssBaseline, ThemeProvider } from '@mui/material'\r\n\r\nimport { theme } from './themes'\r\nimport AppRoutes from './routes'\r\nimport DrawerProvider from './context/DrawerContext'\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline>\r\n        <DrawerProvider>\r\n          <AppRoutes />\r\n        </DrawerProvider>\r\n      </CssBaseline>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}